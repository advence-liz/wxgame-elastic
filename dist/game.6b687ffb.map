{"version":3,"sources":["src/base/matter.js","src/base/Resource.js","src/base/ResourceLoader.js","src/base/DataStore.js","src/base/Sprite.js","src/sprite/BackGround.js","src/sprite/StartButton.js","src/sprite/Score.js","src/base/Body.js","src/body/Block.js","src/body/Border.js","src/body/Bridge.js","src/body/Aim.js","src/Director.js","App.js","game.js"],"names":["f","exports","module","define","amd","g","window","global","self","Matter","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","_dereq_","Body","Vertices","Vector","Sleeping","Render","Common","Bounds","Axes","_inertiaScale","_nextCollidingGroupId","_nextNonCollidingGroupId","_nextCategory","create","options","defaults","id","nextId","type","label","parts","plugin","angle","vertices","fromPath","position","x","y","force","torque","positionImpulse","constraintImpulse","totalContacts","speed","angularSpeed","velocity","angularVelocity","isSensor","isStatic","isSleeping","motion","sleepThreshold","density","restitution","friction","frictionStatic","frictionAir","collisionFilter","category","mask","group","slop","timeScale","render","visible","opacity","sprite","xScale","yScale","xOffset","yOffset","lineWidth","body","extend","_initProperties","nextGroup","isNonColliding","nextCategory","set","bounds","positionPrev","clone","anglePrev","parent","rotate","axes","update","area","mass","inertia","defaultFillStyle","choose","defaultStrokeStyle","fillStyle","strokeStyle","min","max","settings","value","property","hasOwnProperty","setStatic","setMass","setDensity","setInertia","setVertices","setPosition","setAngle","setVelocity","setAngularVelocity","setParts","part","_original","inverseMass","inverseInertia","Infinity","moment","fromVertices","centre","translate","autoHull","slice","push","concat","clockwiseSort","hull","hullCentre","total","_totalProperties","delta","sub","rotateAbout","magnitude","Math","abs","translation","add","rotation","point","cos","sin","dx","dy","scale","scaleX","scaleY","totalArea","totalInertia","circleRadius","deltaTime","correction","deltaTimeSquared","pow","velocityPrevX","velocityPrevY","applyForce","offset","properties","mult","div","Composite","Events","isModified","bodies","constraints","composites","setModified","composite","updateParents","updateChildren","childComposite","object","objects","trigger","obj","warn","addBody","addConstraint","addComposite","constraint","remove","deep","removeBody","removeConstraint","removeComposite","compositeA","compositeB","indexOf","removeCompositeAt","splice","removeBodyAt","removeConstraintAt","clear","keepStatic","filter","allBodies","allConstraints","allComposites","get","toString","move","rebase","recursive","World","Constraint","gravity","Contact","vertex","normalImpulse","tangentImpulse","index","Detector","SAT","Pair","collisions","broadphasePairs","engine","pairsTable","pairs","table","bodyA","bodyB","canCollide","overlaps","j","partA","k","partB","pairId","pair","previousCollision","isActive","collision","collides","collided","filterA","filterB","Grid","controller","detector","buckets","pairsList","bucketWidth","bucketHeight","grid","forceUpdate","col","row","world","bucket","bucketId","gridChanged","newRegion","_getRegion","region","union","_regionUnion","startCol","endCol","startRow","endRow","_getBucketId","isInsideNewRegion","isInsideOldRegion","_bucketRemoveBody","_createBucket","_bucketAddBody","_createActivePairsList","regionA","regionB","_createRegion","floor","column","pairKeys","keys","timestamp","parentA","parentB","contacts","activeContacts","separation","timeCreated","timeUpdated","supports","support","contactId","contact","depth","setActive","Pairs","_pairMaxIdleLife","list","collisionStart","collisionActive","collisionEnd","activePairIds","removeOld","indexesToRemove","pairIndex","Query","Bodies","ray","startPoint","endPoint","rayWidth","rayAngle","rayLength","rayX","rayY","rectangle","outside","result","contains","Resolver","_restingThresh","_restingThreshTangent","_positionDampen","_positionWarming","_frictionNormalMultiplier","preSolvePosition","activeCount","solvePosition","normal","bodyBtoA","contactShare","contactCount","tempA","_temp","tempB","tempC","tempD","penetration","dot","postSolvePosition","preSolveVelocity","tangent","contactVertex","impulse","cross","solveVelocity","timeScaleSquared","tempE","offsetA","offsetB","velocityPointA","perp","velocityPointB","relativeVelocity","normalVelocity","tangentVelocity","tangentSpeed","tangentVelocityDirection","sign","normalForce","clamp","maxFriction","oAcN","oBcN","share","contactNormalImpulse","contactTangentImpulse","overlapAB","overlapBA","minOverlap","canReusePrevCol","axisBodyA","axisBody","axisBodyB","axisNumber","_overlapAxes","reused","overlap","axis","verticesB","_findSupports","verticesA","neg","projectionA","projectionB","Number","MAX_VALUE","_projectToAxis","projection","nearestDistance","vertexToBody","bodyAPosition","distance","vertexA","vertexB","prevIndex","nextIndex","_warming","_torqueDampen","_minLength","pointA","pointB","initialPointA","initialPointB","stiffness","damping","angularStiffness","angleA","angleB","anchors","preSolveAll","solveAll","fixedA","fixedB","solve","pointAWorld","pointBWorld","currentLength","difference","massTotal","inertiaTotal","resistanceTotal","zero","postSolveAll","MouseConstraint","Mouse","mouse","canvas","element","mouseConstraint","on","_triggerEvents","button","mouseEvents","sourceEvents","mousemove","mousedown","mouseup","clearSourceEvents","_nextId","_seed","_nowStartTime","Date","argsStart","args","deepClone","arguments","source","prop","constructor","Object","key","values","path","begin","end","split","val","shuffle","array","random","temp","choices","isElement","HTMLElement","nodeType","nodeName","isArray","prototype","isFunction","isPlainObject","isString","now","performance","webkitNow","_seededRandom","colorToNumber","colorString","replace","charAt","parseInt","logLevel","log","console","apply","Array","info","haystack","needle","map","func","mapped","topologicalSort","graph","visited","node","_topologicalSort","neighbors","neighbor","chain","funcs","_chained","lastResult","l","chainPathBefore","base","chainPathAfter","_requireGlobal","globalName","moduleName","Engine","Metrics","positionIterations","velocityIterations","constraintIterations","enableSleeping","events","timing","broadphase","renderDefaults","metrics","extended","event","_bodiesApplyGravity","_bodiesUpdate","afterCollisions","_bodiesClearForces","merge","engineA","engineB","gravityScale","worldBounds","eventNames","callback","names","name","off","join","callbacks","newCallbacks","eventClone","Plugin","version","uses","used","use","before","after","document","absolute","mousedownPosition","mouseupPosition","wheelDelta","pixelRatio","getAttribute","mousewheel","_getRelativeMousePosition","touches","changedTouches","preventDefault","detail","setElement","addEventListener","setOffset","setScale","elementBounds","getBoundingClientRect","rootNode","documentElement","parentNode","scrollX","pageXOffset","undefined","scrollLeft","scrollY","pageYOffset","scrollTop","pageX","left","pageY","top","clientWidth","width","clientHeight","height","_registry","register","isPlugin","registered","pluginVersion","versionParse","number","registeredVersion","resolve","dependency","dependencyParse","range","install","isUsed","isFor","parsed","for","versionSatisfies","plugins","dependencies","sortedDependencies","status","_warned","tracked","parsedBase","resolved","pattern","test","identifiers","isRange","isNaN","substr","operator","prerelease","rangeParsed","rangeParts","versionParsed","versionParts","Runner","_requestAnimationFrame","_cancelAnimationFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cancelAnimationFrame","mozCancelAnimationFrame","webkitCancelAnimationFrame","msCancelAnimationFrame","_frameTimeout","setTimeout","clearTimeout","fps","deltaSampleSize","counterTimestamp","frameCounter","deltaHistory","timePrev","timeScalePrev","frameRequestId","isFixed","enabled","runner","deltaMin","deltaMax","run","time","tick","stop","start","_motionWakeThreshold","_motionSleepThreshold","_minBias","timeFactor","minMotion","maxMotion","sleepCounter","sleepingBody","movingBody","wasSleeping","decomp","chamfer","radius","quality","qualityMin","qualityMax","trapezoid","slope","roof","x1","x2","x3","verticesPath","circle","maxSides","sides","ceil","polygon","theta","PI","xx","yy","toFixed","vertexSets","flagInternal","removeCollinear","minimumArea","isConvex","v","z","concave","makeCCW","removeCollinearPoints","decomposed","quickDecomp","chunk","chunkVertices","coincident_max_dist","pav","pbv","da","magnitudeSquared","db","isInternal","Composites","stack","columns","rows","columnGap","rowGap","lastBody","maxHeight","bodyHeight","bodyWidth","xOffsetA","yOffsetA","xOffsetB","yOffsetB","bodyAHeight","bodyAWidth","bodyBHeight","bodyBWidth","mesh","crossBrace","bodyC","pyramid","actualRows","lastBodyWidth","newtonsCradle","size","car","wheelSize","wheelBase","wheelAOffset","wheelBOffset","wheelYOffset","wheelA","wheelB","axelA","axelB","softBody","particleRadius","particleOptions","constraintOptions","normalise","gradient","boundsA","boundsB","vector","shift","deltaX","deltaY","Svg","pathToVertices","sampleLength","il","segment","segments","segmentsQueue","lastSegment","lastPoint","segmentIndex","points","lx","ly","addPoint","px","py","pathSegType","isRelative","addSegmentPoint","segType","pathSegTypeAsLetter","toUpperCase","_svgPathToAbsolute","getTotalLength","pathSegList","numberOfItems","getItem","getPathSegAtLength","getPointAtLength","x0","y0","y1","y2","segs","len","seg","replaceItem","createSVGPathSegMovetoAbs","createSVGPathSegLinetoAbs","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoVerticalAbs","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegArcAbs","r1","r2","largeArcFlag","sweepFlag","sqrt","output","vectorA","vectorB","cross3","vectorC","scalar","negate","atan2","pathPattern","match","parseFloat","mean","average","signed","numerator","denominator","vertice","nextVertice","newVertices","prevVertex","nextVertex","currentRadius","prevNormal","nextNormal","diagonalRadius","radiusVector","midNormal","scaledVertex","precision","alpha","acos","sort","flag","upper","lower","pop","RenderPixi","background","wireframeBackground","hasBounds","wireframes","showSleeping","showDebug","showBroadphase","showBounds","showVelocity","showCollisions","showSeparations","showAxes","showPositions","showAngleIndicator","showIds","showShadows","showVertexNumbers","showConvexHulls","showInternalEdges","showMousePosition","_createCanvas","context","getContext","textures","setPixelRatio","appendChild","loop","_getPixelRatio","setAttribute","style","lookAt","padding","center","viewHeight","viewWidth","outerRatio","innerRatio","startViewTransform","boundsWidth","boundsHeight","boundsScaleX","boundsScaleY","endViewTransform","setTransform","currentBackground","_applyBackground","globalCompositeOperation","fillRect","bodyConvexHulls","bodyWireframes","bodyBounds","bodyAxes","bodyPositions","bodyVelocity","bodyIds","separations","vertexNumbers","mousePosition","debug","space","debugTimestamp","text","round","debugString","font","fillText","beginPath","arc","closePath","moveTo","coils","lineTo","stroke","fill","bodyShadows","distanceX","distanceY","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","globalAlpha","texture","_getTexture","drawImage","fontsize","fontfamily","family","color","maxWidth","content","textBaseline","textAlign","rect","corrected","normalPosX","normalPosY","bucketKeys","inspector","selected","item","data","setLineDash","selectStart","selectBounds","createElement","oncontextmenu","onselectstart","devicePixelRatio","backingStorePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","imagePath","image","Image","src","cssBackground","backgroundSize","renderer","container","spriteContainer","pixiOptions","transparent","view","antialias","backgroundColor","PIXI","WebGLRenderer","Container","sprites","primitives","addChild","children","removeChild","bgSprite","addChildAt","setBackground","isColor","Sprite","constraintRender","primitiveId","primitive","Graphics","beginFill","lineStyle","endFill","bodyRender","spriteId","_createBodySprite","_createBodyPrimitive","initialAngle","texturePath","anchor","strokeStyleIndicator","strokeStyleWireframe","strokeStyleWireframeIndicator","Texture","fromImage","Resources","ResourceLoader","imageCount","audioCount","Map","res","Audio","cb","loadCount","onload","DataStore","instance","isGameOver","scoreCount","ctx","img","w","h","srcX","srcY","srcW","srcH","getInstance","BackGround","physics","getImage","StartButton","Score","dataStore","Block","blockCount","blockMap","blockHPMax","lastBlockPositionX","lastBlockPositionY","blockArr","hp","block","increase","draw","Border","bottomHeight","leftWidth","borderBottom","borderLeft","borderRight","Bridge","bridge","Aim","ballRadius","baseBallX","baseBallY","balls","ballAppends","ballCount","ballAppendCount","isRending","isForce","inervalMax","drawBall","drawAim","ball","intervalCount","interval","setInterval","ballAppend","isBall","fixRate","sleeping","isWorldSleeping","clearInterval","eventHandler","play","clientX","clientY","offsetX","offsetY","Director","isReload","animationHandle","spriteDirect","upMove","App","director","spriteLoad","registerEvent","physicsDirect","autoplay","reload","wx","getElementById","createCanvas","createImage","createInnerAudioContext"],"mappings":"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","file":"game.6b687ffb.map","sourceRoot":"..","sourcesContent":["/**\n* matter-js 0.14.2 by @liabru 2018-06-11\n* http://brm.io/matter-js/\n* License MIT\n*/\n\n/**\n * The MIT License (MIT)\n * \n * Copyright (c) Liam Brummitt and contributors.\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Matter = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(_dereq_,module,exports){\n/**\n* The `Matter.Body` module contains methods for creating and manipulating body models.\n* A `Matter.Body` is a rigid body that can be simulated by a `Matter.Engine`.\n* Factories for commonly used body configurations (such as rectangles, circles and other polygons) can be found in the module `Matter.Bodies`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n\n* @class Body\n*/\n\nvar Body = {};\n\nmodule.exports = Body;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Render = _dereq_('../render/Render');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\n\n(function() {\n\n    Body._inertiaScale = 4;\n    Body._nextCollidingGroupId = 1;\n    Body._nextNonCollidingGroupId = -1;\n    Body._nextCategory = 0x0001;\n\n    /**\n     * Creates a new rigid body model. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * Vertices must be specified in clockwise order.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {body} body\n     */\n    Body.create = function(options) {\n        var defaults = {\n            id: Common.nextId(),\n            type: 'body',\n            label: 'Body',\n            parts: [],\n            plugin: {},\n            angle: 0,\n            vertices: Vertices.fromPath('L 0 0 L 40 0 L 40 40 L 0 40'),\n            position: { x: 0, y: 0 },\n            force: { x: 0, y: 0 },\n            torque: 0,\n            positionImpulse: { x: 0, y: 0 },\n            constraintImpulse: { x: 0, y: 0, angle: 0 },\n            totalContacts: 0,\n            speed: 0,\n            angularSpeed: 0,\n            velocity: { x: 0, y: 0 },\n            angularVelocity: 0,\n            isSensor: false,\n            isStatic: false,\n            isSleeping: false,\n            motion: 0,\n            sleepThreshold: 60,\n            density: 0.001,\n            restitution: 0,\n            friction: 0.1,\n            frictionStatic: 0.5,\n            frictionAir: 0.01,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            },\n            slop: 0.05,\n            timeScale: 1,\n            render: {\n                visible: true,\n                opacity: 1,\n                sprite: {\n                    xScale: 1,\n                    yScale: 1,\n                    xOffset: 0,\n                    yOffset: 0\n                },\n                lineWidth: 0\n            }\n        };\n\n        var body = Common.extend(defaults, options);\n\n        _initProperties(body, options);\n\n        return body;\n    };\n\n    /**\n     * Returns the next unique group index for which bodies will collide.\n     * If `isNonColliding` is `true`, returns the next unique group index for which bodies will _not_ collide.\n     * See `body.collisionFilter` for more information.\n     * @method nextGroup\n     * @param {bool} [isNonColliding=false]\n     * @return {Number} Unique group index\n     */\n    Body.nextGroup = function(isNonColliding) {\n        if (isNonColliding)\n            return Body._nextNonCollidingGroupId--;\n\n        return Body._nextCollidingGroupId++;\n    };\n\n    /**\n     * Returns the next unique category bitfield (starting after the initial default category `0x0001`).\n     * There are 32 available. See `body.collisionFilter` for more information.\n     * @method nextCategory\n     * @return {Number} Unique category bitfield\n     */\n    Body.nextCategory = function() {\n        Body._nextCategory = Body._nextCategory << 1;\n        return Body._nextCategory;\n    };\n\n    /**\n     * Initialises body properties.\n     * @method _initProperties\n     * @private\n     * @param {body} body\n     * @param {} [options]\n     */\n    var _initProperties = function(body, options) {\n        options = options || {};\n\n        // init required properties (order is important)\n        Body.set(body, {\n            bounds: body.bounds || Bounds.create(body.vertices),\n            positionPrev: body.positionPrev || Vector.clone(body.position),\n            anglePrev: body.anglePrev || body.angle,\n            vertices: body.vertices,\n            parts: body.parts || [body],\n            isStatic: body.isStatic,\n            isSleeping: body.isSleeping,\n            parent: body.parent || body\n        });\n\n        Vertices.rotate(body.vertices, body.angle, body.position);\n        Axes.rotate(body.axes, body.angle);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n\n        // allow options to override the automatically calculated properties\n        Body.set(body, {\n            axes: options.axes || body.axes,\n            area: options.area || body.area,\n            mass: options.mass || body.mass,\n            inertia: options.inertia || body.inertia\n        });\n\n        // render properties\n        var defaultFillStyle = (body.isStatic ? '#2e2b44' : Common.choose(['#006BA6', '#0496FF', '#FFBC42', '#D81159', '#8F2D56'])),\n            defaultStrokeStyle = '#000';\n        body.render.fillStyle = body.render.fillStyle || defaultFillStyle;\n        body.render.strokeStyle = body.render.strokeStyle || defaultStrokeStyle;\n        body.render.sprite.xOffset += -(body.bounds.min.x - body.position.x) / (body.bounds.max.x - body.bounds.min.x);\n        body.render.sprite.yOffset += -(body.bounds.min.y - body.position.y) / (body.bounds.max.y - body.bounds.min.y);\n    };\n\n    /**\n     * Given a property and a value (or map of), sets the property(s) on the body, using the appropriate setter functions if they exist.\n     * Prefer to use the actual setter functions in performance critical situations.\n     * @method set\n     * @param {body} body\n     * @param {} settings A property name (or map of properties and values) to set on the body.\n     * @param {} value The value to set if `settings` is a single property name.\n     */\n    Body.set = function(body, settings, value) {\n        var property;\n\n        if (typeof settings === 'string') {\n            property = settings;\n            settings = {};\n            settings[property] = value;\n        }\n\n        for (property in settings) {\n            value = settings[property];\n\n            if (!settings.hasOwnProperty(property))\n                continue;\n\n            switch (property) {\n\n            case 'isStatic':\n                Body.setStatic(body, value);\n                break;\n            case 'isSleeping':\n                Sleeping.set(body, value);\n                break;\n            case 'mass':\n                Body.setMass(body, value);\n                break;\n            case 'density':\n                Body.setDensity(body, value);\n                break;\n            case 'inertia':\n                Body.setInertia(body, value);\n                break;\n            case 'vertices':\n                Body.setVertices(body, value);\n                break;\n            case 'position':\n                Body.setPosition(body, value);\n                break;\n            case 'angle':\n                Body.setAngle(body, value);\n                break;\n            case 'velocity':\n                Body.setVelocity(body, value);\n                break;\n            case 'angularVelocity':\n                Body.setAngularVelocity(body, value);\n                break;\n            case 'parts':\n                Body.setParts(body, value);\n                break;\n            default:\n                body[property] = value;\n\n            }\n        }\n    };\n\n    /**\n     * Sets the body as static, including isStatic flag and setting mass and inertia to Infinity.\n     * @method setStatic\n     * @param {body} body\n     * @param {bool} isStatic\n     */\n    Body.setStatic = function(body, isStatic) {\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.isStatic = isStatic;\n\n            if (isStatic) {\n                part._original = {\n                    restitution: part.restitution,\n                    friction: part.friction,\n                    mass: part.mass,\n                    inertia: part.inertia,\n                    density: part.density,\n                    inverseMass: part.inverseMass,\n                    inverseInertia: part.inverseInertia\n                };\n\n                part.restitution = 0;\n                part.friction = 1;\n                part.mass = part.inertia = part.density = Infinity;\n                part.inverseMass = part.inverseInertia = 0;\n\n                part.positionPrev.x = part.position.x;\n                part.positionPrev.y = part.position.y;\n                part.anglePrev = part.angle;\n                part.angularVelocity = 0;\n                part.speed = 0;\n                part.angularSpeed = 0;\n                part.motion = 0;\n            } else if (part._original) {\n                part.restitution = part._original.restitution;\n                part.friction = part._original.friction;\n                part.mass = part._original.mass;\n                part.inertia = part._original.inertia;\n                part.density = part._original.density;\n                part.inverseMass = part._original.inverseMass;\n                part.inverseInertia = part._original.inverseInertia;\n\n                delete part._original;\n            }\n        }\n    };\n\n    /**\n     * Sets the mass of the body. Inverse mass, density and inertia are automatically updated to reflect the change.\n     * @method setMass\n     * @param {body} body\n     * @param {number} mass\n     */\n    Body.setMass = function(body, mass) {\n        var moment = body.inertia / (body.mass / 6);\n        body.inertia = moment * (mass / 6);\n        body.inverseInertia = 1 / body.inertia;\n\n        body.mass = mass;\n        body.inverseMass = 1 / body.mass;\n        body.density = body.mass / body.area;\n    };\n\n    /**\n     * Sets the density of the body. Mass and inertia are automatically updated to reflect the change.\n     * @method setDensity\n     * @param {body} body\n     * @param {number} density\n     */\n    Body.setDensity = function(body, density) {\n        Body.setMass(body, density * body.area);\n        body.density = density;\n    };\n\n    /**\n     * Sets the moment of inertia (i.e. second moment of area) of the body of the body. \n     * Inverse inertia is automatically updated to reflect the change. Mass is not changed.\n     * @method setInertia\n     * @param {body} body\n     * @param {number} inertia\n     */\n    Body.setInertia = function(body, inertia) {\n        body.inertia = inertia;\n        body.inverseInertia = 1 / body.inertia;\n    };\n\n    /**\n     * Sets the body's vertices and updates body properties accordingly, including inertia, area and mass (with respect to `body.density`).\n     * Vertices will be automatically transformed to be orientated around their centre of mass as the origin.\n     * They are then automatically translated to world space based on `body.position`.\n     *\n     * The `vertices` argument should be passed as an array of `Matter.Vector` points (or a `Matter.Vertices` array).\n     * Vertices must form a convex hull, concave hulls are not supported.\n     *\n     * @method setVertices\n     * @param {body} body\n     * @param {vector[]} vertices\n     */\n    Body.setVertices = function(body, vertices) {\n        // change vertices\n        if (vertices[0].body === body) {\n            body.vertices = vertices;\n        } else {\n            body.vertices = Vertices.create(vertices, body);\n        }\n\n        // update properties\n        body.axes = Axes.fromVertices(body.vertices);\n        body.area = Vertices.area(body.vertices);\n        Body.setMass(body, body.density * body.area);\n\n        // orient vertices around the centre of mass at origin (0, 0)\n        var centre = Vertices.centre(body.vertices);\n        Vertices.translate(body.vertices, centre, -1);\n\n        // update inertia while vertices are at origin (0, 0)\n        Body.setInertia(body, Body._inertiaScale * Vertices.inertia(body.vertices, body.mass));\n\n        // update geometry\n        Vertices.translate(body.vertices, body.position);\n        Bounds.update(body.bounds, body.vertices, body.velocity);\n    };\n\n    /**\n     * Sets the parts of the `body` and updates mass, inertia and centroid.\n     * Each part will have its parent set to `body`.\n     * By default the convex hull will be automatically computed and set on `body`, unless `autoHull` is set to `false.`\n     * Note that this method will ensure that the first part in `body.parts` will always be the `body`.\n     * @method setParts\n     * @param {body} body\n     * @param [body] parts\n     * @param {bool} [autoHull=true]\n     */\n    Body.setParts = function(body, parts, autoHull) {\n        var i;\n\n        // add all the parts, ensuring that the first part is always the parent body\n        parts = parts.slice(0);\n        body.parts.length = 0;\n        body.parts.push(body);\n        body.parent = body;\n\n        for (i = 0; i < parts.length; i++) {\n            var part = parts[i];\n            if (part !== body) {\n                part.parent = body;\n                body.parts.push(part);\n            }\n        }\n\n        if (body.parts.length === 1)\n            return;\n\n        autoHull = typeof autoHull !== 'undefined' ? autoHull : true;\n\n        // find the convex hull of all parts to set on the parent body\n        if (autoHull) {\n            var vertices = [];\n            for (i = 0; i < parts.length; i++) {\n                vertices = vertices.concat(parts[i].vertices);\n            }\n\n            Vertices.clockwiseSort(vertices);\n\n            var hull = Vertices.hull(vertices),\n                hullCentre = Vertices.centre(hull);\n\n            Body.setVertices(body, hull);\n            Vertices.translate(body.vertices, hullCentre);\n        }\n\n        // sum the properties of all compound parts of the parent body\n        var total = Body._totalProperties(body);\n\n        body.area = total.area;\n        body.parent = body;\n        body.position.x = total.centre.x;\n        body.position.y = total.centre.y;\n        body.positionPrev.x = total.centre.x;\n        body.positionPrev.y = total.centre.y;\n\n        Body.setMass(body, total.mass);\n        Body.setInertia(body, total.inertia);\n        Body.setPosition(body, total.centre);\n    };\n\n    /**\n     * Sets the position of the body instantly. Velocity, angle, force etc. are unchanged.\n     * @method setPosition\n     * @param {body} body\n     * @param {vector} position\n     */\n    Body.setPosition = function(body, position) {\n        var delta = Vector.sub(position, body.position);\n        body.positionPrev.x += delta.x;\n        body.positionPrev.y += delta.y;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.position.x += delta.x;\n            part.position.y += delta.y;\n            Vertices.translate(part.vertices, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Sets the angle of the body instantly. Angular velocity, position, force etc. are unchanged.\n     * @method setAngle\n     * @param {body} body\n     * @param {number} angle\n     */\n    Body.setAngle = function(body, angle) {\n        var delta = angle - body.angle;\n        body.anglePrev += delta;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n            part.angle += delta;\n            Vertices.rotate(part.vertices, delta, body.position);\n            Axes.rotate(part.axes, delta);\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n            if (i > 0) {\n                Vector.rotateAbout(part.position, delta, body.position, part.position);\n            }\n        }\n    };\n\n    /**\n     * Sets the linear velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setVelocity\n     * @param {body} body\n     * @param {vector} velocity\n     */\n    Body.setVelocity = function(body, velocity) {\n        body.positionPrev.x = body.position.x - velocity.x;\n        body.positionPrev.y = body.position.y - velocity.y;\n        body.velocity.x = velocity.x;\n        body.velocity.y = velocity.y;\n        body.speed = Vector.magnitude(body.velocity);\n    };\n\n    /**\n     * Sets the angular velocity of the body instantly. Position, angle, force etc. are unchanged. See also `Body.applyForce`.\n     * @method setAngularVelocity\n     * @param {body} body\n     * @param {number} velocity\n     */\n    Body.setAngularVelocity = function(body, velocity) {\n        body.anglePrev = body.angle - velocity;\n        body.angularVelocity = velocity;\n        body.angularSpeed = Math.abs(body.angularVelocity);\n    };\n\n    /**\n     * Moves a body by a given vector relative to its current position, without imparting any velocity.\n     * @method translate\n     * @param {body} body\n     * @param {vector} translation\n     */\n    Body.translate = function(body, translation) {\n        Body.setPosition(body, Vector.add(body.position, translation));\n    };\n\n    /**\n     * Rotates a body by a given angle relative to its current angle, without imparting any angular velocity.\n     * @method rotate\n     * @param {body} body\n     * @param {number} rotation\n     * @param {vector} [point]\n     */\n    Body.rotate = function(body, rotation, point) {\n        if (!point) {\n            Body.setAngle(body, body.angle + rotation);\n        } else {\n            var cos = Math.cos(rotation),\n                sin = Math.sin(rotation),\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.setAngle(body, body.angle + rotation);\n        }\n    };\n\n    /**\n     * Scales the body, including updating physical properties (mass, area, axes, inertia), from a world-space point (default is body centre).\n     * @method scale\n     * @param {body} body\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} [point]\n     */\n    Body.scale = function(body, scaleX, scaleY, point) {\n        var totalArea = 0,\n            totalInertia = 0;\n\n        point = point || body.position;\n\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            // scale vertices\n            Vertices.scale(part.vertices, scaleX, scaleY, point);\n\n            // update properties\n            part.axes = Axes.fromVertices(part.vertices);\n            part.area = Vertices.area(part.vertices);\n            Body.setMass(part, body.density * part.area);\n\n            // update inertia (requires vertices to be at origin)\n            Vertices.translate(part.vertices, { x: -part.position.x, y: -part.position.y });\n            Body.setInertia(part, Body._inertiaScale * Vertices.inertia(part.vertices, part.mass));\n            Vertices.translate(part.vertices, { x: part.position.x, y: part.position.y });\n\n            if (i > 0) {\n                totalArea += part.area;\n                totalInertia += part.inertia;\n            }\n\n            // scale position\n            part.position.x = point.x + (part.position.x - point.x) * scaleX;\n            part.position.y = point.y + (part.position.y - point.y) * scaleY;\n\n            // update bounds\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n\n        // handle parent body\n        if (body.parts.length > 1) {\n            body.area = totalArea;\n\n            if (!body.isStatic) {\n                Body.setMass(body, body.density * totalArea);\n                Body.setInertia(body, totalInertia);\n            }\n        }\n\n        // handle circles\n        if (body.circleRadius) { \n            if (scaleX === scaleY) {\n                body.circleRadius *= scaleX;\n            } else {\n                // body is no longer a circle\n                body.circleRadius = null;\n            }\n        }\n    };\n\n    /**\n     * Performs a simulation step for the given `body`, including updating position and angle using Verlet integration.\n     * @method update\n     * @param {body} body\n     * @param {number} deltaTime\n     * @param {number} timeScale\n     * @param {number} correction\n     */\n    Body.update = function(body, deltaTime, timeScale, correction) {\n        var deltaTimeSquared = Math.pow(deltaTime * timeScale * body.timeScale, 2);\n\n        // from the previous step\n        var frictionAir = 1 - body.frictionAir * timeScale * body.timeScale,\n            velocityPrevX = body.position.x - body.positionPrev.x,\n            velocityPrevY = body.position.y - body.positionPrev.y;\n\n        // update velocity with Verlet integration\n        body.velocity.x = (velocityPrevX * frictionAir * correction) + (body.force.x / body.mass) * deltaTimeSquared;\n        body.velocity.y = (velocityPrevY * frictionAir * correction) + (body.force.y / body.mass) * deltaTimeSquared;\n\n        body.positionPrev.x = body.position.x;\n        body.positionPrev.y = body.position.y;\n        body.position.x += body.velocity.x;\n        body.position.y += body.velocity.y;\n\n        // update angular velocity with Verlet integration\n        body.angularVelocity = ((body.angle - body.anglePrev) * frictionAir * correction) + (body.torque / body.inertia) * deltaTimeSquared;\n        body.anglePrev = body.angle;\n        body.angle += body.angularVelocity;\n\n        // track speed and acceleration\n        body.speed = Vector.magnitude(body.velocity);\n        body.angularSpeed = Math.abs(body.angularVelocity);\n\n        // transform the body geometry\n        for (var i = 0; i < body.parts.length; i++) {\n            var part = body.parts[i];\n\n            Vertices.translate(part.vertices, body.velocity);\n            \n            if (i > 0) {\n                part.position.x += body.velocity.x;\n                part.position.y += body.velocity.y;\n            }\n\n            if (body.angularVelocity !== 0) {\n                Vertices.rotate(part.vertices, body.angularVelocity, body.position);\n                Axes.rotate(part.axes, body.angularVelocity);\n                if (i > 0) {\n                    Vector.rotateAbout(part.position, body.angularVelocity, body.position, part.position);\n                }\n            }\n\n            Bounds.update(part.bounds, part.vertices, body.velocity);\n        }\n    };\n\n    /**\n     * Applies a force to a body from a given world-space position, including resulting torque.\n     * @method applyForce\n     * @param {body} body\n     * @param {vector} position\n     * @param {vector} force\n     */\n    Body.applyForce = function(body, position, force) {\n        body.force.x += force.x;\n        body.force.y += force.y;\n        var offset = { x: position.x - body.position.x, y: position.y - body.position.y };\n        body.torque += offset.x * force.y - offset.y * force.x;\n    };\n\n    /**\n     * Returns the sums of the properties of all compound parts of the parent body.\n     * @method _totalProperties\n     * @private\n     * @param {body} body\n     * @return {}\n     */\n    Body._totalProperties = function(body) {\n        // from equations at:\n        // https://ecourses.ou.edu/cgi-bin/ebook.cgi?doc=&topic=st&chap_sec=07.2&page=theory\n        // http://output.to/sideway/default.asp?qno=121100087\n\n        var properties = {\n            mass: 0,\n            area: 0,\n            inertia: 0,\n            centre: { x: 0, y: 0 }\n        };\n\n        // sum the properties of all compound parts of the parent body\n        for (var i = body.parts.length === 1 ? 0 : 1; i < body.parts.length; i++) {\n            var part = body.parts[i],\n                mass = part.mass !== Infinity ? part.mass : 1;\n\n            properties.mass += mass;\n            properties.area += part.area;\n            properties.inertia += part.inertia;\n            properties.centre = Vector.add(properties.centre, Vector.mult(part.position, mass));\n        }\n\n        properties.centre = Vector.div(properties.centre, properties.mass);\n\n        return properties;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a body starts sleeping (where `this` is the body).\n    *\n    * @event sleepStart\n    * @this {body} The body that has started sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a body ends sleeping (where `this` is the body).\n    *\n    * @event sleepEnd\n    * @this {body} The body that has ended sleeping\n    * @param {} event An event object\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Body.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"body\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Body\"\n     */\n\n    /**\n     * An array of bodies that make up this body. \n     * The first body in the array must always be a self reference to the current body instance.\n     * All bodies in the `parts` array together form a single rigid compound body.\n     * Parts are allowed to overlap, have gaps or holes or even form concave bodies.\n     * Parts themselves should never be added to a `World`, only the parent body should be.\n     * Use `Body.setParts` when setting parts to ensure correct updates of all properties.\n     *\n     * @property parts\n     * @type body[]\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n    /**\n     * A self reference if the body is _not_ a part of another body.\n     * Otherwise this is a reference to the body that this is a part of.\n     * See `body.parts`.\n     *\n     * @property parent\n     * @type body\n     */\n\n    /**\n     * A `Number` specifying the angle of the body, in radians.\n     *\n     * @property angle\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An array of `Vector` objects that specify the convex hull of the rigid body.\n     * These should be provided about the origin `(0, 0)`. E.g.\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * When passed via `Body.create`, the vertices are translated relative to `body.position` (i.e. world-space, and constantly updated by `Body.update` during simulation).\n     * The `Vector` objects are also augmented with additional properties required for efficient collision detection. \n     *\n     * Other properties such as `inertia` and `bounds` are automatically calculated from the passed vertices (unless provided via `options`).\n     * Concave hulls are not currently supported. The module `Matter.Vertices` contains useful methods for working with vertices.\n     *\n     * @property vertices\n     * @type vector[]\n     */\n\n    /**\n     * A `Vector` that specifies the current world-space position of the body.\n     *\n     * @property position\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the force to apply in the current step. It is zeroed after every `Body.update`. See also `Body.applyForce`.\n     *\n     * @property force\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the torque (turning force) to apply in the current step. It is zeroed after every `Body.update`.\n     *\n     * @property torque\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.velocity`).\n     *\n     * @readOnly\n     * @property speed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular speed of the body after the last `Body.update`. It is read-only and always positive (it's the magnitude of `body.angularVelocity`).\n     *\n     * @readOnly\n     * @property angularSpeed\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Vector` that _measures_ the current velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's velocity directly, you should either apply a force or simply change the body's `position` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property velocity\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that _measures_ the current angular velocity of the body after the last `Body.update`. It is read-only. \n     * If you need to modify a body's angular velocity directly, you should apply a torque or simply change the body's `angle` (as the engine uses position-Verlet integration).\n     *\n     * @readOnly\n     * @property angularVelocity\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A flag that indicates whether a body is considered static. A static body can never change position or angle and is completely fixed.\n     * If you need to set a body as static after its creation, you should use `Body.setStatic` as this requires more than just setting this flag.\n     *\n     * @property isStatic\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether a body is a sensor. Sensor triggers collision events, but doesn't react with colliding body physically.\n     *\n     * @property isSensor\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A flag that indicates whether the body is considered sleeping. A sleeping body acts similar to a static body, except it is only temporary and can be awoken.\n     * If you need to set a body as sleeping, you should use `Sleeping.set` as this requires more than just setting this flag.\n     *\n     * @property isSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that _measures_ the amount of movement a body currently has (a combination of `speed` and `angularSpeed`). It is read-only and always positive.\n     * It is used and updated by the `Matter.Sleeping` module during simulation to decide if a body has come to rest.\n     *\n     * @readOnly\n     * @property motion\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the number of updates in which this body must have near-zero velocity before it is set as sleeping by the `Matter.Sleeping` module (if sleeping is enabled by the engine).\n     *\n     * @property sleepThreshold\n     * @type number\n     * @default 60\n     */\n\n    /**\n     * A `Number` that defines the density of the body, that is its mass per unit area.\n     * If you pass the density via `Body.create` the `mass` property is automatically calculated for you based on the size (area) of the object.\n     * This is generally preferable to simply setting mass and allows for more intuitive definition of materials (e.g. rock has a higher density than wood).\n     *\n     * @property density\n     * @type number\n     * @default 0.001\n     */\n\n    /**\n     * A `Number` that defines the mass of the body, although it may be more appropriate to specify the `density` property instead.\n     * If you modify this value, you must also modify the `body.inverseMass` property (`1 / mass`).\n     *\n     * @property mass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse mass of the body (`1 / mass`).\n     * If you modify this value, you must also modify the `body.mass` property.\n     *\n     * @property inverseMass\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the moment of inertia (i.e. second moment of area) of the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) and density in `Body.create`.\n     * If you modify this value, you must also modify the `body.inverseInertia` property (`1 / inertia`).\n     *\n     * @property inertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the inverse moment of inertia of the body (`1 / inertia`).\n     * If you modify this value, you must also modify the `body.inertia` property.\n     *\n     * @property inverseInertia\n     * @type number\n     */\n\n    /**\n     * A `Number` that defines the restitution (elasticity) of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means collisions may be perfectly inelastic and no bouncing may occur. \n     * A value of `0.8` means the body may bounce back with approximately 80% of its kinetic energy.\n     * Note that collision response is based on _pairs_ of bodies, and that `restitution` values are _combined_ with the following formula:\n     *\n     *     Math.max(bodyA.restitution, bodyB.restitution)\n     *\n     * @property restitution\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that defines the friction of the body. The value is always positive and is in the range `(0, 1)`.\n     * A value of `0` means that the body may slide indefinitely.\n     * A value of `1` means the body may come to a stop almost instantly after a force is applied.\n     *\n     * The effects of the value may be non-linear. \n     * High values may be unstable depending on the body.\n     * The engine uses a Coulomb friction model including static and kinetic friction.\n     * Note that collision response is based on _pairs_ of bodies, and that `friction` values are _combined_ with the following formula:\n     *\n     *     Math.min(bodyA.friction, bodyB.friction)\n     *\n     * @property friction\n     * @type number\n     * @default 0.1\n     */\n\n    /**\n     * A `Number` that defines the static friction of the body (in the Coulomb friction model). \n     * A value of `0` means the body will never 'stick' when it is nearly stationary and only dynamic `friction` is used.\n     * The higher the value (e.g. `10`), the more force it will take to initially get the body moving when nearly stationary.\n     * This value is multiplied with the `friction` property to make it easier to change `friction` and maintain an appropriate amount of static friction.\n     *\n     * @property frictionStatic\n     * @type number\n     * @default 0.5\n     */\n\n    /**\n     * A `Number` that defines the air friction of the body (air resistance). \n     * A value of `0` means the body will never slow as it moves through space.\n     * The higher the value, the faster a body slows when moving through space.\n     * The effects of the value are non-linear. \n     *\n     * @property frictionAir\n     * @type number\n     * @default 0.01\n     */\n\n    /**\n     * An `Object` that specifies the collision filtering properties of this body.\n     *\n     * Collisions between two bodies will obey the following rules:\n     * - If the two bodies have the same non-zero value of `collisionFilter.group`,\n     *   they will always collide if the value is positive, and they will never collide\n     *   if the value is negative.\n     * - If the two bodies have different values of `collisionFilter.group` or if one\n     *   (or both) of the bodies has a value of 0, then the category/mask rules apply as follows:\n     *\n     * Each body belongs to a collision category, given by `collisionFilter.category`. This\n     * value is used as a bit field and the category should have only one bit set, meaning that\n     * the value of this property is a power of two in the range [1, 2^31]. Thus, there are 32\n     * different collision categories available.\n     *\n     * Each body also defines a collision bitmask, given by `collisionFilter.mask` which specifies\n     * the categories it collides with (the value is the bitwise AND value of all these categories).\n     *\n     * Using the category/mask rules, two bodies `A` and `B` collide if each includes the other's\n     * category in its mask, i.e. `(categoryA & maskB) !== 0` and `(categoryB & maskA) !== 0`\n     * are both true.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n    /**\n     * An Integer `Number`, that specifies the collision group this body belongs to.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.group\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * A bit field that specifies the collision category this body belongs to.\n     * The category value should have only one bit set, for example `0x0001`.\n     * This means there are up to 32 unique collision categories available.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.category\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * A bit mask that specifies the collision categories this body may collide with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter.mask\n     * @type object\n     * @default -1\n     */\n\n    /**\n     * A `Number` that specifies a tolerance on how far a body is allowed to 'sink' or rotate into other bodies.\n     * Avoid changing this value unless you understand the purpose of `slop` in physics engines.\n     * The default should generally suffice, although very large bodies may require larger values for stable stacking.\n     *\n     * @property slop\n     * @type number\n     * @default 0.05\n     */\n\n    /**\n     * A `Number` that allows per-body time scaling, e.g. a force-field where bodies inside are in slow-motion, while others are at full speed.\n     *\n     * @property timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the body should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * Sets the opacity to use when rendering.\n     *\n     * @property render.opacity\n     * @type number\n     * @default 1\n    */\n\n    /**\n     * An `Object` that defines the sprite properties to use when rendering, if any.\n     *\n     * @property render.sprite\n     * @type object\n     */\n\n    /**\n     * An `String` that defines the path to the image to use as the sprite texture, if any.\n     *\n     * @property render.sprite.texture\n     * @type string\n     */\n     \n    /**\n     * A `Number` that defines the scaling in the x-axis for the sprite, if any.\n     *\n     * @property render.sprite.xScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that defines the scaling in the y-axis for the sprite, if any.\n     *\n     * @property render.sprite.yScale\n     * @type number\n     * @default 1\n     */\n\n     /**\n      * A `Number` that defines the offset in the x-axis for the sprite (normalised by texture width).\n      *\n      * @property render.sprite.xOffset\n      * @type number\n      * @default 0\n      */\n\n     /**\n      * A `Number` that defines the offset in the y-axis for the sprite (normalised by texture height).\n      *\n      * @property render.sprite.yOffset\n      * @type number\n      * @default 0\n      */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the body outline (if a sprite is not defined).\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `String` that defines the fill style to use when rendering the body (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.fillStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the body outline (if a sprite is not defined).\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * An array of unique axis vectors (edge normals) used for collision detection.\n     * These are automatically calculated from the given convex hull (`vertices` array) in `Body.create`.\n     * They are constantly updated by `Body.update` during the simulation.\n     *\n     * @property axes\n     * @type vector[]\n     */\n     \n    /**\n     * A `Number` that _measures_ the area of the body's convex hull, calculated at creation by `Body.create`.\n     *\n     * @property area\n     * @type string\n     * @default \n     */\n\n    /**\n     * A `Bounds` object that defines the AABB region for the body.\n     * It is automatically calculated from the given convex hull (`vertices` array) in `Body.create` and constantly updated by `Body.update` during simulation.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31}],2:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composite` module contains methods for creating and manipulating composite bodies.\n* A composite body is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`, therefore composites form a tree structure.\n* It is important to use the functions in this module to modify composites, rather than directly modifying their properties.\n* Note that the `Matter.World` object is also a type of `Matter.Composite` and as such all composite methods here can also operate on a `Matter.World`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composite\n*/\n\nvar Composite = {};\n\nmodule.exports = Composite;\n\nvar Events = _dereq_('../core/Events');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Body = _dereq_('./Body');\n\n(function() {\n\n    /**\n     * Creates a new composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properites section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} [options]\n     * @return {composite} A new composite\n     */\n    Composite.create = function(options) {\n        return Common.extend({ \n            id: Common.nextId(),\n            type: 'composite',\n            parent: null,\n            isModified: false,\n            bodies: [], \n            constraints: [], \n            composites: [],\n            label: 'Composite',\n            plugin: {}\n        }, options);\n    };\n\n    /**\n     * Sets the composite's `isModified` flag. \n     * If `updateParents` is true, all parents will be set (default: false).\n     * If `updateChildren` is true, all children will be set (default: false).\n     * @method setModified\n     * @param {composite} composite\n     * @param {boolean} isModified\n     * @param {boolean} [updateParents=false]\n     * @param {boolean} [updateChildren=false]\n     */\n    Composite.setModified = function(composite, isModified, updateParents, updateChildren) {\n        composite.isModified = isModified;\n\n        if (updateParents && composite.parent) {\n            Composite.setModified(composite.parent, isModified, updateParents, updateChildren);\n        }\n\n        if (updateChildren) {\n            for(var i = 0; i < composite.composites.length; i++) {\n                var childComposite = composite.composites[i];\n                Composite.setModified(childComposite, isModified, updateParents, updateChildren);\n            }\n        }\n    };\n\n    /**\n     * Generic add function. Adds one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Triggers `beforeAdd` and `afterAdd` events on the `composite`.\n     * @method add\n     * @param {composite} composite\n     * @param {} object\n     * @return {composite} The original composite with the objects added\n     */\n    Composite.add = function(composite, object) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeAdd', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                // skip adding compound parts\n                if (obj.parent !== obj) {\n                    Common.warn('Composite.add: skipped adding a compound body part (you must add its parent instead)');\n                    break;\n                }\n\n                Composite.addBody(composite, obj);\n                break;\n            case 'constraint':\n                Composite.addConstraint(composite, obj);\n                break;\n            case 'composite':\n                Composite.addComposite(composite, obj);\n                break;\n            case 'mouseConstraint':\n                Composite.addConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterAdd', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Generic remove function. Removes one or many body(s), constraint(s) or a composite(s) to the given composite.\n     * Optionally searching its children recursively.\n     * Triggers `beforeRemove` and `afterRemove` events on the `composite`.\n     * @method remove\n     * @param {composite} composite\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the objects removed\n     */\n    Composite.remove = function(composite, object, deep) {\n        var objects = [].concat(object);\n\n        Events.trigger(composite, 'beforeRemove', { object: object });\n\n        for (var i = 0; i < objects.length; i++) {\n            var obj = objects[i];\n\n            switch (obj.type) {\n\n            case 'body':\n                Composite.removeBody(composite, obj, deep);\n                break;\n            case 'constraint':\n                Composite.removeConstraint(composite, obj, deep);\n                break;\n            case 'composite':\n                Composite.removeComposite(composite, obj, deep);\n                break;\n            case 'mouseConstraint':\n                Composite.removeConstraint(composite, obj.constraint);\n                break;\n\n            }\n        }\n\n        Events.trigger(composite, 'afterRemove', { object: object });\n\n        return composite;\n    };\n\n    /**\n     * Adds a composite to the given composite.\n     * @private\n     * @method addComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @return {composite} The original compositeA with the objects from compositeB added\n     */\n    Composite.addComposite = function(compositeA, compositeB) {\n        compositeA.composites.push(compositeB);\n        compositeB.parent = compositeA;\n        Composite.setModified(compositeA, true, true, false);\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeComposite\n     * @param {composite} compositeA\n     * @param {composite} compositeB\n     * @param {boolean} [deep=false]\n     * @return {composite} The original compositeA with the composite removed\n     */\n    Composite.removeComposite = function(compositeA, compositeB, deep) {\n        var position = Common.indexOf(compositeA.composites, compositeB);\n        if (position !== -1) {\n            Composite.removeCompositeAt(compositeA, position);\n            Composite.setModified(compositeA, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < compositeA.composites.length; i++){\n                Composite.removeComposite(compositeA.composites[i], compositeB, true);\n            }\n        }\n\n        return compositeA;\n    };\n\n    /**\n     * Removes a composite from the given composite.\n     * @private\n     * @method removeCompositeAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the composite removed\n     */\n    Composite.removeCompositeAt = function(composite, position) {\n        composite.composites.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a body to the given composite.\n     * @private\n     * @method addBody\n     * @param {composite} composite\n     * @param {body} body\n     * @return {composite} The original composite with the body added\n     */\n    Composite.addBody = function(composite, body) {\n        composite.bodies.push(body);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeBody\n     * @param {composite} composite\n     * @param {body} body\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBody = function(composite, body, deep) {\n        var position = Common.indexOf(composite.bodies, body);\n        if (position !== -1) {\n            Composite.removeBodyAt(composite, position);\n            Composite.setModified(composite, true, true, false);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeBody(composite.composites[i], body, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeBodyAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the body removed\n     */\n    Composite.removeBodyAt = function(composite, position) {\n        composite.bodies.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Adds a constraint to the given composite.\n     * @private\n     * @method addConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @return {composite} The original composite with the constraint added\n     */\n    Composite.addConstraint = function(composite, constraint) {\n        composite.constraints.push(constraint);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes a constraint from the given composite, and optionally searching its children recursively.\n     * @private\n     * @method removeConstraint\n     * @param {composite} composite\n     * @param {constraint} constraint\n     * @param {boolean} [deep=false]\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraint = function(composite, constraint, deep) {\n        var position = Common.indexOf(composite.constraints, constraint);\n        if (position !== -1) {\n            Composite.removeConstraintAt(composite, position);\n        }\n\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.removeConstraint(composite.composites[i], constraint, true);\n            }\n        }\n\n        return composite;\n    };\n\n    /**\n     * Removes a body from the given composite.\n     * @private\n     * @method removeConstraintAt\n     * @param {composite} composite\n     * @param {number} position\n     * @return {composite} The original composite with the constraint removed\n     */\n    Composite.removeConstraintAt = function(composite, position) {\n        composite.constraints.splice(position, 1);\n        Composite.setModified(composite, true, true, false);\n        return composite;\n    };\n\n    /**\n     * Removes all bodies, constraints and composites from the given composite.\n     * Optionally clearing its children recursively.\n     * @method clear\n     * @param {composite} composite\n     * @param {boolean} keepStatic\n     * @param {boolean} [deep=false]\n     */\n    Composite.clear = function(composite, keepStatic, deep) {\n        if (deep) {\n            for (var i = 0; i < composite.composites.length; i++){\n                Composite.clear(composite.composites[i], keepStatic, true);\n            }\n        }\n        \n        if (keepStatic) {\n            composite.bodies = composite.bodies.filter(function(body) { return body.isStatic; });\n        } else {\n            composite.bodies.length = 0;\n        }\n\n        composite.constraints.length = 0;\n        composite.composites.length = 0;\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns all bodies in the given composite, including all bodies in its children, recursively.\n     * @method allBodies\n     * @param {composite} composite\n     * @return {body[]} All the bodies\n     */\n    Composite.allBodies = function(composite) {\n        var bodies = [].concat(composite.bodies);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            bodies = bodies.concat(Composite.allBodies(composite.composites[i]));\n\n        return bodies;\n    };\n\n    /**\n     * Returns all constraints in the given composite, including all constraints in its children, recursively.\n     * @method allConstraints\n     * @param {composite} composite\n     * @return {constraint[]} All the constraints\n     */\n    Composite.allConstraints = function(composite) {\n        var constraints = [].concat(composite.constraints);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            constraints = constraints.concat(Composite.allConstraints(composite.composites[i]));\n\n        return constraints;\n    };\n\n    /**\n     * Returns all composites in the given composite, including all composites in its children, recursively.\n     * @method allComposites\n     * @param {composite} composite\n     * @return {composite[]} All the composites\n     */\n    Composite.allComposites = function(composite) {\n        var composites = [].concat(composite.composites);\n\n        for (var i = 0; i < composite.composites.length; i++)\n            composites = composites.concat(Composite.allComposites(composite.composites[i]));\n\n        return composites;\n    };\n\n    /**\n     * Searches the composite recursively for an object matching the type and id supplied, null if not found.\n     * @method get\n     * @param {composite} composite\n     * @param {number} id\n     * @param {string} type\n     * @return {object} The requested object, if found\n     */\n    Composite.get = function(composite, id, type) {\n        var objects,\n            object;\n\n        switch (type) {\n        case 'body':\n            objects = Composite.allBodies(composite);\n            break;\n        case 'constraint':\n            objects = Composite.allConstraints(composite);\n            break;\n        case 'composite':\n            objects = Composite.allComposites(composite).concat(composite);\n            break;\n        }\n\n        if (!objects)\n            return null;\n\n        object = objects.filter(function(object) { \n            return object.id.toString() === id.toString(); \n        });\n\n        return object.length === 0 ? null : object[0];\n    };\n\n    /**\n     * Moves the given object(s) from compositeA to compositeB (equal to a remove followed by an add).\n     * @method move\n     * @param {compositeA} compositeA\n     * @param {object[]} objects\n     * @param {compositeB} compositeB\n     * @return {composite} Returns compositeA\n     */\n    Composite.move = function(compositeA, objects, compositeB) {\n        Composite.remove(compositeA, objects);\n        Composite.add(compositeB, objects);\n        return compositeA;\n    };\n\n    /**\n     * Assigns new ids for all objects in the composite, recursively.\n     * @method rebase\n     * @param {composite} composite\n     * @return {composite} Returns composite\n     */\n    Composite.rebase = function(composite) {\n        var objects = Composite.allBodies(composite)\n                        .concat(Composite.allConstraints(composite))\n                        .concat(Composite.allComposites(composite));\n\n        for (var i = 0; i < objects.length; i++) {\n            objects[i].id = Common.nextId();\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Translates all children in the composite by a given vector relative to their current positions, \n     * without imparting any velocity.\n     * @method translate\n     * @param {composite} composite\n     * @param {vector} translation\n     * @param {bool} [recursive=true]\n     */\n    Composite.translate = function(composite, translation, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            Body.translate(bodies[i], translation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Rotates all children in the composite by a given angle about the given point, without imparting any angular velocity.\n     * @method rotate\n     * @param {composite} composite\n     * @param {number} rotation\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.rotate = function(composite, rotation, point, recursive) {\n        var cos = Math.cos(rotation),\n            sin = Math.sin(rotation),\n            bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + (dx * cos - dy * sin),\n                y: point.y + (dx * sin + dy * cos)\n            });\n\n            Body.rotate(body, rotation);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Scales all children in the composite, including updating physical properties (mass, area, axes, inertia), from a world-space point.\n     * @method scale\n     * @param {composite} composite\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     * @param {bool} [recursive=true]\n     */\n    Composite.scale = function(composite, scaleX, scaleY, point, recursive) {\n        var bodies = recursive ? Composite.allBodies(composite) : composite.bodies;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                dx = body.position.x - point.x,\n                dy = body.position.y - point.y;\n                \n            Body.setPosition(body, {\n                x: point.x + dx * scaleX,\n                y: point.y + dy * scaleY\n            });\n\n            Body.scale(body, scaleX, scaleY);\n        }\n\n        Composite.setModified(composite, true, true, false);\n\n        return composite;\n    };\n\n    /**\n     * Returns the union of the bounds of all of the composite's bodies.\n     * @method bounds\n     * @param {composite} composite The composite.\n     * @returns {bounds} The composite bounds.\n     */\n    Composite.bounds = function(composite) {\n        var bodies = Composite.allBodies(composite),\n            vertices = [];\n\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i];\n            vertices.push(body.bounds.min, body.bounds.max);\n        }\n\n        return Bounds.create(vertices);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, before objects have been added.\n    *\n    * @event beforeAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.add` is made, after objects have been added.\n    *\n    * @event afterAdd\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been added (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, before objects have been removed.\n    *\n    * @event beforeRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) to be removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when a call to `Composite.remove` is made, after objects have been removed.\n    *\n    * @event afterRemove\n    * @param {} event An event object\n    * @param {} event.object The object(s) that have been removed (may be a single body, constraint, composite or a mixed array of these)\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"composite\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage composites.\n     *\n     * @property label\n     * @type string\n     * @default \"Composite\"\n     */\n\n    /**\n     * A flag that specifies whether the composite has been modified during the current step.\n     * Most `Matter.Composite` methods will automatically set this flag to `true` to inform the engine of changes to be handled.\n     * If you need to change it manually, you should use the `Composite.setModified` method.\n     *\n     * @property isModified\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * The `Composite` that is the parent of this composite. It is automatically managed by the `Matter.Composite` methods.\n     *\n     * @property parent\n     * @type composite\n     * @default null\n     */\n\n    /**\n     * An array of `Body` that are _direct_ children of this composite.\n     * To add or remove bodies you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allBodies` method.\n     *\n     * @property bodies\n     * @type body[]\n     * @default []\n     */\n\n    /**\n     * An array of `Constraint` that are _direct_ children of this composite.\n     * To add or remove constraints you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allConstraints` method.\n     *\n     * @property constraints\n     * @type constraint[]\n     * @default []\n     */\n\n    /**\n     * An array of `Composite` that are _direct_ children of this composite.\n     * To add or remove composites you should use `Composite.add` and `Composite.remove` methods rather than directly modifying this property.\n     * If you wish to recursively find all descendants, you should use the `Composite.allComposites` method.\n     *\n     * @property composites\n     * @type composite[]\n     * @default []\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"./Body\":1}],3:[function(_dereq_,module,exports){\n/**\n* The `Matter.World` module contains methods for creating and manipulating the world composite.\n* A `Matter.World` is a `Matter.Composite` body, which is a collection of `Matter.Body`, `Matter.Constraint` and other `Matter.Composite`.\n* A `Matter.World` has a few additional properties including `gravity` and `bounds`.\n* It is important to use the functions in the `Matter.Composite` module to modify the world composite, rather than directly modifying its properties.\n* There are also a few methods here that alias those in `Matter.Composite` for easier readability.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class World\n* @extends Composite\n*/\n\nvar World = {};\n\nmodule.exports = World;\n\nvar Composite = _dereq_('./Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new world composite. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @constructor\n     * @param {} options\n     * @return {world} A new world\n     */\n    World.create = function(options) {\n        var composite = Composite.create();\n\n        var defaults = {\n            label: 'World',\n            gravity: {\n                x: 0,\n                y: 1,\n                scale: 0.001\n            },\n            bounds: { \n                min: { x: -Infinity, y: -Infinity }, \n                max: { x: Infinity, y: Infinity } \n            }\n        };\n        \n        return Common.extend(composite, defaults, options);\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * The gravity to apply on the world.\n     *\n     * @property gravity\n     * @type object\n     */\n\n    /**\n     * The gravity x component.\n     *\n     * @property gravity.x\n     * @type object\n     * @default 0\n     */\n\n    /**\n     * The gravity y component.\n     *\n     * @property gravity.y\n     * @type object\n     * @default 1\n     */\n\n    /**\n     * The gravity scale factor.\n     *\n     * @property gravity.scale\n     * @type object\n     * @default 0.001\n     */\n\n    /**\n     * A `Bounds` object that defines the world bounds for collision detection.\n     *\n     * @property bounds\n     * @type bounds\n     * @default { min: { x: -Infinity, y: -Infinity }, max: { x: Infinity, y: Infinity } }\n     */\n\n    // World is a Composite body\n    // see src/module/Outro.js for these aliases:\n    \n    /**\n     * An alias for Composite.add\n     * @method add\n     * @param {world} world\n     * @param {} object\n     * @return {composite} The original world with the objects added\n     */\n\n    /**\n     * An alias for Composite.remove\n     * @method remove\n     * @param {world} world\n     * @param {} object\n     * @param {boolean} [deep=false]\n     * @return {composite} The original world with the objects removed\n     */\n\n    /**\n     * An alias for Composite.clear\n     * @method clear\n     * @param {world} world\n     * @param {boolean} keepStatic\n     */\n\n    /**\n     * An alias for Composite.addComposite\n     * @method addComposite\n     * @param {world} world\n     * @param {composite} composite\n     * @return {world} The original world with the objects from composite added\n     */\n    \n     /**\n      * An alias for Composite.addBody\n      * @method addBody\n      * @param {world} world\n      * @param {body} body\n      * @return {world} The original world with the body added\n      */\n\n     /**\n      * An alias for Composite.addConstraint\n      * @method addConstraint\n      * @param {world} world\n      * @param {constraint} constraint\n      * @return {world} The original world with the constraint added\n      */\n\n})();\n\n},{\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Composite\":2}],4:[function(_dereq_,module,exports){\n/**\n* The `Matter.Contact` module contains methods for creating and manipulating collision contacts.\n*\n* @class Contact\n*/\n\nvar Contact = {};\n\nmodule.exports = Contact;\n\n(function() {\n\n    /**\n     * Creates a new contact.\n     * @method create\n     * @param {vertex} vertex\n     * @return {contact} A new contact\n     */\n    Contact.create = function(vertex) {\n        return {\n            id: Contact.id(vertex),\n            vertex: vertex,\n            normalImpulse: 0,\n            tangentImpulse: 0\n        };\n    };\n    \n    /**\n     * Generates a contact id.\n     * @method id\n     * @param {vertex} vertex\n     * @return {string} Unique contactID\n     */\n    Contact.id = function(vertex) {\n        return vertex.body.id + '_' + vertex.index;\n    };\n\n})();\n\n},{}],5:[function(_dereq_,module,exports){\n/**\n* The `Matter.Detector` module contains methods for detecting collisions given a set of pairs.\n*\n* @class Detector\n*/\n\n// TODO: speculative contacts\n\nvar Detector = {};\n\nmodule.exports = Detector;\n\nvar SAT = _dereq_('./SAT');\nvar Pair = _dereq_('./Pair');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Finds all collisions given a list of pairs.\n     * @method collisions\n     * @param {pair[]} broadphasePairs\n     * @param {engine} engine\n     * @return {array} collisions\n     */\n    Detector.collisions = function(broadphasePairs, engine) {\n        var collisions = [],\n            pairsTable = engine.pairs.table;\n\n        \n        for (var i = 0; i < broadphasePairs.length; i++) {\n            var bodyA = broadphasePairs[i][0], \n                bodyB = broadphasePairs[i][1];\n\n            if ((bodyA.isStatic || bodyA.isSleeping) && (bodyB.isStatic || bodyB.isSleeping))\n                continue;\n            \n            if (!Detector.canCollide(bodyA.collisionFilter, bodyB.collisionFilter))\n                continue;\n\n\n            // mid phase\n            if (Bounds.overlaps(bodyA.bounds, bodyB.bounds)) {\n                for (var j = bodyA.parts.length > 1 ? 1 : 0; j < bodyA.parts.length; j++) {\n                    var partA = bodyA.parts[j];\n\n                    for (var k = bodyB.parts.length > 1 ? 1 : 0; k < bodyB.parts.length; k++) {\n                        var partB = bodyB.parts[k];\n\n                        if ((partA === bodyA && partB === bodyB) || Bounds.overlaps(partA.bounds, partB.bounds)) {\n                            // find a previous collision we could reuse\n                            var pairId = Pair.id(partA, partB),\n                                pair = pairsTable[pairId],\n                                previousCollision;\n\n                            if (pair && pair.isActive) {\n                                previousCollision = pair.collision;\n                            } else {\n                                previousCollision = null;\n                            }\n\n                            // narrow phase\n                            var collision = SAT.collides(partA, partB, previousCollision);\n\n\n                            if (collision.collided) {\n                                collisions.push(collision);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns `true` if both supplied collision filters will allow a collision to occur.\n     * See `body.collisionFilter` for more information.\n     * @method canCollide\n     * @param {} filterA\n     * @param {} filterB\n     * @return {bool} `true` if collision can occur\n     */\n    Detector.canCollide = function(filterA, filterB) {\n        if (filterA.group === filterB.group && filterA.group !== 0)\n            return filterA.group > 0;\n\n        return (filterA.mask & filterB.category) !== 0 && (filterB.mask & filterA.category) !== 0;\n    };\n\n})();\n\n},{\"../geometry/Bounds\":26,\"./Pair\":7,\"./SAT\":11}],6:[function(_dereq_,module,exports){\n/**\n* The `Matter.Grid` module contains methods for creating and manipulating collision broadphase grid structures.\n*\n* @class Grid\n*/\n\nvar Grid = {};\n\nmodule.exports = Grid;\n\nvar Pair = _dereq_('./Pair');\nvar Detector = _dereq_('./Detector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new grid.\n     * @method create\n     * @param {} options\n     * @return {grid} A new grid\n     */\n    Grid.create = function(options) {\n        var defaults = {\n            controller: Grid,\n            detector: Detector.collisions,\n            buckets: {},\n            pairs: {},\n            pairsList: [],\n            bucketWidth: 48,\n            bucketHeight: 48\n        };\n\n        return Common.extend(defaults, options);\n    };\n\n    /**\n     * The width of a single grid bucket.\n     *\n     * @property bucketWidth\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * The height of a single grid bucket.\n     *\n     * @property bucketHeight\n     * @type number\n     * @default 48\n     */\n\n    /**\n     * Updates the grid.\n     * @method update\n     * @param {grid} grid\n     * @param {body[]} bodies\n     * @param {engine} engine\n     * @param {boolean} forceUpdate\n     */\n    Grid.update = function(grid, bodies, engine, forceUpdate) {\n        var i, col, row,\n            world = engine.world,\n            buckets = grid.buckets,\n            bucket,\n            bucketId,\n            gridChanged = false;\n\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isSleeping && !forceUpdate)\n                continue;\n\n            // don't update out of world bodies\n            if (body.bounds.max.x < world.bounds.min.x || body.bounds.min.x > world.bounds.max.x\n                || body.bounds.max.y < world.bounds.min.y || body.bounds.min.y > world.bounds.max.y)\n                continue;\n\n            var newRegion = Grid._getRegion(grid, body);\n\n            // if the body has changed grid region\n            if (!body.region || newRegion.id !== body.region.id || forceUpdate) {\n\n\n                if (!body.region || forceUpdate)\n                    body.region = newRegion;\n\n                var union = Grid._regionUnion(newRegion, body.region);\n\n                // update grid buckets affected by region change\n                // iterate over the union of both regions\n                for (col = union.startCol; col <= union.endCol; col++) {\n                    for (row = union.startRow; row <= union.endRow; row++) {\n                        bucketId = Grid._getBucketId(col, row);\n                        bucket = buckets[bucketId];\n\n                        var isInsideNewRegion = (col >= newRegion.startCol && col <= newRegion.endCol\n                                                && row >= newRegion.startRow && row <= newRegion.endRow);\n\n                        var isInsideOldRegion = (col >= body.region.startCol && col <= body.region.endCol\n                                                && row >= body.region.startRow && row <= body.region.endRow);\n\n                        // remove from old region buckets\n                        if (!isInsideNewRegion && isInsideOldRegion) {\n                            if (isInsideOldRegion) {\n                                if (bucket)\n                                    Grid._bucketRemoveBody(grid, bucket, body);\n                            }\n                        }\n\n                        // add to new region buckets\n                        if (body.region === newRegion || (isInsideNewRegion && !isInsideOldRegion) || forceUpdate) {\n                            if (!bucket)\n                                bucket = Grid._createBucket(buckets, bucketId);\n                            Grid._bucketAddBody(grid, bucket, body);\n                        }\n                    }\n                }\n\n                // set the new region\n                body.region = newRegion;\n\n                // flag changes so we can update pairs\n                gridChanged = true;\n            }\n        }\n\n        // update pairs list only if pairs changed (i.e. a body changed region)\n        if (gridChanged)\n            grid.pairsList = Grid._createActivePairsList(grid);\n    };\n\n    /**\n     * Clears the grid.\n     * @method clear\n     * @param {grid} grid\n     */\n    Grid.clear = function(grid) {\n        grid.buckets = {};\n        grid.pairs = {};\n        grid.pairsList = [];\n    };\n\n    /**\n     * Finds the union of two regions.\n     * @method _regionUnion\n     * @private\n     * @param {} regionA\n     * @param {} regionB\n     * @return {} region\n     */\n    Grid._regionUnion = function(regionA, regionB) {\n        var startCol = Math.min(regionA.startCol, regionB.startCol),\n            endCol = Math.max(regionA.endCol, regionB.endCol),\n            startRow = Math.min(regionA.startRow, regionB.startRow),\n            endRow = Math.max(regionA.endRow, regionB.endRow);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Gets the region a given body falls in for a given grid.\n     * @method _getRegion\n     * @private\n     * @param {} grid\n     * @param {} body\n     * @return {} region\n     */\n    Grid._getRegion = function(grid, body) {\n        var bounds = body.bounds,\n            startCol = Math.floor(bounds.min.x / grid.bucketWidth),\n            endCol = Math.floor(bounds.max.x / grid.bucketWidth),\n            startRow = Math.floor(bounds.min.y / grid.bucketHeight),\n            endRow = Math.floor(bounds.max.y / grid.bucketHeight);\n\n        return Grid._createRegion(startCol, endCol, startRow, endRow);\n    };\n\n    /**\n     * Creates a region.\n     * @method _createRegion\n     * @private\n     * @param {} startCol\n     * @param {} endCol\n     * @param {} startRow\n     * @param {} endRow\n     * @return {} region\n     */\n    Grid._createRegion = function(startCol, endCol, startRow, endRow) {\n        return { \n            id: startCol + ',' + endCol + ',' + startRow + ',' + endRow,\n            startCol: startCol, \n            endCol: endCol, \n            startRow: startRow, \n            endRow: endRow \n        };\n    };\n\n    /**\n     * Gets the bucket id at the given position.\n     * @method _getBucketId\n     * @private\n     * @param {} column\n     * @param {} row\n     * @return {string} bucket id\n     */\n    Grid._getBucketId = function(column, row) {\n        return 'C' + column + 'R' + row;\n    };\n\n    /**\n     * Creates a bucket.\n     * @method _createBucket\n     * @private\n     * @param {} buckets\n     * @param {} bucketId\n     * @return {} bucket\n     */\n    Grid._createBucket = function(buckets, bucketId) {\n        var bucket = buckets[bucketId] = [];\n        return bucket;\n    };\n\n    /**\n     * Adds a body to a bucket.\n     * @method _bucketAddBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketAddBody = function(grid, bucket, body) {\n        // add new pairs\n        for (var i = 0; i < bucket.length; i++) {\n            var bodyB = bucket[i];\n\n            if (body.id === bodyB.id || (body.isStatic && bodyB.isStatic))\n                continue;\n\n            // keep track of the number of buckets the pair exists in\n            // important for Grid.update to work\n            var pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair) {\n                pair[2] += 1;\n            } else {\n                grid.pairs[pairId] = [body, bodyB, 1];\n            }\n        }\n\n        // add to bodies (after pairs, otherwise pairs with self)\n        bucket.push(body);\n    };\n\n    /**\n     * Removes a body from a bucket.\n     * @method _bucketRemoveBody\n     * @private\n     * @param {} grid\n     * @param {} bucket\n     * @param {} body\n     */\n    Grid._bucketRemoveBody = function(grid, bucket, body) {\n        // remove from bucket\n        bucket.splice(Common.indexOf(bucket, body), 1);\n\n        // update pair counts\n        for (var i = 0; i < bucket.length; i++) {\n            // keep track of the number of buckets the pair exists in\n            // important for _createActivePairsList to work\n            var bodyB = bucket[i],\n                pairId = Pair.id(body, bodyB),\n                pair = grid.pairs[pairId];\n\n            if (pair)\n                pair[2] -= 1;\n        }\n    };\n\n    /**\n     * Generates a list of the active pairs in the grid.\n     * @method _createActivePairsList\n     * @private\n     * @param {} grid\n     * @return [] pairs\n     */\n    Grid._createActivePairsList = function(grid) {\n        var pairKeys,\n            pair,\n            pairs = [];\n\n        // grid.pairs is used as a hashmap\n        pairKeys = Common.keys(grid.pairs);\n\n        // iterate over grid.pairs\n        for (var k = 0; k < pairKeys.length; k++) {\n            pair = grid.pairs[pairKeys[k]];\n\n            // if pair exists in at least one bucket\n            // it is a pair that needs further collision testing so push it\n            if (pair[2] > 0) {\n                pairs.push(pair);\n            } else {\n                delete grid.pairs[pairKeys[k]];\n            }\n        }\n\n        return pairs;\n    };\n    \n})();\n\n},{\"../core/Common\":14,\"./Detector\":5,\"./Pair\":7}],7:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pair` module contains methods for creating and manipulating collision pairs.\n*\n* @class Pair\n*/\n\nvar Pair = {};\n\nmodule.exports = Pair;\n\nvar Contact = _dereq_('./Contact');\n\n(function() {\n    \n    /**\n     * Creates a pair.\n     * @method create\n     * @param {collision} collision\n     * @param {number} timestamp\n     * @return {pair} A new pair\n     */\n    Pair.create = function(collision, timestamp) {\n        var bodyA = collision.bodyA,\n            bodyB = collision.bodyB,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n\n        var pair = {\n            id: Pair.id(bodyA, bodyB),\n            bodyA: bodyA,\n            bodyB: bodyB,\n            contacts: {},\n            activeContacts: [],\n            separation: 0,\n            isActive: true,\n            isSensor: bodyA.isSensor || bodyB.isSensor,\n            timeCreated: timestamp,\n            timeUpdated: timestamp,\n            inverseMass: parentA.inverseMass + parentB.inverseMass,\n            friction: Math.min(parentA.friction, parentB.friction),\n            frictionStatic: Math.max(parentA.frictionStatic, parentB.frictionStatic),\n            restitution: Math.max(parentA.restitution, parentB.restitution),\n            slop: Math.max(parentA.slop, parentB.slop)\n        };\n\n        Pair.update(pair, collision, timestamp);\n\n        return pair;\n    };\n\n    /**\n     * Updates a pair given a collision.\n     * @method update\n     * @param {pair} pair\n     * @param {collision} collision\n     * @param {number} timestamp\n     */\n    Pair.update = function(pair, collision, timestamp) {\n        var contacts = pair.contacts,\n            supports = collision.supports,\n            activeContacts = pair.activeContacts,\n            parentA = collision.parentA,\n            parentB = collision.parentB;\n        \n        pair.collision = collision;\n        pair.inverseMass = parentA.inverseMass + parentB.inverseMass;\n        pair.friction = Math.min(parentA.friction, parentB.friction);\n        pair.frictionStatic = Math.max(parentA.frictionStatic, parentB.frictionStatic);\n        pair.restitution = Math.max(parentA.restitution, parentB.restitution);\n        pair.slop = Math.max(parentA.slop, parentB.slop);\n        activeContacts.length = 0;\n        \n        if (collision.collided) {\n            for (var i = 0; i < supports.length; i++) {\n                var support = supports[i],\n                    contactId = Contact.id(support),\n                    contact = contacts[contactId];\n\n                if (contact) {\n                    activeContacts.push(contact);\n                } else {\n                    activeContacts.push(contacts[contactId] = Contact.create(support));\n                }\n            }\n\n            pair.separation = collision.depth;\n            Pair.setActive(pair, true, timestamp);\n        } else {\n            if (pair.isActive === true)\n                Pair.setActive(pair, false, timestamp);\n        }\n    };\n    \n    /**\n     * Set a pair as active or inactive.\n     * @method setActive\n     * @param {pair} pair\n     * @param {bool} isActive\n     * @param {number} timestamp\n     */\n    Pair.setActive = function(pair, isActive, timestamp) {\n        if (isActive) {\n            pair.isActive = true;\n            pair.timeUpdated = timestamp;\n        } else {\n            pair.isActive = false;\n            pair.activeContacts.length = 0;\n        }\n    };\n\n    /**\n     * Get the id for the given pair.\n     * @method id\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @return {string} Unique pairId\n     */\n    Pair.id = function(bodyA, bodyB) {\n        if (bodyA.id < bodyB.id) {\n            return 'A' + bodyA.id + 'B' + bodyB.id;\n        } else {\n            return 'A' + bodyB.id + 'B' + bodyA.id;\n        }\n    };\n\n})();\n\n},{\"./Contact\":4}],8:[function(_dereq_,module,exports){\n/**\n* The `Matter.Pairs` module contains methods for creating and manipulating collision pair sets.\n*\n* @class Pairs\n*/\n\nvar Pairs = {};\n\nmodule.exports = Pairs;\n\nvar Pair = _dereq_('./Pair');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n    \n    Pairs._pairMaxIdleLife = 1000;\n\n    /**\n     * Creates a new pairs structure.\n     * @method create\n     * @param {object} options\n     * @return {pairs} A new pairs structure\n     */\n    Pairs.create = function(options) {\n        return Common.extend({ \n            table: {},\n            list: [],\n            collisionStart: [],\n            collisionActive: [],\n            collisionEnd: []\n        }, options);\n    };\n\n    /**\n     * Updates pairs given a list of collisions.\n     * @method update\n     * @param {object} pairs\n     * @param {collision[]} collisions\n     * @param {number} timestamp\n     */\n    Pairs.update = function(pairs, collisions, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            collisionStart = pairs.collisionStart,\n            collisionEnd = pairs.collisionEnd,\n            collisionActive = pairs.collisionActive,\n            activePairIds = [],\n            collision,\n            pairId,\n            pair,\n            i;\n\n        // clear collision state arrays, but maintain old reference\n        collisionStart.length = 0;\n        collisionEnd.length = 0;\n        collisionActive.length = 0;\n\n        for (i = 0; i < collisions.length; i++) {\n            collision = collisions[i];\n\n            if (collision.collided) {\n                pairId = Pair.id(collision.bodyA, collision.bodyB);\n                activePairIds.push(pairId);\n\n                pair = pairsTable[pairId];\n                \n                if (pair) {\n                    // pair already exists (but may or may not be active)\n                    if (pair.isActive) {\n                        // pair exists and is active\n                        collisionActive.push(pair);\n                    } else {\n                        // pair exists but was inactive, so a collision has just started again\n                        collisionStart.push(pair);\n                    }\n\n                    // update the pair\n                    Pair.update(pair, collision, timestamp);\n                } else {\n                    // pair did not exist, create a new pair\n                    pair = Pair.create(collision, timestamp);\n                    pairsTable[pairId] = pair;\n\n                    // push the new pair\n                    collisionStart.push(pair);\n                    pairsList.push(pair);\n                }\n            }\n        }\n\n        // deactivate previously active pairs that are now inactive\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            if (pair.isActive && Common.indexOf(activePairIds, pair.id) === -1) {\n                Pair.setActive(pair, false, timestamp);\n                collisionEnd.push(pair);\n            }\n        }\n    };\n    \n    /**\n     * Finds and removes pairs that have been inactive for a set amount of time.\n     * @method removeOld\n     * @param {object} pairs\n     * @param {number} timestamp\n     */\n    Pairs.removeOld = function(pairs, timestamp) {\n        var pairsList = pairs.list,\n            pairsTable = pairs.table,\n            indexesToRemove = [],\n            pair,\n            collision,\n            pairIndex,\n            i;\n\n        for (i = 0; i < pairsList.length; i++) {\n            pair = pairsList[i];\n            collision = pair.collision;\n            \n            // never remove sleeping pairs\n            if (collision.bodyA.isSleeping || collision.bodyB.isSleeping) {\n                pair.timeUpdated = timestamp;\n                continue;\n            }\n\n            // if pair is inactive for too long, mark it to be removed\n            if (timestamp - pair.timeUpdated > Pairs._pairMaxIdleLife) {\n                indexesToRemove.push(i);\n            }\n        }\n\n        // remove marked pairs\n        for (i = 0; i < indexesToRemove.length; i++) {\n            pairIndex = indexesToRemove[i] - i;\n            pair = pairsList[pairIndex];\n            delete pairsTable[pair.id];\n            pairsList.splice(pairIndex, 1);\n        }\n    };\n\n    /**\n     * Clears the given pairs structure.\n     * @method clear\n     * @param {pairs} pairs\n     * @return {pairs} pairs\n     */\n    Pairs.clear = function(pairs) {\n        pairs.table = {};\n        pairs.list.length = 0;\n        pairs.collisionStart.length = 0;\n        pairs.collisionActive.length = 0;\n        pairs.collisionEnd.length = 0;\n        return pairs;\n    };\n\n})();\n\n},{\"../core/Common\":14,\"./Pair\":7}],9:[function(_dereq_,module,exports){\n/**\n* The `Matter.Query` module contains methods for performing collision queries.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Query\n*/\n\nvar Query = {};\n\nmodule.exports = Query;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar SAT = _dereq_('./SAT');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Bodies = _dereq_('../factory/Bodies');\nvar Vertices = _dereq_('../geometry/Vertices');\n\n(function() {\n\n    /**\n     * Returns a list of collisions between `body` and `bodies`.\n     * @method collides\n     * @param {body} body\n     * @param {body[]} bodies\n     * @return {object[]} Collisions\n     */\n    Query.collides = function(body, bodies) {\n        var collisions = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var bodyA = bodies[i];\n            \n            if (Bounds.overlaps(bodyA.bounds, body.bounds)) {\n                for (var j = bodyA.parts.length === 1 ? 0 : 1; j < bodyA.parts.length; j++) {\n                    var part = bodyA.parts[j];\n\n                    if (Bounds.overlaps(part.bounds, body.bounds)) {\n                        var collision = SAT.collides(part, body);\n\n                        if (collision.collided) {\n                            collisions.push(collision);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n\n        return collisions;\n    };\n\n    /**\n     * Casts a ray segment against a set of bodies and returns all collisions, ray width is optional. Intersection points are not provided.\n     * @method ray\n     * @param {body[]} bodies\n     * @param {vector} startPoint\n     * @param {vector} endPoint\n     * @param {number} [rayWidth]\n     * @return {object[]} Collisions\n     */\n    Query.ray = function(bodies, startPoint, endPoint, rayWidth) {\n        rayWidth = rayWidth || 1e-100;\n\n        var rayAngle = Vector.angle(startPoint, endPoint),\n            rayLength = Vector.magnitude(Vector.sub(startPoint, endPoint)),\n            rayX = (endPoint.x + startPoint.x) * 0.5,\n            rayY = (endPoint.y + startPoint.y) * 0.5,\n            ray = Bodies.rectangle(rayX, rayY, rayLength, rayWidth, { angle: rayAngle }),\n            collisions = Query.collides(ray, bodies);\n\n        for (var i = 0; i < collisions.length; i += 1) {\n            var collision = collisions[i];\n            collision.body = collision.bodyB = collision.bodyA;            \n        }\n\n        return collisions;\n    };\n\n    /**\n     * Returns all bodies whose bounds are inside (or outside if set) the given set of bounds, from the given set of bodies.\n     * @method region\n     * @param {body[]} bodies\n     * @param {bounds} bounds\n     * @param {bool} [outside=false]\n     * @return {body[]} The bodies matching the query\n     */\n    Query.region = function(bodies, bounds, outside) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                overlaps = Bounds.overlaps(body.bounds, bounds);\n            if ((overlaps && !outside) || (!overlaps && outside))\n                result.push(body);\n        }\n\n        return result;\n    };\n\n    /**\n     * Returns all bodies whose vertices contain the given point, from the given set of bodies.\n     * @method point\n     * @param {body[]} bodies\n     * @param {vector} point\n     * @return {body[]} The bodies matching the query\n     */\n    Query.point = function(bodies, point) {\n        var result = [];\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n            \n            if (Bounds.contains(body.bounds, point)) {\n                for (var j = body.parts.length === 1 ? 0 : 1; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n\n                    if (Bounds.contains(part.bounds, point)\n                        && Vertices.contains(part.vertices, point)) {\n                        result.push(body);\n                        break;\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n\n})();\n\n},{\"../factory/Bodies\":23,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"./SAT\":11}],10:[function(_dereq_,module,exports){\n/**\n* The `Matter.Resolver` module contains methods for resolving collision pairs.\n*\n* @class Resolver\n*/\n\nvar Resolver = {};\n\nmodule.exports = Resolver;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    Resolver._restingThresh = 4;\n    Resolver._restingThreshTangent = 6;\n    Resolver._positionDampen = 0.9;\n    Resolver._positionWarming = 0.8;\n    Resolver._frictionNormalMultiplier = 5;\n\n    /**\n     * Prepare pairs for position solving.\n     * @method preSolvePosition\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolvePosition = function(pairs) {\n        var i,\n            pair,\n            activeCount;\n\n        // find total contacts on each body\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive)\n                continue;\n            \n            activeCount = pair.activeContacts.length;\n            pair.collision.parentA.totalContacts += activeCount;\n            pair.collision.parentB.totalContacts += activeCount;\n        }\n    };\n\n    /**\n     * Find a solution for pair positions.\n     * @method solvePosition\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solvePosition = function(pairs, timeScale) {\n        var i,\n            pair,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            bodyBtoA,\n            contactShare,\n            positionImpulse,\n            contactCount = {},\n            tempA = Vector._temp[0],\n            tempB = Vector._temp[1],\n            tempC = Vector._temp[2],\n            tempD = Vector._temp[3];\n\n        // find impulses required to resolve penetration\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n\n            // get current separation between body edges involved in collision\n            bodyBtoA = Vector.sub(Vector.add(bodyB.positionImpulse, bodyB.position, tempA), \n                                    Vector.add(bodyA.positionImpulse, \n                                        Vector.sub(bodyB.position, collision.penetration, tempB), tempC), tempD);\n\n            pair.separation = Vector.dot(normal, bodyBtoA);\n        }\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            positionImpulse = (pair.separation - pair.slop) * timeScale;\n\n            if (bodyA.isStatic || bodyB.isStatic)\n                positionImpulse *= 2;\n            \n            if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyA.totalContacts;\n                bodyA.positionImpulse.x += normal.x * positionImpulse * contactShare;\n                bodyA.positionImpulse.y += normal.y * positionImpulse * contactShare;\n            }\n\n            if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                contactShare = Resolver._positionDampen / bodyB.totalContacts;\n                bodyB.positionImpulse.x -= normal.x * positionImpulse * contactShare;\n                bodyB.positionImpulse.y -= normal.y * positionImpulse * contactShare;\n            }\n        }\n    };\n\n    /**\n     * Apply position resolution.\n     * @method postSolvePosition\n     * @param {body[]} bodies\n     */\n    Resolver.postSolvePosition = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset contact count\n            body.totalContacts = 0;\n\n            if (body.positionImpulse.x !== 0 || body.positionImpulse.y !== 0) {\n                // update body geometry\n                for (var j = 0; j < body.parts.length; j++) {\n                    var part = body.parts[j];\n                    Vertices.translate(part.vertices, body.positionImpulse);\n                    Bounds.update(part.bounds, part.vertices, body.velocity);\n                    part.position.x += body.positionImpulse.x;\n                    part.position.y += body.positionImpulse.y;\n                }\n\n                // move the body without changing velocity\n                body.positionPrev.x += body.positionImpulse.x;\n                body.positionPrev.y += body.positionImpulse.y;\n\n                if (Vector.dot(body.positionImpulse, body.velocity) < 0) {\n                    // reset cached impulse if the body has velocity along it\n                    body.positionImpulse.x = 0;\n                    body.positionImpulse.y = 0;\n                } else {\n                    // warm the next iteration\n                    body.positionImpulse.x *= Resolver._positionWarming;\n                    body.positionImpulse.y *= Resolver._positionWarming;\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepare pairs for velocity solving.\n     * @method preSolveVelocity\n     * @param {pair[]} pairs\n     */\n    Resolver.preSolveVelocity = function(pairs) {\n        var i,\n            j,\n            pair,\n            contacts,\n            collision,\n            bodyA,\n            bodyB,\n            normal,\n            tangent,\n            contact,\n            contactVertex,\n            normalImpulse,\n            tangentImpulse,\n            offset,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1];\n        \n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            contacts = pair.activeContacts;\n            collision = pair.collision;\n            bodyA = collision.parentA;\n            bodyB = collision.parentB;\n            normal = collision.normal;\n            tangent = collision.tangent;\n\n            // resolve each contact\n            for (j = 0; j < contacts.length; j++) {\n                contact = contacts[j];\n                contactVertex = contact.vertex;\n                normalImpulse = contact.normalImpulse;\n                tangentImpulse = contact.tangentImpulse;\n\n                if (normalImpulse !== 0 || tangentImpulse !== 0) {\n                    // total impulse from contact\n                    impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                    impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                    \n                    // apply impulse from contact\n                    if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyA.position, tempA);\n                        bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                        bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                        bodyA.anglePrev += Vector.cross(offset, impulse) * bodyA.inverseInertia;\n                    }\n\n                    if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                        offset = Vector.sub(contactVertex, bodyB.position, tempA);\n                        bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                        bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                        bodyB.anglePrev -= Vector.cross(offset, impulse) * bodyB.inverseInertia;\n                    }\n                }\n            }\n        }\n    };\n\n    /**\n     * Find a solution for pair velocities.\n     * @method solveVelocity\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Resolver.solveVelocity = function(pairs, timeScale) {\n        var timeScaleSquared = timeScale * timeScale,\n            impulse = Vector._temp[0],\n            tempA = Vector._temp[1],\n            tempB = Vector._temp[2],\n            tempC = Vector._temp[3],\n            tempD = Vector._temp[4],\n            tempE = Vector._temp[5];\n        \n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            if (!pair.isActive || pair.isSensor)\n                continue;\n            \n            var collision = pair.collision,\n                bodyA = collision.parentA,\n                bodyB = collision.parentB,\n                normal = collision.normal,\n                tangent = collision.tangent,\n                contacts = pair.activeContacts,\n                contactShare = 1 / contacts.length;\n\n            // update body velocities\n            bodyA.velocity.x = bodyA.position.x - bodyA.positionPrev.x;\n            bodyA.velocity.y = bodyA.position.y - bodyA.positionPrev.y;\n            bodyB.velocity.x = bodyB.position.x - bodyB.positionPrev.x;\n            bodyB.velocity.y = bodyB.position.y - bodyB.positionPrev.y;\n            bodyA.angularVelocity = bodyA.angle - bodyA.anglePrev;\n            bodyB.angularVelocity = bodyB.angle - bodyB.anglePrev;\n\n            // resolve each contact\n            for (var j = 0; j < contacts.length; j++) {\n                var contact = contacts[j],\n                    contactVertex = contact.vertex,\n                    offsetA = Vector.sub(contactVertex, bodyA.position, tempA),\n                    offsetB = Vector.sub(contactVertex, bodyB.position, tempB),\n                    velocityPointA = Vector.add(bodyA.velocity, Vector.mult(Vector.perp(offsetA), bodyA.angularVelocity), tempC),\n                    velocityPointB = Vector.add(bodyB.velocity, Vector.mult(Vector.perp(offsetB), bodyB.angularVelocity), tempD), \n                    relativeVelocity = Vector.sub(velocityPointA, velocityPointB, tempE),\n                    normalVelocity = Vector.dot(normal, relativeVelocity);\n\n                var tangentVelocity = Vector.dot(tangent, relativeVelocity),\n                    tangentSpeed = Math.abs(tangentVelocity),\n                    tangentVelocityDirection = Common.sign(tangentVelocity);\n\n                // raw impulses\n                var normalImpulse = (1 + pair.restitution) * normalVelocity,\n                    normalForce = Common.clamp(pair.separation + normalVelocity, 0, 1) * Resolver._frictionNormalMultiplier;\n\n                // coulomb friction\n                var tangentImpulse = tangentVelocity,\n                    maxFriction = Infinity;\n\n                if (tangentSpeed > pair.friction * pair.frictionStatic * normalForce * timeScaleSquared) {\n                    maxFriction = tangentSpeed;\n                    tangentImpulse = Common.clamp(\n                        pair.friction * tangentVelocityDirection * timeScaleSquared,\n                        -maxFriction, maxFriction\n                    );\n                }\n\n                // modify impulses accounting for mass, inertia and offset\n                var oAcN = Vector.cross(offsetA, normal),\n                    oBcN = Vector.cross(offsetB, normal),\n                    share = contactShare / (bodyA.inverseMass + bodyB.inverseMass + bodyA.inverseInertia * oAcN * oAcN  + bodyB.inverseInertia * oBcN * oBcN);\n\n                normalImpulse *= share;\n                tangentImpulse *= share;\n\n                // handle high velocity and resting collisions separately\n                if (normalVelocity < 0 && normalVelocity * normalVelocity > Resolver._restingThresh * timeScaleSquared) {\n                    // high normal velocity so clear cached contact normal impulse\n                    contact.normalImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // impulse constraint tends to 0\n                    var contactNormalImpulse = contact.normalImpulse;\n                    contact.normalImpulse = Math.min(contact.normalImpulse + normalImpulse, 0);\n                    normalImpulse = contact.normalImpulse - contactNormalImpulse;\n                }\n\n                // handle high velocity and resting collisions separately\n                if (tangentVelocity * tangentVelocity > Resolver._restingThreshTangent * timeScaleSquared) {\n                    // high tangent velocity so clear cached contact tangent impulse\n                    contact.tangentImpulse = 0;\n                } else {\n                    // solve resting collision constraints using Erin Catto's method (GDC08)\n                    // tangent impulse tends to -tangentSpeed or +tangentSpeed\n                    var contactTangentImpulse = contact.tangentImpulse;\n                    contact.tangentImpulse = Common.clamp(contact.tangentImpulse + tangentImpulse, -maxFriction, maxFriction);\n                    tangentImpulse = contact.tangentImpulse - contactTangentImpulse;\n                }\n\n                // total impulse from contact\n                impulse.x = (normal.x * normalImpulse) + (tangent.x * tangentImpulse);\n                impulse.y = (normal.y * normalImpulse) + (tangent.y * tangentImpulse);\n                \n                // apply impulse from contact\n                if (!(bodyA.isStatic || bodyA.isSleeping)) {\n                    bodyA.positionPrev.x += impulse.x * bodyA.inverseMass;\n                    bodyA.positionPrev.y += impulse.y * bodyA.inverseMass;\n                    bodyA.anglePrev += Vector.cross(offsetA, impulse) * bodyA.inverseInertia;\n                }\n\n                if (!(bodyB.isStatic || bodyB.isSleeping)) {\n                    bodyB.positionPrev.x -= impulse.x * bodyB.inverseMass;\n                    bodyB.positionPrev.y -= impulse.y * bodyB.inverseMass;\n                    bodyB.anglePrev -= Vector.cross(offsetB, impulse) * bodyB.inverseInertia;\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],11:[function(_dereq_,module,exports){\n/**\n* The `Matter.SAT` module contains methods for detecting collisions using the Separating Axis Theorem.\n*\n* @class SAT\n*/\n\n// TODO: true circles and curves\n\nvar SAT = {};\n\nmodule.exports = SAT;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    /**\n     * Detect collision between two bodies using the Separating Axis Theorem.\n     * @method collides\n     * @param {body} bodyA\n     * @param {body} bodyB\n     * @param {collision} previousCollision\n     * @return {collision} collision\n     */\n    SAT.collides = function(bodyA, bodyB, previousCollision) {\n        var overlapAB,\n            overlapBA, \n            minOverlap,\n            collision,\n            canReusePrevCol = false;\n\n        if (previousCollision) {\n            // estimate total motion\n            var parentA = bodyA.parent,\n                parentB = bodyB.parent,\n                motion = parentA.speed * parentA.speed + parentA.angularSpeed * parentA.angularSpeed\n                       + parentB.speed * parentB.speed + parentB.angularSpeed * parentB.angularSpeed;\n\n            // we may be able to (partially) reuse collision result \n            // but only safe if collision was resting\n            canReusePrevCol = previousCollision && previousCollision.collided && motion < 0.2;\n\n            // reuse collision object\n            collision = previousCollision;\n        } else {\n            collision = { collided: false, bodyA: bodyA, bodyB: bodyB };\n        }\n\n        if (previousCollision && canReusePrevCol) {\n            // if we can reuse the collision result\n            // we only need to test the previously found axis\n            var axisBodyA = collision.axisBody,\n                axisBodyB = axisBodyA === bodyA ? bodyB : bodyA,\n                axes = [axisBodyA.axes[previousCollision.axisNumber]];\n\n            minOverlap = SAT._overlapAxes(axisBodyA.vertices, axisBodyB.vertices, axes);\n            collision.reused = true;\n\n            if (minOverlap.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n        } else {\n            // if we can't reuse a result, perform a full SAT test\n\n            overlapAB = SAT._overlapAxes(bodyA.vertices, bodyB.vertices, bodyA.axes);\n\n            if (overlapAB.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            overlapBA = SAT._overlapAxes(bodyB.vertices, bodyA.vertices, bodyB.axes);\n\n            if (overlapBA.overlap <= 0) {\n                collision.collided = false;\n                return collision;\n            }\n\n            if (overlapAB.overlap < overlapBA.overlap) {\n                minOverlap = overlapAB;\n                collision.axisBody = bodyA;\n            } else {\n                minOverlap = overlapBA;\n                collision.axisBody = bodyB;\n            }\n\n            // important for reuse later\n            collision.axisNumber = minOverlap.axisNumber;\n        }\n\n        collision.bodyA = bodyA.id < bodyB.id ? bodyA : bodyB;\n        collision.bodyB = bodyA.id < bodyB.id ? bodyB : bodyA;\n        collision.collided = true;\n        collision.depth = minOverlap.overlap;\n        collision.parentA = collision.bodyA.parent;\n        collision.parentB = collision.bodyB.parent;\n        \n        bodyA = collision.bodyA;\n        bodyB = collision.bodyB;\n\n        // ensure normal is facing away from bodyA\n        if (Vector.dot(minOverlap.axis, Vector.sub(bodyB.position, bodyA.position)) < 0) {\n            collision.normal = {\n                x: minOverlap.axis.x,\n                y: minOverlap.axis.y\n            };\n        } else {\n            collision.normal = {\n                x: -minOverlap.axis.x,\n                y: -minOverlap.axis.y\n            };\n        }\n\n        collision.tangent = Vector.perp(collision.normal);\n\n        collision.penetration = collision.penetration || {};\n        collision.penetration.x = collision.normal.x * collision.depth;\n        collision.penetration.y = collision.normal.y * collision.depth; \n\n        // find support points, there is always either exactly one or two\n        var verticesB = SAT._findSupports(bodyA, bodyB, collision.normal),\n            supports = [];\n\n        // find the supports from bodyB that are inside bodyA\n        if (Vertices.contains(bodyA.vertices, verticesB[0]))\n            supports.push(verticesB[0]);\n\n        if (Vertices.contains(bodyA.vertices, verticesB[1]))\n            supports.push(verticesB[1]);\n\n        // find the supports from bodyA that are inside bodyB\n        if (supports.length < 2) {\n            var verticesA = SAT._findSupports(bodyB, bodyA, Vector.neg(collision.normal));\n                \n            if (Vertices.contains(bodyB.vertices, verticesA[0]))\n                supports.push(verticesA[0]);\n\n            if (supports.length < 2 && Vertices.contains(bodyB.vertices, verticesA[1]))\n                supports.push(verticesA[1]);\n        }\n\n        // account for the edge case of overlapping but no vertex containment\n        if (supports.length < 1)\n            supports = [verticesB[0]];\n        \n        collision.supports = supports;\n\n        return collision;\n    };\n\n    /**\n     * Find the overlap between two sets of vertices.\n     * @method _overlapAxes\n     * @private\n     * @param {} verticesA\n     * @param {} verticesB\n     * @param {} axes\n     * @return result\n     */\n    SAT._overlapAxes = function(verticesA, verticesB, axes) {\n        var projectionA = Vector._temp[0], \n            projectionB = Vector._temp[1],\n            result = { overlap: Number.MAX_VALUE },\n            overlap,\n            axis;\n\n        for (var i = 0; i < axes.length; i++) {\n            axis = axes[i];\n\n            SAT._projectToAxis(projectionA, verticesA, axis);\n            SAT._projectToAxis(projectionB, verticesB, axis);\n\n            overlap = Math.min(projectionA.max - projectionB.min, projectionB.max - projectionA.min);\n\n            if (overlap <= 0) {\n                result.overlap = overlap;\n                return result;\n            }\n\n            if (overlap < result.overlap) {\n                result.overlap = overlap;\n                result.axis = axis;\n                result.axisNumber = i;\n            }\n        }\n\n        return result;\n    };\n\n    /**\n     * Projects vertices on an axis and returns an interval.\n     * @method _projectToAxis\n     * @private\n     * @param {} projection\n     * @param {} vertices\n     * @param {} axis\n     */\n    SAT._projectToAxis = function(projection, vertices, axis) {\n        var min = Vector.dot(vertices[0], axis),\n            max = min;\n\n        for (var i = 1; i < vertices.length; i += 1) {\n            var dot = Vector.dot(vertices[i], axis);\n\n            if (dot > max) { \n                max = dot; \n            } else if (dot < min) { \n                min = dot; \n            }\n        }\n\n        projection.min = min;\n        projection.max = max;\n    };\n    \n    /**\n     * Finds supporting vertices given two bodies along a given direction using hill-climbing.\n     * @method _findSupports\n     * @private\n     * @param {} bodyA\n     * @param {} bodyB\n     * @param {} normal\n     * @return [vector]\n     */\n    SAT._findSupports = function(bodyA, bodyB, normal) {\n        var nearestDistance = Number.MAX_VALUE,\n            vertexToBody = Vector._temp[0],\n            vertices = bodyB.vertices,\n            bodyAPosition = bodyA.position,\n            distance,\n            vertex,\n            vertexA,\n            vertexB;\n\n        // find closest vertex on bodyB\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            vertexToBody.x = vertex.x - bodyAPosition.x;\n            vertexToBody.y = vertex.y - bodyAPosition.y;\n            distance = -Vector.dot(normal, vertexToBody);\n\n            if (distance < nearestDistance) {\n                nearestDistance = distance;\n                vertexA = vertex;\n            }\n        }\n\n        // find next closest vertex using the two connected to it\n        var prevIndex = vertexA.index - 1 >= 0 ? vertexA.index - 1 : vertices.length - 1;\n        vertex = vertices[prevIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        nearestDistance = -Vector.dot(normal, vertexToBody);\n        vertexB = vertex;\n\n        var nextIndex = (vertexA.index + 1) % vertices.length;\n        vertex = vertices[nextIndex];\n        vertexToBody.x = vertex.x - bodyAPosition.x;\n        vertexToBody.y = vertex.y - bodyAPosition.y;\n        distance = -Vector.dot(normal, vertexToBody);\n        if (distance < nearestDistance) {\n            vertexB = vertex;\n        }\n\n        return [vertexA, vertexB];\n    };\n\n})();\n\n},{\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],12:[function(_dereq_,module,exports){\n/**\n* The `Matter.Constraint` module contains methods for creating and manipulating constraints.\n* Constraints are used for specifying that a fixed distance must be maintained between two bodies (or a body and a fixed world-space position).\n* The stiffness of constraints can be modified to create springs or elastic.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Constraint\n*/\n\nvar Constraint = {};\n\nmodule.exports = Constraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Vector = _dereq_('../geometry/Vector');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Axes = _dereq_('../geometry/Axes');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    Constraint._warming = 0.4;\n    Constraint._torqueDampen = 1;\n    Constraint._minLength = 0.000001;\n\n    /**\n     * Creates a new constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * To simulate a revolute constraint (or pin joint) set `length: 0` and a high `stiffness` value (e.g. `0.7` or above).\n     * If the constraint is unstable, try lowering the `stiffness` value and / or increasing `engine.constraintIterations`.\n     * For compound bodies, constraints must be applied to the parent body (not one of its parts).\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {} options\n     * @return {constraint} constraint\n     */\n    Constraint.create = function(options) {\n        var constraint = options;\n\n        // if bodies defined but no points, use body centre\n        if (constraint.bodyA && !constraint.pointA)\n            constraint.pointA = { x: 0, y: 0 };\n        if (constraint.bodyB && !constraint.pointB)\n            constraint.pointB = { x: 0, y: 0 };\n\n        // calculate static length using initial world space points\n        var initialPointA = constraint.bodyA ? Vector.add(constraint.bodyA.position, constraint.pointA) : constraint.pointA,\n            initialPointB = constraint.bodyB ? Vector.add(constraint.bodyB.position, constraint.pointB) : constraint.pointB,\n            length = Vector.magnitude(Vector.sub(initialPointA, initialPointB));\n    \n        constraint.length = typeof constraint.length !== 'undefined' ? constraint.length : length;\n\n        // option defaults\n        constraint.id = constraint.id || Common.nextId();\n        constraint.label = constraint.label || 'Constraint';\n        constraint.type = 'constraint';\n        constraint.stiffness = constraint.stiffness || (constraint.length > 0 ? 1 : 0.7);\n        constraint.damping = constraint.damping || 0;\n        constraint.angularStiffness = constraint.angularStiffness || 0;\n        constraint.angleA = constraint.bodyA ? constraint.bodyA.angle : constraint.angleA;\n        constraint.angleB = constraint.bodyB ? constraint.bodyB.angle : constraint.angleB;\n        constraint.plugin = {};\n\n        // render\n        var render = {\n            visible: true,\n            lineWidth: 2,\n            strokeStyle: '#ffffff',\n            type: 'line',\n            anchors: true\n        };\n\n        if (constraint.length === 0 && constraint.stiffness > 0.1) {\n            render.type = 'pin';\n            render.anchors = false;\n        } else if (constraint.stiffness < 0.9) {\n            render.type = 'spring';\n        }\n\n        constraint.render = Common.extend(render, constraint.render);\n\n        return constraint;\n    };\n\n    /**\n     * Prepares for solving by constraint warming.\n     * @private\n     * @method preSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.preSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i += 1) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            body.position.x += impulse.x;\n            body.position.y += impulse.y;\n            body.angle += impulse.angle;\n        }\n    };\n\n    /**\n     * Solves all constraints in a list of collisions.\n     * @private\n     * @method solveAll\n     * @param {constraint[]} constraints\n     * @param {number} timeScale\n     */\n    Constraint.solveAll = function(constraints, timeScale) {\n        // Solve fixed constraints first.\n        for (var i = 0; i < constraints.length; i += 1) {\n            var constraint = constraints[i],\n                fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic),\n                fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (fixedA || fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n\n        // Solve free constraints last.\n        for (i = 0; i < constraints.length; i += 1) {\n            constraint = constraints[i];\n            fixedA = !constraint.bodyA || (constraint.bodyA && constraint.bodyA.isStatic);\n            fixedB = !constraint.bodyB || (constraint.bodyB && constraint.bodyB.isStatic);\n\n            if (!fixedA && !fixedB) {\n                Constraint.solve(constraints[i], timeScale);\n            }\n        }\n    };\n\n    /**\n     * Solves a distance constraint with Gauss-Siedel method.\n     * @private\n     * @method solve\n     * @param {constraint} constraint\n     * @param {number} timeScale\n     */\n    Constraint.solve = function(constraint, timeScale) {\n        var bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB;\n\n        if (!bodyA && !bodyB)\n            return;\n\n        // update reference angle\n        if (bodyA && !bodyA.isStatic) {\n            Vector.rotate(pointA, bodyA.angle - constraint.angleA, pointA);\n            constraint.angleA = bodyA.angle;\n        }\n        \n        // update reference angle\n        if (bodyB && !bodyB.isStatic) {\n            Vector.rotate(pointB, bodyB.angle - constraint.angleB, pointB);\n            constraint.angleB = bodyB.angle;\n        }\n\n        var pointAWorld = pointA,\n            pointBWorld = pointB;\n\n        if (bodyA) pointAWorld = Vector.add(bodyA.position, pointA);\n        if (bodyB) pointBWorld = Vector.add(bodyB.position, pointB);\n\n        if (!pointAWorld || !pointBWorld)\n            return;\n\n        var delta = Vector.sub(pointAWorld, pointBWorld),\n            currentLength = Vector.magnitude(delta);\n\n        // prevent singularity\n        if (currentLength < Constraint._minLength) {\n            currentLength = Constraint._minLength;\n        }\n\n        // solve distance constraint with Gauss-Siedel method\n        var difference = (currentLength - constraint.length) / currentLength,\n            stiffness = constraint.stiffness < 1 ? constraint.stiffness * timeScale : constraint.stiffness,\n            force = Vector.mult(delta, difference * stiffness),\n            massTotal = (bodyA ? bodyA.inverseMass : 0) + (bodyB ? bodyB.inverseMass : 0),\n            inertiaTotal = (bodyA ? bodyA.inverseInertia : 0) + (bodyB ? bodyB.inverseInertia : 0),\n            resistanceTotal = massTotal + inertiaTotal,\n            torque,\n            share,\n            normal,\n            normalVelocity,\n            relativeVelocity;\n\n        if (constraint.damping) {\n            var zero = Vector.create();\n            normal = Vector.div(delta, currentLength);\n\n            relativeVelocity = Vector.sub(\n                bodyB && Vector.sub(bodyB.position, bodyB.positionPrev) || zero,\n                bodyA && Vector.sub(bodyA.position, bodyA.positionPrev) || zero\n            );\n\n            normalVelocity = Vector.dot(normal, relativeVelocity);\n        }\n\n        if (bodyA && !bodyA.isStatic) {\n            share = bodyA.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyA.constraintImpulse.x -= force.x * share;\n            bodyA.constraintImpulse.y -= force.y * share;\n\n            // apply forces\n            bodyA.position.x -= force.x * share;\n            bodyA.position.y -= force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyA.positionPrev.x -= constraint.damping * normal.x * normalVelocity * share;\n                bodyA.positionPrev.y -= constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointA, force) / resistanceTotal) * Constraint._torqueDampen * bodyA.inverseInertia * (1 - constraint.angularStiffness);\n            bodyA.constraintImpulse.angle -= torque;\n            bodyA.angle -= torque;\n        }\n\n        if (bodyB && !bodyB.isStatic) {\n            share = bodyB.inverseMass / massTotal;\n\n            // keep track of applied impulses for post solving\n            bodyB.constraintImpulse.x += force.x * share;\n            bodyB.constraintImpulse.y += force.y * share;\n            \n            // apply forces\n            bodyB.position.x += force.x * share;\n            bodyB.position.y += force.y * share;\n\n            // apply damping\n            if (constraint.damping) {\n                bodyB.positionPrev.x += constraint.damping * normal.x * normalVelocity * share;\n                bodyB.positionPrev.y += constraint.damping * normal.y * normalVelocity * share;\n            }\n\n            // apply torque\n            torque = (Vector.cross(pointB, force) / resistanceTotal) * Constraint._torqueDampen * bodyB.inverseInertia * (1 - constraint.angularStiffness);\n            bodyB.constraintImpulse.angle += torque;\n            bodyB.angle += torque;\n        }\n\n    };\n\n    /**\n     * Performs body updates required after solving constraints.\n     * @private\n     * @method postSolveAll\n     * @param {body[]} bodies\n     */\n    Constraint.postSolveAll = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                impulse = body.constraintImpulse;\n\n            if (body.isStatic || (impulse.x === 0 && impulse.y === 0 && impulse.angle === 0)) {\n                continue;\n            }\n\n            Sleeping.set(body, false);\n\n            // update geometry and reset\n            for (var j = 0; j < body.parts.length; j++) {\n                var part = body.parts[j];\n                \n                Vertices.translate(part.vertices, impulse);\n\n                if (j > 0) {\n                    part.position.x += impulse.x;\n                    part.position.y += impulse.y;\n                }\n\n                if (impulse.angle !== 0) {\n                    Vertices.rotate(part.vertices, impulse.angle, body.position);\n                    Axes.rotate(part.axes, impulse.angle);\n                    if (j > 0) {\n                        Vector.rotateAbout(part.position, impulse.angle, body.position, part.position);\n                    }\n                }\n\n                Bounds.update(part.bounds, part.vertices, body.velocity);\n            }\n\n            // dampen the cached impulse for warming next step\n            impulse.angle *= Constraint._warming;\n            impulse.x *= Constraint._warming;\n            impulse.y *= Constraint._warming;\n        }\n    };\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` uniquely identifying number generated in `Composite.create` by `Common.nextId`.\n     *\n     * @property id\n     * @type number\n     */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * An arbitrary `String` name to help the user identify and manage bodies.\n     *\n     * @property label\n     * @type string\n     * @default \"Constraint\"\n     */\n\n    /**\n     * An `Object` that defines the rendering properties to be consumed by the module `Matter.Render`.\n     *\n     * @property render\n     * @type object\n     */\n\n    /**\n     * A flag that indicates if the constraint should be rendered.\n     *\n     * @property render.visible\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Number` that defines the line width to use when rendering the constraint outline.\n     * A value of `0` means no outline will be rendered.\n     *\n     * @property render.lineWidth\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A `String` that defines the stroke style to use when rendering the constraint outline.\n     * It is the same as when using a canvas, so it accepts CSS style property values.\n     *\n     * @property render.strokeStyle\n     * @type string\n     * @default a random colour\n     */\n\n    /**\n     * A `String` that defines the constraint rendering type. \n     * The possible values are 'line', 'pin', 'spring'.\n     * An appropriate render type will be automatically chosen unless one is given in options.\n     *\n     * @property render.type\n     * @type string\n     * @default 'line'\n     */\n\n    /**\n     * A `Boolean` that defines if the constraint's anchor points should be rendered.\n     *\n     * @property render.anchors\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * The first possible `Body` that this constraint is attached to.\n     *\n     * @property bodyA\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The second possible `Body` that this constraint is attached to.\n     *\n     * @property bodyB\n     * @type body\n     * @default null\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyA` if defined, otherwise a world-space position.\n     *\n     * @property pointA\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Vector` that specifies the offset of the constraint from center of the `constraint.bodyB` if defined, otherwise a world-space position.\n     *\n     * @property pointB\n     * @type vector\n     * @default { x: 0, y: 0 }\n     */\n\n    /**\n     * A `Number` that specifies the stiffness of the constraint, i.e. the rate at which it returns to its resting `constraint.length`.\n     * A value of `1` means the constraint should be very stiff.\n     * A value of `0.2` means the constraint acts like a soft spring.\n     *\n     * @property stiffness\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the damping of the constraint, \n     * i.e. the amount of resistance applied to each body based on their velocities to limit the amount of oscillation.\n     * Damping will only be apparent when the constraint also has a very low `stiffness`.\n     * A value of `0.1` means the constraint will apply heavy damping, resulting in little to no oscillation.\n     * A value of `0` means the constraint will apply no damping.\n     *\n     * @property damping\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * A `Number` that specifies the target resting length of the constraint. \n     * It is calculated automatically in `Constraint.create` from initial positions of the `constraint.bodyA` and `constraint.bodyB`.\n     *\n     * @property length\n     * @type number\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../core/Common\":14,\"../core/Sleeping\":22,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],13:[function(_dereq_,module,exports){\n/**\n* The `Matter.MouseConstraint` module contains methods for creating mouse constraints.\n* Mouse constraints are used for allowing user interaction, providing the ability to move bodies via the mouse or touch.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class MouseConstraint\n*/\n\nvar MouseConstraint = {};\n\nmodule.exports = MouseConstraint;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Sleeping = _dereq_('../core/Sleeping');\nvar Mouse = _dereq_('../core/Mouse');\nvar Events = _dereq_('../core/Events');\nvar Detector = _dereq_('../collision/Detector');\nvar Constraint = _dereq_('./Constraint');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Bounds = _dereq_('../geometry/Bounds');\n\n(function() {\n\n    /**\n     * Creates a new mouse constraint.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {engine} engine\n     * @param {} options\n     * @return {MouseConstraint} A new MouseConstraint\n     */\n    MouseConstraint.create = function(engine, options) {\n        var mouse = (engine ? engine.mouse : null) || (options ? options.mouse : null);\n\n        if (!mouse) {\n            if (engine && engine.render && engine.render.canvas) {\n                mouse = Mouse.create(engine.render.canvas);\n            } else if (options && options.element) {\n                mouse = Mouse.create(options.element);\n            } else {\n                mouse = Mouse.create();\n                Common.warn('MouseConstraint.create: options.mouse was undefined, options.element was undefined, may not function as expected');\n            }\n        }\n\n        var constraint = Constraint.create({ \n            label: 'Mouse Constraint',\n            pointA: mouse.position,\n            pointB: { x: 0, y: 0 },\n            length: 0.01, \n            stiffness: 0.1,\n            angularStiffness: 1,\n            render: {\n                strokeStyle: '#90EE90',\n                lineWidth: 3\n            }\n        });\n\n        var defaults = {\n            type: 'mouseConstraint',\n            mouse: mouse,\n            element: null,\n            body: null,\n            constraint: constraint,\n            collisionFilter: {\n                category: 0x0001,\n                mask: 0xFFFFFFFF,\n                group: 0\n            }\n        };\n\n        var mouseConstraint = Common.extend(defaults, options);\n\n        Events.on(engine, 'beforeUpdate', function() {\n            var allBodies = Composite.allBodies(engine.world);\n            MouseConstraint.update(mouseConstraint, allBodies);\n            MouseConstraint._triggerEvents(mouseConstraint);\n        });\n\n        return mouseConstraint;\n    };\n\n    /**\n     * Updates the given mouse constraint.\n     * @private\n     * @method update\n     * @param {MouseConstraint} mouseConstraint\n     * @param {body[]} bodies\n     */\n    MouseConstraint.update = function(mouseConstraint, bodies) {\n        var mouse = mouseConstraint.mouse,\n            constraint = mouseConstraint.constraint,\n            body = mouseConstraint.body;\n\n        if (mouse.button === 0) {\n            if (!constraint.bodyB) {\n                for (var i = 0; i < bodies.length; i++) {\n                    body = bodies[i];\n                    if (Bounds.contains(body.bounds, mouse.position) \n                            && Detector.canCollide(body.collisionFilter, mouseConstraint.collisionFilter)) {\n                        for (var j = body.parts.length > 1 ? 1 : 0; j < body.parts.length; j++) {\n                            var part = body.parts[j];\n                            if (Vertices.contains(part.vertices, mouse.position)) {\n                                constraint.pointA = mouse.position;\n                                constraint.bodyB = mouseConstraint.body = body;\n                                constraint.pointB = { x: mouse.position.x - body.position.x, y: mouse.position.y - body.position.y };\n                                constraint.angleB = body.angle;\n\n                                Sleeping.set(body, false);\n                                Events.trigger(mouseConstraint, 'startdrag', { mouse: mouse, body: body });\n\n                                break;\n                            }\n                        }\n                    }\n                }\n            } else {\n                Sleeping.set(constraint.bodyB, false);\n                constraint.pointA = mouse.position;\n            }\n        } else {\n            constraint.bodyB = mouseConstraint.body = null;\n            constraint.pointB = null;\n\n            if (body)\n                Events.trigger(mouseConstraint, 'enddrag', { mouse: mouse, body: body });\n        }\n    };\n\n    /**\n     * Triggers mouse constraint events.\n     * @method _triggerEvents\n     * @private\n     * @param {mouse} mouseConstraint\n     */\n    MouseConstraint._triggerEvents = function(mouseConstraint) {\n        var mouse = mouseConstraint.mouse,\n            mouseEvents = mouse.sourceEvents;\n\n        if (mouseEvents.mousemove)\n            Events.trigger(mouseConstraint, 'mousemove', { mouse: mouse });\n\n        if (mouseEvents.mousedown)\n            Events.trigger(mouseConstraint, 'mousedown', { mouse: mouse });\n\n        if (mouseEvents.mouseup)\n            Events.trigger(mouseConstraint, 'mouseup', { mouse: mouse });\n\n        // reset the mouse state ready for the next step\n        Mouse.clearSourceEvents(mouse);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired when the mouse has moved (or a touch moves) during the last step\n    *\n    * @event mousemove\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is down (or a touch has started) during the last step\n    *\n    * @event mousedown\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the mouse is up (or a touch has ended) during the last step\n    *\n    * @event mouseup\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user starts dragging a body\n    *\n    * @event startdrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired when the user ends dragging a body\n    *\n    * @event enddrag\n    * @param {} event An event object\n    * @param {mouse} event.mouse The engine's mouse instance\n    * @param {body} event.body The body that has stopped being dragged\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A `String` denoting the type of object.\n     *\n     * @property type\n     * @type string\n     * @default \"constraint\"\n     * @readOnly\n     */\n\n    /**\n     * The `Mouse` instance in use. If not supplied in `MouseConstraint.create`, one will be created.\n     *\n     * @property mouse\n     * @type mouse\n     * @default mouse\n     */\n\n    /**\n     * The `Body` that is currently being moved by the user, or `null` if no body.\n     *\n     * @property body\n     * @type body\n     * @default null\n     */\n\n    /**\n     * The `Constraint` object that is used to move the body during interaction.\n     *\n     * @property constraint\n     * @type constraint\n     */\n\n    /**\n     * An `Object` that specifies the collision filter properties.\n     * The collision filter allows the user to define which types of body this mouse constraint can interact with.\n     * See `body.collisionFilter` for more information.\n     *\n     * @property collisionFilter\n     * @type object\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Detector\":5,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../core/Sleeping\":22,\"../geometry/Bounds\":26,\"../geometry/Vertices\":29,\"./Constraint\":12}],14:[function(_dereq_,module,exports){\n(function (global){\n/**\n* The `Matter.Common` module contains utility functions that are common to all modules.\n*\n* @class Common\n*/\n\nvar Common = {};\n\nmodule.exports = Common;\n\n(function() {\n\n    Common._nextId = 0;\n    Common._seed = 0;\n    Common._nowStartTime = +(new Date());\n\n    /**\n     * Extends the object in the first argument using the object in the second argument.\n     * @method extend\n     * @param {} obj\n     * @param {boolean} deep\n     * @return {} obj extended\n     */\n    Common.extend = function(obj, deep) {\n        var argsStart,\n            args,\n            deepClone;\n\n        if (typeof deep === 'boolean') {\n            argsStart = 2;\n            deepClone = deep;\n        } else {\n            argsStart = 1;\n            deepClone = true;\n        }\n\n        for (var i = argsStart; i < arguments.length; i++) {\n            var source = arguments[i];\n\n            if (source) {\n                for (var prop in source) {\n                    if (deepClone && source[prop] && source[prop].constructor === Object) {\n                        if (!obj[prop] || obj[prop].constructor === Object) {\n                            obj[prop] = obj[prop] || {};\n                            Common.extend(obj[prop], deepClone, source[prop]);\n                        } else {\n                            obj[prop] = source[prop];\n                        }\n                    } else {\n                        obj[prop] = source[prop];\n                    }\n                }\n            }\n        }\n        \n        return obj;\n    };\n\n    /**\n     * Creates a new clone of the object, if deep is true references will also be cloned.\n     * @method clone\n     * @param {} obj\n     * @param {bool} deep\n     * @return {} obj cloned\n     */\n    Common.clone = function(obj, deep) {\n        return Common.extend({}, deep, obj);\n    };\n\n    /**\n     * Returns the list of keys for the given object.\n     * @method keys\n     * @param {} obj\n     * @return {string[]} keys\n     */\n    Common.keys = function(obj) {\n        if (Object.keys)\n            return Object.keys(obj);\n\n        // avoid hasOwnProperty for performance\n        var keys = [];\n        for (var key in obj)\n            keys.push(key);\n        return keys;\n    };\n\n    /**\n     * Returns the list of values for the given object.\n     * @method values\n     * @param {} obj\n     * @return {array} Array of the objects property values\n     */\n    Common.values = function(obj) {\n        var values = [];\n        \n        if (Object.keys) {\n            var keys = Object.keys(obj);\n            for (var i = 0; i < keys.length; i++) {\n                values.push(obj[keys[i]]);\n            }\n            return values;\n        }\n        \n        // avoid hasOwnProperty for performance\n        for (var key in obj)\n            values.push(obj[key]);\n        return values;\n    };\n\n    /**\n     * Gets a value from `base` relative to the `path` string.\n     * @method get\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} The object at the given path\n     */\n    Common.get = function(obj, path, begin, end) {\n        path = path.split('.').slice(begin, end);\n\n        for (var i = 0; i < path.length; i += 1) {\n            obj = obj[path[i]];\n        }\n\n        return obj;\n    };\n\n    /**\n     * Sets a value on `base` relative to the given `path` string.\n     * @method set\n     * @param {} obj The base object\n     * @param {string} path The path relative to `base`, e.g. 'Foo.Bar.baz'\n     * @param {} val The value to set\n     * @param {number} [begin] Path slice begin\n     * @param {number} [end] Path slice end\n     * @return {} Pass through `val` for chaining\n     */\n    Common.set = function(obj, path, val, begin, end) {\n        var parts = path.split('.').slice(begin, end);\n        Common.get(obj, path, 0, -1)[parts[parts.length - 1]] = val;\n        return val;\n    };\n\n    /**\n     * Shuffles the given array in-place.\n     * The function uses a seeded random generator.\n     * @method shuffle\n     * @param {array} array\n     * @return {array} array shuffled randomly\n     */\n    Common.shuffle = function(array) {\n        for (var i = array.length - 1; i > 0; i--) {\n            var j = Math.floor(Common.random() * (i + 1));\n            var temp = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n        }\n        return array;\n    };\n\n    /**\n     * Randomly chooses a value from a list with equal probability.\n     * The function uses a seeded random generator.\n     * @method choose\n     * @param {array} choices\n     * @return {object} A random choice object from the array\n     */\n    Common.choose = function(choices) {\n        return choices[Math.floor(Common.random() * choices.length)];\n    };\n\n    /**\n     * Returns true if the object is a HTMLElement, otherwise false.\n     * @method isElement\n     * @param {object} obj\n     * @return {boolean} True if the object is a HTMLElement, otherwise false\n     */\n    Common.isElement = function(obj) {\n        if (typeof HTMLElement !== 'undefined') {\n            return obj instanceof HTMLElement;\n        }\n\n        return !!(obj && obj.nodeType && obj.nodeName);\n    };\n\n    /**\n     * Returns true if the object is an array.\n     * @method isArray\n     * @param {object} obj\n     * @return {boolean} True if the object is an array, otherwise false\n     */\n    Common.isArray = function(obj) {\n        return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n\n    /**\n     * Returns true if the object is a function.\n     * @method isFunction\n     * @param {object} obj\n     * @return {boolean} True if the object is a function, otherwise false\n     */\n    Common.isFunction = function(obj) {\n        return typeof obj === \"function\";\n    };\n\n    /**\n     * Returns true if the object is a plain object.\n     * @method isPlainObject\n     * @param {object} obj\n     * @return {boolean} True if the object is a plain object, otherwise false\n     */\n    Common.isPlainObject = function(obj) {\n        return typeof obj === 'object' && obj.constructor === Object;\n    };\n\n    /**\n     * Returns true if the object is a string.\n     * @method isString\n     * @param {object} obj\n     * @return {boolean} True if the object is a string, otherwise false\n     */\n    Common.isString = function(obj) {\n        return toString.call(obj) === '[object String]';\n    };\n    \n    /**\n     * Returns the given value clamped between a minimum and maximum value.\n     * @method clamp\n     * @param {number} value\n     * @param {number} min\n     * @param {number} max\n     * @return {number} The value clamped between min and max inclusive\n     */\n    Common.clamp = function(value, min, max) {\n        if (value < min)\n            return min;\n        if (value > max)\n            return max;\n        return value;\n    };\n    \n    /**\n     * Returns the sign of the given value.\n     * @method sign\n     * @param {number} value\n     * @return {number} -1 if negative, +1 if 0 or positive\n     */\n    Common.sign = function(value) {\n        return value < 0 ? -1 : 1;\n    };\n    \n    /**\n     * Returns the current timestamp since the time origin (e.g. from page load).\n     * The result will be high-resolution including decimal places if available.\n     * @method now\n     * @return {number} the current timestamp\n     */\n    Common.now = function() {\n        if (window.performance) {\n            if (window.performance.now) {\n                return window.performance.now();\n            } else if (window.performance.webkitNow) {\n                return window.performance.webkitNow();\n            }\n        }\n\n        return (new Date()) - Common._nowStartTime;\n    };\n    \n    /**\n     * Returns a random value between a minimum and a maximum value inclusive.\n     * The function uses a seeded random generator.\n     * @method random\n     * @param {number} min\n     * @param {number} max\n     * @return {number} A random number between min and max inclusive\n     */\n    Common.random = function(min, max) {\n        min = (typeof min !== \"undefined\") ? min : 0;\n        max = (typeof max !== \"undefined\") ? max : 1;\n        return min + _seededRandom() * (max - min);\n    };\n\n    var _seededRandom = function() {\n        // https://en.wikipedia.org/wiki/Linear_congruential_generator\n        Common._seed = (Common._seed * 9301 + 49297) % 233280;\n        return Common._seed / 233280;\n    };\n\n    /**\n     * Converts a CSS hex colour string into an integer.\n     * @method colorToNumber\n     * @param {string} colorString\n     * @return {number} An integer representing the CSS hex string\n     */\n    Common.colorToNumber = function(colorString) {\n        colorString = colorString.replace('#','');\n\n        if (colorString.length == 3) {\n            colorString = colorString.charAt(0) + colorString.charAt(0)\n                        + colorString.charAt(1) + colorString.charAt(1)\n                        + colorString.charAt(2) + colorString.charAt(2);\n        }\n\n        return parseInt(colorString, 16);\n    };\n\n    /**\n     * The console logging level to use, where each level includes all levels above and excludes the levels below.\n     * The default level is 'debug' which shows all console messages.  \n     *\n     * Possible level values are:\n     * - 0 = None\n     * - 1 = Debug\n     * - 2 = Info\n     * - 3 = Warn\n     * - 4 = Error\n     * @property Common.logLevel\n     * @type {Number}\n     * @default 1\n     */\n    Common.logLevel = 1;\n\n    /**\n     * Shows a `console.log` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method log\n     * @param ...objs {} The objects to log.\n     */\n    Common.log = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.log.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.info` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method info\n     * @param ...objs {} The objects to log.\n     */\n    Common.info = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 2) {\n            console.info.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Shows a `console.warn` message only if the current `Common.logLevel` allows it.\n     * The message will be prefixed with 'matter-js' to make it easily identifiable.\n     * @method warn\n     * @param ...objs {} The objects to log.\n     */\n    Common.warn = function() {\n        if (console && Common.logLevel > 0 && Common.logLevel <= 3) {\n            console.warn.apply(console, ['matter-js:'].concat(Array.prototype.slice.call(arguments)));\n        }\n    };\n\n    /**\n     * Returns the next unique sequential ID.\n     * @method nextId\n     * @return {Number} Unique sequential ID\n     */\n    Common.nextId = function() {\n        return Common._nextId++;\n    };\n\n    /**\n     * A cross browser compatible indexOf implementation.\n     * @method indexOf\n     * @param {array} haystack\n     * @param {object} needle\n     * @return {number} The position of needle in haystack, otherwise -1.\n     */\n    Common.indexOf = function(haystack, needle) {\n        if (haystack.indexOf)\n            return haystack.indexOf(needle);\n\n        for (var i = 0; i < haystack.length; i++) {\n            if (haystack[i] === needle)\n                return i;\n        }\n\n        return -1;\n    };\n\n    /**\n     * A cross browser compatible array map implementation.\n     * @method map\n     * @param {array} list\n     * @param {function} func\n     * @return {array} Values from list transformed by func.\n     */\n    Common.map = function(list, func) {\n        if (list.map) {\n            return list.map(func);\n        }\n\n        var mapped = [];\n\n        for (var i = 0; i < list.length; i += 1) {\n            mapped.push(func(list[i]));\n        }\n\n        return mapped;\n    };\n\n    /**\n     * Takes a directed graph and returns the partially ordered set of vertices in topological order.\n     * Circular dependencies are allowed.\n     * @method topologicalSort\n     * @param {object} graph\n     * @return {array} Partially ordered set of vertices in topological order.\n     */\n    Common.topologicalSort = function(graph) {\n        // https://github.com/mgechev/javascript-algorithms\n        // Copyright (c) Minko Gechev (MIT license)\n        // Modifications: tidy formatting and naming\n        var result = [],\n            visited = [],\n            temp = [];\n\n        for (var node in graph) {\n            if (!visited[node] && !temp[node]) {\n                Common._topologicalSort(node, visited, temp, graph, result);\n            }\n        }\n\n        return result;\n    };\n\n    Common._topologicalSort = function(node, visited, temp, graph, result) {\n        var neighbors = graph[node] || [];\n        temp[node] = true;\n\n        for (var i = 0; i < neighbors.length; i += 1) {\n            var neighbor = neighbors[i];\n\n            if (temp[neighbor]) {\n                // skip circular dependencies\n                continue;\n            }\n\n            if (!visited[neighbor]) {\n                Common._topologicalSort(neighbor, visited, temp, graph, result);\n            }\n        }\n\n        temp[node] = false;\n        visited[node] = true;\n\n        result.push(node);\n    };\n\n    /**\n     * Takes _n_ functions as arguments and returns a new function that calls them in order.\n     * The arguments applied when calling the new function will also be applied to every function passed.\n     * The value of `this` refers to the last value returned in the chain that was not `undefined`.\n     * Therefore if a passed function does not return a value, the previously returned value is maintained.\n     * After all passed functions have been called the new function returns the last returned value (if any).\n     * If any of the passed functions are a chain, then the chain will be flattened.\n     * @method chain\n     * @param ...funcs {function} The functions to chain.\n     * @return {function} A new function that calls the passed functions in order.\n     */\n    Common.chain = function() {\n        var funcs = [];\n\n        for (var i = 0; i < arguments.length; i += 1) {\n            var func = arguments[i];\n\n            if (func._chained) {\n                // flatten already chained functions\n                funcs.push.apply(funcs, func._chained);\n            } else {\n                funcs.push(func);\n            }\n        }\n\n        var chain = function() {\n            // https://github.com/GoogleChrome/devtools-docs/issues/53#issuecomment-51941358\n            var lastResult,\n                args = new Array(arguments.length);\n\n            for (var i = 0, l = arguments.length; i < l; i++) {\n                args[i] = arguments[i];\n            }\n\n            for (i = 0; i < funcs.length; i += 1) {\n                var result = funcs[i].apply(lastResult, args);\n\n                if (typeof result !== 'undefined') {\n                    lastResult = result;\n                }\n            }\n\n            return lastResult;\n        };\n\n        chain._chained = funcs;\n\n        return chain;\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathBefore\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathBefore = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            func,\n            Common.get(base, path)\n        ));\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `base`.\n     * See also docs for `Common.chain`.\n     * @method chainPathAfter\n     * @param {} base The base object\n     * @param {string} path The path relative to `base`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Common.chainPathAfter = function(base, path, func) {\n        return Common.set(base, path, Common.chain(\n            Common.get(base, path),\n            func\n        ));\n    };\n\n    /**\n     * Used to require external libraries outside of the bundle.\n     * It first looks for the `globalName` on the environment's global namespace.\n     * If the global is not found, it will fall back to using the standard `require` using the `moduleName`.\n     * @private\n     * @method _requireGlobal\n     * @param {string} globalName The global module name\n     * @param {string} moduleName The fallback CommonJS module name\n     * @return {} The loaded module\n     */\n    Common._requireGlobal = function(globalName, moduleName) {\n        var obj = (typeof window !== 'undefined' ? window[globalName] : typeof global !== 'undefined' ? global[globalName] : null);\n        return obj || _dereq_(moduleName);\n    };\n})();\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],15:[function(_dereq_,module,exports){\n/**\n* The `Matter.Engine` module contains methods for creating and manipulating engines.\n* An engine is a controller that manages updating the simulation of the world.\n* See `Matter.Runner` for an optional game loop utility.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Engine\n*/\n\nvar Engine = {};\n\nmodule.exports = Engine;\n\nvar World = _dereq_('../body/World');\nvar Sleeping = _dereq_('./Sleeping');\nvar Resolver = _dereq_('../collision/Resolver');\nvar Render = _dereq_('../render/Render');\nvar Pairs = _dereq_('../collision/Pairs');\nvar Metrics = _dereq_('./Metrics');\nvar Grid = _dereq_('../collision/Grid');\nvar Events = _dereq_('./Events');\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('./Common');\nvar Body = _dereq_('../body/Body');\n\n(function() {\n\n    /**\n     * Creates a new engine. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {engine} engine\n     */\n    Engine.create = function(element, options) {\n        // options may be passed as the first (and only) argument\n        options = Common.isElement(element) ? options : element;\n        element = Common.isElement(element) ? element : null;\n        options = options || {};\n\n        if (element || options.render) {\n            Common.warn('Engine.create: engine.render is deprecated (see docs)');\n        }\n\n        var defaults = {\n            positionIterations: 6,\n            velocityIterations: 4,\n            constraintIterations: 2,\n            enableSleeping: false,\n            events: [],\n            plugin: {},\n            timing: {\n                timestamp: 0,\n                timeScale: 1\n            },\n            broadphase: {\n                controller: Grid\n            }\n        };\n\n        var engine = Common.extend(defaults, options);\n\n        // @deprecated\n        if (element || engine.render) {\n            var renderDefaults = {\n                element: element,\n                controller: Render\n            };\n            \n            engine.render = Common.extend(renderDefaults, engine.render);\n        }\n\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            engine.render = engine.render.controller.create(engine.render);\n        }\n\n        // @deprecated\n        if (engine.render) {\n            engine.render.engine = engine;\n        }\n\n        engine.world = options.world || World.create(engine.world);\n        engine.pairs = Pairs.create();\n        engine.broadphase = engine.broadphase.controller.create(engine.broadphase);\n        engine.metrics = engine.metrics || { extended: false };\n\n\n        return engine;\n    };\n\n    /**\n     * Moves the simulation forward in time by `delta` ms.\n     * The `correction` argument is an optional `Number` that specifies the time correction factor to apply to the update.\n     * This can help improve the accuracy of the simulation in cases where `delta` is changing between updates.\n     * The value of `correction` is defined as `delta / lastDelta`, i.e. the percentage change of `delta` over the last step.\n     * Therefore the value is always `1` (no correction) when `delta` constant (or when no correction is desired, which is the default).\n     * See the paper on <a href=\"http://lonesock.net/article/verlet.html\">Time Corrected Verlet</a> for more information.\n     *\n     * Triggers `beforeUpdate` and `afterUpdate` events.\n     * Triggers `collisionStart`, `collisionActive` and `collisionEnd` events.\n     * @method update\n     * @param {engine} engine\n     * @param {number} [delta=16.666]\n     * @param {number} [correction=1]\n     */\n    Engine.update = function(engine, delta, correction) {\n        delta = delta || 1000 / 60;\n        correction = correction || 1;\n\n        var world = engine.world,\n            timing = engine.timing,\n            broadphase = engine.broadphase,\n            broadphasePairs = [],\n            i;\n\n        // increment timestamp\n        timing.timestamp += delta * timing.timeScale;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(engine, 'beforeUpdate', event);\n\n        // get lists of all bodies and constraints, no matter what composites they are in\n        var allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world);\n\n\n        // if sleeping enabled, call the sleeping controller\n        if (engine.enableSleeping)\n            Sleeping.update(allBodies, timing.timeScale);\n\n        // applies gravity to all bodies\n        Engine._bodiesApplyGravity(allBodies, world.gravity);\n\n        // update all body position and rotation by integration\n        Engine._bodiesUpdate(allBodies, delta, timing.timeScale, correction, world.bounds);\n\n        // update all constraints (first pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // broadphase pass: find potential collision pairs\n        if (broadphase.controller) {\n            // if world is dirty, we must flush the whole grid\n            if (world.isModified)\n                broadphase.controller.clear(broadphase);\n\n            // update the grid buckets based on current bodies\n            broadphase.controller.update(broadphase, allBodies, engine, world.isModified);\n            broadphasePairs = broadphase.pairsList;\n        } else {\n            // if no broadphase set, we just pass all bodies\n            broadphasePairs = allBodies;\n        }\n\n        // clear all composite modified flags\n        if (world.isModified) {\n            Composite.setModified(world, false, false, true);\n        }\n\n        // narrowphase pass: find actual collisions, then create or update collision pairs\n        var collisions = broadphase.detector(broadphasePairs, engine);\n\n        // update collision pairs\n        var pairs = engine.pairs,\n            timestamp = timing.timestamp;\n        Pairs.update(pairs, collisions, timestamp);\n        Pairs.removeOld(pairs, timestamp);\n\n        // wake up bodies involved in collisions\n        if (engine.enableSleeping)\n            Sleeping.afterCollisions(pairs.list, timing.timeScale);\n\n        // trigger collision events\n        if (pairs.collisionStart.length > 0)\n            Events.trigger(engine, 'collisionStart', { pairs: pairs.collisionStart });\n\n        // iteratively resolve position between collisions\n        Resolver.preSolvePosition(pairs.list);\n        for (i = 0; i < engine.positionIterations; i++) {\n            Resolver.solvePosition(pairs.list, timing.timeScale);\n        }\n        Resolver.postSolvePosition(allBodies);\n\n        // update all constraints (second pass)\n        Constraint.preSolveAll(allBodies);\n        for (i = 0; i < engine.constraintIterations; i++) {\n            Constraint.solveAll(allConstraints, timing.timeScale);\n        }\n        Constraint.postSolveAll(allBodies);\n\n        // iteratively resolve velocity between collisions\n        Resolver.preSolveVelocity(pairs.list);\n        for (i = 0; i < engine.velocityIterations; i++) {\n            Resolver.solveVelocity(pairs.list, timing.timeScale);\n        }\n\n        // trigger collision events\n        if (pairs.collisionActive.length > 0)\n            Events.trigger(engine, 'collisionActive', { pairs: pairs.collisionActive });\n\n        if (pairs.collisionEnd.length > 0)\n            Events.trigger(engine, 'collisionEnd', { pairs: pairs.collisionEnd });\n\n\n        // clear force buffers\n        Engine._bodiesClearForces(allBodies);\n\n        Events.trigger(engine, 'afterUpdate', event);\n\n        return engine;\n    };\n    \n    /**\n     * Merges two engines by keeping the configuration of `engineA` but replacing the world with the one from `engineB`.\n     * @method merge\n     * @param {engine} engineA\n     * @param {engine} engineB\n     */\n    Engine.merge = function(engineA, engineB) {\n        Common.extend(engineA, engineB);\n        \n        if (engineB.world) {\n            engineA.world = engineB.world;\n\n            Engine.clear(engineA);\n\n            var bodies = Composite.allBodies(engineA.world);\n\n            for (var i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                Sleeping.set(body, false);\n                body.id = Common.nextId();\n            }\n        }\n    };\n\n    /**\n     * Clears the engine including the world, pairs and broadphase.\n     * @method clear\n     * @param {engine} engine\n     */\n    Engine.clear = function(engine) {\n        var world = engine.world;\n        \n        Pairs.clear(engine.pairs);\n\n        var broadphase = engine.broadphase;\n        if (broadphase.controller) {\n            var bodies = Composite.allBodies(world);\n            broadphase.controller.clear(broadphase);\n            broadphase.controller.update(broadphase, bodies, engine, true);\n        }\n    };\n\n    /**\n     * Zeroes the `body.force` and `body.torque` force buffers.\n     * @method _bodiesClearForces\n     * @private\n     * @param {body[]} bodies\n     */\n    Engine._bodiesClearForces = function(bodies) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            // reset force buffers\n            body.force.x = 0;\n            body.force.y = 0;\n            body.torque = 0;\n        }\n    };\n\n    /**\n     * Applys a mass dependant force to all given bodies.\n     * @method _bodiesApplyGravity\n     * @private\n     * @param {body[]} bodies\n     * @param {vector} gravity\n     */\n    Engine._bodiesApplyGravity = function(bodies, gravity) {\n        var gravityScale = typeof gravity.scale !== 'undefined' ? gravity.scale : 0.001;\n\n        if ((gravity.x === 0 && gravity.y === 0) || gravityScale === 0) {\n            return;\n        }\n        \n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            // apply gravity\n            body.force.y += body.mass * gravity.y * gravityScale;\n            body.force.x += body.mass * gravity.x * gravityScale;\n        }\n    };\n\n    /**\n     * Applys `Body.update` to all given `bodies`.\n     * @method _bodiesUpdate\n     * @private\n     * @param {body[]} bodies\n     * @param {number} deltaTime \n     * The amount of time elapsed between updates\n     * @param {number} timeScale\n     * @param {number} correction \n     * The Verlet correction factor (deltaTime / lastDeltaTime)\n     * @param {bounds} worldBounds\n     */\n    Engine._bodiesUpdate = function(bodies, deltaTime, timeScale, correction, worldBounds) {\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.isStatic || body.isSleeping)\n                continue;\n\n            Body.update(body, deltaTime, timeScale, correction);\n        }\n    };\n\n    /**\n     * An alias for `Runner.run`, see `Matter.Runner` for more information.\n     * @method run\n     * @param {engine} engine\n     */\n\n    /**\n    * Fired just before an update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update and all collision events\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have started to collide in the current tick (if any)\n    *\n    * @event collisionStart\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that are colliding in the current tick (if any)\n    *\n    * @event collisionActive\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine update, provides a list of all pairs that have ended collision in the current tick (if any)\n    *\n    * @event collisionEnd\n    * @param {} event An event object\n    * @param {} event.pairs List of affected pairs\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * An integer `Number` that specifies the number of position iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property positionIterations\n     * @type number\n     * @default 6\n     */\n\n    /**\n     * An integer `Number` that specifies the number of velocity iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     *\n     * @property velocityIterations\n     * @type number\n     * @default 4\n     */\n\n    /**\n     * An integer `Number` that specifies the number of constraint iterations to perform each update.\n     * The higher the value, the higher quality the simulation will be at the expense of performance.\n     * The default value of `2` is usually very adequate.\n     *\n     * @property constraintIterations\n     * @type number\n     * @default 2\n     */\n\n    /**\n     * A flag that specifies whether the engine should allow sleeping via the `Matter.Sleeping` module.\n     * Sleeping can improve stability and performance, but often at the expense of accuracy.\n     *\n     * @property enableSleeping\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * An `Object` containing properties regarding the timing systems of the engine. \n     *\n     * @property timing\n     * @type object\n     */\n\n    /**\n     * A `Number` that specifies the global scaling factor of time for all bodies.\n     * A value of `0` freezes the simulation.\n     * A value of `0.1` gives a slow-motion effect.\n     * A value of `1.2` gives a speed-up effect.\n     *\n     * @property timing.timeScale\n     * @type number\n     * @default 1\n     */\n\n    /**\n     * A `Number` that specifies the current simulation-time in milliseconds starting from `0`. \n     * It is incremented on every `Engine.update` by the given `delta` argument. \n     *\n     * @property timing.timestamp\n     * @type number\n     * @default 0\n     */\n\n    /**\n     * An instance of a `Render` controller. The default value is a `Matter.Render` instance created by `Engine.create`.\n     * One may also develop a custom renderer module based on `Matter.Render` and pass an instance of it to `Engine.create` via `options.render`.\n     *\n     * A minimal custom renderer object must define at least three functions: `create`, `clear` and `world` (see `Matter.Render`).\n     * It is also possible to instead pass the _module_ reference via `options.render.controller` and `Engine.create` will instantiate one for you.\n     *\n     * @property render\n     * @type render\n     * @deprecated see Demo.js for an example of creating a renderer\n     * @default a Matter.Render instance\n     */\n\n    /**\n     * An instance of a broadphase controller. The default value is a `Matter.Grid` instance created by `Engine.create`.\n     *\n     * @property broadphase\n     * @type grid\n     * @default a Matter.Grid instance\n     */\n\n    /**\n     * A `World` composite object that will contain all simulated bodies and constraints.\n     *\n     * @property world\n     * @type world\n     * @default a Matter.World instance\n     */\n\n    /**\n     * An object reserved for storing plugin-specific properties.\n     *\n     * @property plugin\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Grid\":6,\"../collision/Pairs\":8,\"../collision/Resolver\":10,\"../constraint/Constraint\":12,\"../render/Render\":31,\"./Common\":14,\"./Events\":16,\"./Metrics\":18,\"./Sleeping\":22}],16:[function(_dereq_,module,exports){\n/**\n* The `Matter.Events` module contains methods to fire and listen to events on other objects.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Events\n*/\n\nvar Events = {};\n\nmodule.exports = Events;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * Subscribes a callback function to the given object's `eventName`.\n     * @method on\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.on = function(object, eventNames, callback) {\n        var names = eventNames.split(' '),\n            name;\n\n        for (var i = 0; i < names.length; i++) {\n            name = names[i];\n            object.events = object.events || {};\n            object.events[name] = object.events[name] || [];\n            object.events[name].push(callback);\n        }\n\n        return callback;\n    };\n\n    /**\n     * Removes the given event callback. If no callback, clears all callbacks in `eventNames`. If no `eventNames`, clears all events.\n     * @method off\n     * @param {} object\n     * @param {string} eventNames\n     * @param {function} callback\n     */\n    Events.off = function(object, eventNames, callback) {\n        if (!eventNames) {\n            object.events = {};\n            return;\n        }\n\n        // handle Events.off(object, callback)\n        if (typeof eventNames === 'function') {\n            callback = eventNames;\n            eventNames = Common.keys(object.events).join(' ');\n        }\n\n        var names = eventNames.split(' ');\n\n        for (var i = 0; i < names.length; i++) {\n            var callbacks = object.events[names[i]],\n                newCallbacks = [];\n\n            if (callback && callbacks) {\n                for (var j = 0; j < callbacks.length; j++) {\n                    if (callbacks[j] !== callback)\n                        newCallbacks.push(callbacks[j]);\n                }\n            }\n\n            object.events[names[i]] = newCallbacks;\n        }\n    };\n\n    /**\n     * Fires all the callbacks subscribed to the given object's `eventName`, in the order they subscribed, if any.\n     * @method trigger\n     * @param {} object\n     * @param {string} eventNames\n     * @param {} event\n     */\n    Events.trigger = function(object, eventNames, event) {\n        var names,\n            name,\n            callbacks,\n            eventClone;\n\n        if (object.events) {\n            if (!event)\n                event = {};\n\n            names = eventNames.split(' ');\n\n            for (var i = 0; i < names.length; i++) {\n                name = names[i];\n                callbacks = object.events[name];\n\n                if (callbacks) {\n                    eventClone = Common.clone(event, false);\n                    eventClone.name = name;\n                    eventClone.source = object;\n\n                    for (var j = 0; j < callbacks.length; j++) {\n                        callbacks[j].apply(object, [eventClone]);\n                    }\n                }\n            }\n        }\n    };\n\n})();\n\n},{\"./Common\":14}],17:[function(_dereq_,module,exports){\n/**\n* The `Matter` module is the top level namespace. It also includes a function for installing plugins on top of the library.\n*\n* @class Matter\n*/\n\nvar Matter = {};\n\nmodule.exports = Matter;\n\nvar Plugin = _dereq_('./Plugin');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    /**\n     * The library name.\n     * @property name\n     * @readOnly\n     * @type {String}\n     */\n    Matter.name = 'matter-js';\n\n    /**\n     * The library version.\n     * @property version\n     * @readOnly\n     * @type {String}\n     */\n    Matter.version = '0.14.2';\n\n    /**\n     * A list of plugin dependencies to be installed. These are normally set and installed through `Matter.use`.\n     * Alternatively you may set `Matter.uses` manually and install them by calling `Plugin.use(Matter)`.\n     * @property uses\n     * @type {Array}\n     */\n    Matter.uses = [];\n\n    /**\n     * The plugins that have been installed through `Matter.Plugin.install`. Read only.\n     * @property used\n     * @readOnly\n     * @type {Array}\n     */\n    Matter.used = [];\n\n    /**\n     * Installs the given plugins on the `Matter` namespace.\n     * This is a short-hand for `Plugin.use`, see it for more information.\n     * Call this function once at the start of your code, with all of the plugins you wish to install as arguments.\n     * Avoid calling this function multiple times unless you intend to manually control installation order.\n     * @method use\n     * @param ...plugin {Function} The plugin(s) to install on `base` (multi-argument).\n     */\n    Matter.use = function() {\n        Plugin.use(Matter, Array.prototype.slice.call(arguments));\n    };\n\n    /**\n     * Chains a function to excute before the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method before\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain before the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.before = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathBefore(Matter, path, func);\n    };\n\n    /**\n     * Chains a function to excute after the original function on the given `path` relative to `Matter`.\n     * See also docs for `Common.chain`.\n     * @method after\n     * @param {string} path The path relative to `Matter`\n     * @param {function} func The function to chain after the original\n     * @return {function} The chained function that replaced the original\n     */\n    Matter.after = function(path, func) {\n        path = path.replace(/^Matter./, '');\n        return Common.chainPathAfter(Matter, path, func);\n    };\n\n})();\n\n},{\"./Common\":14,\"./Plugin\":20}],18:[function(_dereq_,module,exports){\n\n},{\"../body/Composite\":2,\"./Common\":14}],19:[function(_dereq_,module,exports){\n/**\n* The `Matter.Mouse` module contains methods for creating and manipulating mouse inputs.\n*\n* @class Mouse\n*/\n\nvar Mouse = {};\n\nmodule.exports = Mouse;\n\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a mouse input.\n     * @method create\n     * @param {HTMLElement} element\n     * @return {mouse} A new mouse\n     */\n    Mouse.create = function(element) {\n        var mouse = {};\n\n        if (!element) {\n            Common.log('Mouse.create: element was undefined, defaulting to document.body', 'warn');\n        }\n        \n        mouse.element = element || document.body;\n        mouse.absolute = { x: 0, y: 0 };\n        mouse.position = { x: 0, y: 0 };\n        mouse.mousedownPosition = { x: 0, y: 0 };\n        mouse.mouseupPosition = { x: 0, y: 0 };\n        mouse.offset = { x: 0, y: 0 };\n        mouse.scale = { x: 1, y: 1 };\n        mouse.wheelDelta = 0;\n        mouse.button = -1;\n        mouse.pixelRatio = mouse.element.getAttribute('data-pixel-ratio') || 1;\n\n        mouse.sourceEvents = {\n            mousemove: null,\n            mousedown: null,\n            mouseup: null,\n            mousewheel: null\n        };\n        \n        mouse.mousemove = function(event) { \n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.sourceEvents.mousemove = event;\n        };\n        \n        mouse.mousedown = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                mouse.button = 0;\n                event.preventDefault();\n            } else {\n                mouse.button = event.button;\n            }\n\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mousedownPosition.x = mouse.position.x;\n            mouse.mousedownPosition.y = mouse.position.y;\n            mouse.sourceEvents.mousedown = event;\n        };\n        \n        mouse.mouseup = function(event) {\n            var position = Mouse._getRelativeMousePosition(event, mouse.element, mouse.pixelRatio),\n                touches = event.changedTouches;\n\n            if (touches) {\n                event.preventDefault();\n            }\n            \n            mouse.button = -1;\n            mouse.absolute.x = position.x;\n            mouse.absolute.y = position.y;\n            mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n            mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n            mouse.mouseupPosition.x = mouse.position.x;\n            mouse.mouseupPosition.y = mouse.position.y;\n            mouse.sourceEvents.mouseup = event;\n        };\n\n        mouse.mousewheel = function(event) {\n            mouse.wheelDelta = Math.max(-1, Math.min(1, event.wheelDelta || -event.detail));\n            event.preventDefault();\n        };\n\n        Mouse.setElement(mouse, mouse.element);\n\n        return mouse;\n    };\n\n    /**\n     * Sets the element the mouse is bound to (and relative to).\n     * @method setElement\n     * @param {mouse} mouse\n     * @param {HTMLElement} element\n     */\n    Mouse.setElement = function(mouse, element) {\n        mouse.element = element;\n\n        element.addEventListener('mousemove', mouse.mousemove);\n        element.addEventListener('mousedown', mouse.mousedown);\n        element.addEventListener('mouseup', mouse.mouseup);\n        \n        element.addEventListener('mousewheel', mouse.mousewheel);\n        element.addEventListener('DOMMouseScroll', mouse.mousewheel);\n\n        element.addEventListener('touchmove', mouse.mousemove);\n        element.addEventListener('touchstart', mouse.mousedown);\n        element.addEventListener('touchend', mouse.mouseup);\n    };\n\n    /**\n     * Clears all captured source events.\n     * @method clearSourceEvents\n     * @param {mouse} mouse\n     */\n    Mouse.clearSourceEvents = function(mouse) {\n        mouse.sourceEvents.mousemove = null;\n        mouse.sourceEvents.mousedown = null;\n        mouse.sourceEvents.mouseup = null;\n        mouse.sourceEvents.mousewheel = null;\n        mouse.wheelDelta = 0;\n    };\n\n    /**\n     * Sets the mouse position offset.\n     * @method setOffset\n     * @param {mouse} mouse\n     * @param {vector} offset\n     */\n    Mouse.setOffset = function(mouse, offset) {\n        mouse.offset.x = offset.x;\n        mouse.offset.y = offset.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n\n    /**\n     * Sets the mouse position scale.\n     * @method setScale\n     * @param {mouse} mouse\n     * @param {vector} scale\n     */\n    Mouse.setScale = function(mouse, scale) {\n        mouse.scale.x = scale.x;\n        mouse.scale.y = scale.y;\n        mouse.position.x = mouse.absolute.x * mouse.scale.x + mouse.offset.x;\n        mouse.position.y = mouse.absolute.y * mouse.scale.y + mouse.offset.y;\n    };\n    \n    /**\n     * Gets the mouse position relative to an element given a screen pixel ratio.\n     * @method _getRelativeMousePosition\n     * @private\n     * @param {} event\n     * @param {} element\n     * @param {number} pixelRatio\n     * @return {}\n     */\n    Mouse._getRelativeMousePosition = function(event, element, pixelRatio) {\n        var elementBounds = element.getBoundingClientRect(),\n            rootNode = (document.documentElement || document.body.parentNode || document.body),\n            scrollX = (window.pageXOffset !== undefined) ? window.pageXOffset : rootNode.scrollLeft,\n            scrollY = (window.pageYOffset !== undefined) ? window.pageYOffset : rootNode.scrollTop,\n            touches = event.changedTouches,\n            x, y;\n        \n        if (touches) {\n            x = touches[0].pageX - elementBounds.left - scrollX;\n            y = touches[0].pageY - elementBounds.top - scrollY;\n        } else {\n            x = event.pageX - elementBounds.left - scrollX;\n            y = event.pageY - elementBounds.top - scrollY;\n        }\n\n        return { \n            x: x / (element.clientWidth / (element.width || element.clientWidth) * pixelRatio),\n            y: y / (element.clientHeight / (element.height || element.clientHeight) * pixelRatio)\n        };\n    };\n\n})();\n\n},{\"../core/Common\":14}],20:[function(_dereq_,module,exports){\n/**\n* The `Matter.Plugin` module contains functions for registering and installing plugins on modules.\n*\n* @class Plugin\n*/\n\nvar Plugin = {};\n\nmodule.exports = Plugin;\n\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    Plugin._registry = {};\n\n    /**\n     * Registers a plugin object so it can be resolved later by name.\n     * @method register\n     * @param plugin {} The plugin to register.\n     * @return {object} The plugin.\n     */\n    Plugin.register = function(plugin) {\n        if (!Plugin.isPlugin(plugin)) {\n            Common.warn('Plugin.register:', Plugin.toString(plugin), 'does not implement all required fields.');\n        }\n\n        if (plugin.name in Plugin._registry) {\n            var registered = Plugin._registry[plugin.name],\n                pluginVersion = Plugin.versionParse(plugin.version).number,\n                registeredVersion = Plugin.versionParse(registered.version).number;\n\n            if (pluginVersion > registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'was upgraded to', Plugin.toString(plugin));\n                Plugin._registry[plugin.name] = plugin;\n            } else if (pluginVersion < registeredVersion) {\n                Common.warn('Plugin.register:', Plugin.toString(registered), 'can not be downgraded to', Plugin.toString(plugin));\n            } else if (plugin !== registered) {\n                Common.warn('Plugin.register:', Plugin.toString(plugin), 'is already registered to different plugin object');\n            }\n        } else {\n            Plugin._registry[plugin.name] = plugin;\n        }\n\n        return plugin;\n    };\n\n    /**\n     * Resolves a dependency to a plugin object from the registry if it exists. \n     * The `dependency` may contain a version, but only the name matters when resolving.\n     * @method resolve\n     * @param dependency {string} The dependency.\n     * @return {object} The plugin if resolved, otherwise `undefined`.\n     */\n    Plugin.resolve = function(dependency) {\n        return Plugin._registry[Plugin.dependencyParse(dependency).name];\n    };\n\n    /**\n     * Returns a pretty printed plugin name and version.\n     * @method toString\n     * @param plugin {} The plugin.\n     * @return {string} Pretty printed plugin name and version.\n     */\n    Plugin.toString = function(plugin) {\n        return typeof plugin === 'string' ? plugin : (plugin.name || 'anonymous') + '@' + (plugin.version || plugin.range || '0.0.0');\n    };\n\n    /**\n     * Returns `true` if the object meets the minimum standard to be considered a plugin.\n     * This means it must define the following properties:\n     * - `name`\n     * - `version`\n     * - `install`\n     * @method isPlugin\n     * @param obj {} The obj to test.\n     * @return {boolean} `true` if the object can be considered a plugin otherwise `false`.\n     */\n    Plugin.isPlugin = function(obj) {\n        return obj && obj.name && obj.version && obj.install;\n    };\n\n    /**\n     * Returns `true` if a plugin with the given `name` been installed on `module`.\n     * @method isUsed\n     * @param module {} The module.\n     * @param name {string} The plugin name.\n     * @return {boolean} `true` if a plugin with the given `name` been installed on `module`, otherwise `false`.\n     */\n    Plugin.isUsed = function(module, name) {\n        return module.used.indexOf(name) > -1;\n    };\n\n    /**\n     * Returns `true` if `plugin.for` is applicable to `module` by comparing against `module.name` and `module.version`.\n     * If `plugin.for` is not specified then it is assumed to be applicable.\n     * The value of `plugin.for` is a string of the format `'module-name'` or `'module-name@version'`.\n     * @method isFor\n     * @param plugin {} The plugin.\n     * @param module {} The module.\n     * @return {boolean} `true` if `plugin.for` is applicable to `module`, otherwise `false`.\n     */\n    Plugin.isFor = function(plugin, module) {\n        var parsed = plugin.for && Plugin.dependencyParse(plugin.for);\n        return !plugin.for || (module.name === parsed.name && Plugin.versionSatisfies(module.version, parsed.range));\n    };\n\n    /**\n     * Installs the plugins by calling `plugin.install` on each plugin specified in `plugins` if passed, otherwise `module.uses`.\n     * For installing plugins on `Matter` see the convenience function `Matter.use`.\n     * Plugins may be specified either by their name or a reference to the plugin object.\n     * Plugins themselves may specify further dependencies, but each plugin is installed only once.\n     * Order is important, a topological sort is performed to find the best resulting order of installation.\n     * This sorting attempts to satisfy every dependency's requested ordering, but may not be exact in all cases.\n     * This function logs the resulting status of each dependency in the console, along with any warnings.\n     * - A green tick ✅ indicates a dependency was resolved and installed.\n     * - An orange diamond 🔶 indicates a dependency was resolved but a warning was thrown for it or one if its dependencies.\n     * - A red cross ❌ indicates a dependency could not be resolved.\n     * Avoid calling this function multiple times on the same module unless you intend to manually control installation order.\n     * @method use\n     * @param module {} The module install plugins on.\n     * @param [plugins=module.uses] {} The plugins to install on module (optional, defaults to `module.uses`).\n     */\n    Plugin.use = function(module, plugins) {\n        module.uses = (module.uses || []).concat(plugins || []);\n\n        if (module.uses.length === 0) {\n            Common.warn('Plugin.use:', Plugin.toString(module), 'does not specify any dependencies to install.');\n            return;\n        }\n\n        var dependencies = Plugin.dependencies(module),\n            sortedDependencies = Common.topologicalSort(dependencies),\n            status = [];\n\n        for (var i = 0; i < sortedDependencies.length; i += 1) {\n            if (sortedDependencies[i] === module.name) {\n                continue;\n            }\n\n            var plugin = Plugin.resolve(sortedDependencies[i]);\n\n            if (!plugin) {\n                status.push('❌ ' + sortedDependencies[i]);\n                continue;\n            }\n\n            if (Plugin.isUsed(module, plugin.name)) {\n                continue;\n            }\n\n            if (!Plugin.isFor(plugin, module)) {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'is for', plugin.for, 'but installed on', Plugin.toString(module) + '.');\n                plugin._warned = true;\n            }\n\n            if (plugin.install) {\n                plugin.install(module);\n            } else {\n                Common.warn('Plugin.use:', Plugin.toString(plugin), 'does not specify an install function.');\n                plugin._warned = true;\n            }\n\n            if (plugin._warned) {\n                status.push('🔶 ' + Plugin.toString(plugin));\n                delete plugin._warned;\n            } else {\n                status.push('✅ ' + Plugin.toString(plugin));\n            }\n\n            module.used.push(plugin.name);\n        }\n\n        if (status.length > 0) {\n            Common.info(status.join('  '));\n        }\n    };\n\n    /**\n     * Recursively finds all of a module's dependencies and returns a flat dependency graph.\n     * @method dependencies\n     * @param module {} The module.\n     * @return {object} A dependency graph.\n     */\n    Plugin.dependencies = function(module, tracked) {\n        var parsedBase = Plugin.dependencyParse(module),\n            name = parsedBase.name;\n\n        tracked = tracked || {};\n\n        if (name in tracked) {\n            return;\n        }\n\n        module = Plugin.resolve(module) || module;\n\n        tracked[name] = Common.map(module.uses || [], function(dependency) {\n            if (Plugin.isPlugin(dependency)) {\n                Plugin.register(dependency);\n            }\n\n            var parsed = Plugin.dependencyParse(dependency),\n                resolved = Plugin.resolve(dependency);\n\n            if (resolved && !Plugin.versionSatisfies(resolved.version, parsed.range)) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(resolved), 'does not satisfy',\n                    Plugin.toString(parsed), 'used by', Plugin.toString(parsedBase) + '.'\n                );\n\n                resolved._warned = true;\n                module._warned = true;\n            } else if (!resolved) {\n                Common.warn(\n                    'Plugin.dependencies:', Plugin.toString(dependency), 'used by',\n                    Plugin.toString(parsedBase), 'could not be resolved.'\n                );\n\n                module._warned = true;\n            }\n\n            return parsed.name;\n        });\n\n        for (var i = 0; i < tracked[name].length; i += 1) {\n            Plugin.dependencies(tracked[name][i], tracked);\n        }\n\n        return tracked;\n    };\n\n    /**\n     * Parses a dependency string into its components.\n     * The `dependency` is a string of the format `'module-name'` or `'module-name@version'`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * This function can also handle dependencies that are already resolved (e.g. a module object).\n     * @method dependencyParse\n     * @param dependency {string} The dependency of the format `'module-name'` or `'module-name@version'`.\n     * @return {object} The dependency parsed into its components.\n     */\n    Plugin.dependencyParse = function(dependency) {\n        if (Common.isString(dependency)) {\n            var pattern = /^[\\w-]+(@(\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?))?$/;\n\n            if (!pattern.test(dependency)) {\n                Common.warn('Plugin.dependencyParse:', dependency, 'is not a valid dependency string.');\n            }\n\n            return {\n                name: dependency.split('@')[0],\n                range: dependency.split('@')[1] || '*'\n            };\n        }\n\n        return {\n            name: dependency.name,\n            range: dependency.range || dependency.version\n        };\n    };\n\n    /**\n     * Parses a version string into its components.  \n     * Versions are strictly of the format `x.y.z` (as in [semver](http://semver.org/)).\n     * Versions may optionally have a prerelease tag in the format `x.y.z-alpha`.\n     * Ranges are a strict subset of [npm ranges](https://docs.npmjs.com/misc/semver#advanced-range-syntax).\n     * Only the following range types are supported:\n     * - Tilde ranges e.g. `~1.2.3`\n     * - Caret ranges e.g. `^1.2.3`\n     * - Exact version e.g. `1.2.3`\n     * - Any version `*`\n     * @method versionParse\n     * @param range {string} The version string.\n     * @return {object} The version range parsed into its components.\n     */\n    Plugin.versionParse = function(range) {\n        var pattern = /^\\*|[\\^~]?\\d+\\.\\d+\\.\\d+(-[0-9A-Za-z-]+)?$/;\n\n        if (!pattern.test(range)) {\n            Common.warn('Plugin.versionParse:', range, 'is not a valid version or range.');\n        }\n\n        var identifiers = range.split('-');\n        range = identifiers[0];\n\n        var isRange = isNaN(Number(range[0])),\n            version = isRange ? range.substr(1) : range,\n            parts = Common.map(version.split('.'), function(part) {\n                return Number(part);\n            });\n\n        return {\n            isRange: isRange,\n            version: version,\n            range: range,\n            operator: isRange ? range[0] : '',\n            parts: parts,\n            prerelease: identifiers[1],\n            number: parts[0] * 1e8 + parts[1] * 1e4 + parts[2]\n        };\n    };\n\n    /**\n     * Returns `true` if `version` satisfies the given `range`.\n     * See documentation for `Plugin.versionParse` for a description of the format.\n     * If a version or range is not specified, then any version (`*`) is assumed to satisfy.\n     * @method versionSatisfies\n     * @param version {string} The version string.\n     * @param range {string} The range string.\n     * @return {boolean} `true` if `version` satisfies `range`, otherwise `false`.\n     */\n    Plugin.versionSatisfies = function(version, range) {\n        range = range || '*';\n\n        var rangeParsed = Plugin.versionParse(range),\n            rangeParts = rangeParsed.parts,\n            versionParsed = Plugin.versionParse(version),\n            versionParts = versionParsed.parts;\n\n        if (rangeParsed.isRange) {\n            if (rangeParsed.operator === '*' || version === '*') {\n                return true;\n            }\n\n            if (rangeParsed.operator === '~') {\n                return versionParts[0] === rangeParts[0] && versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n            }\n\n            if (rangeParsed.operator === '^') {\n                if (rangeParts[0] > 0) {\n                    return versionParts[0] === rangeParts[0] && versionParsed.number >= rangeParsed.number;\n                }\n\n                if (rangeParts[1] > 0) {\n                    return versionParts[1] === rangeParts[1] && versionParts[2] >= rangeParts[2];\n                }\n\n                return versionParts[2] === rangeParts[2];\n            }\n        }\n\n        return version === range || version === '*';\n    };\n\n})();\n\n},{\"./Common\":14}],21:[function(_dereq_,module,exports){\n/**\n* The `Matter.Runner` module is an optional utility which provides a game loop, \n* that handles continuously updating a `Matter.Engine` for you within a browser.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* If you are using your own game loop instead, then you do not need the `Matter.Runner` module.\n* Instead just call `Engine.update(engine, delta)` in your own loop.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Runner\n*/\n\nvar Runner = {};\n\nmodule.exports = Runner;\n\nvar Events = _dereq_('./Events');\nvar Engine = _dereq_('./Engine');\nvar Common = _dereq_('./Common');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame;\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    if (!_requestAnimationFrame) {\n        var _frameTimeout;\n\n        _requestAnimationFrame = function(callback){ \n            _frameTimeout = setTimeout(function() { \n                callback(Common.now()); \n            }, 1000 / 60);\n        };\n\n        _cancelAnimationFrame = function() {\n            clearTimeout(_frameTimeout);\n        };\n    }\n\n    /**\n     * Creates a new Runner. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * @method create\n     * @param {} options\n     */\n    Runner.create = function(options) {\n        var defaults = {\n            fps: 60,\n            correction: 1,\n            deltaSampleSize: 60,\n            counterTimestamp: 0,\n            frameCounter: 0,\n            deltaHistory: [],\n            timePrev: null,\n            timeScalePrev: 1,\n            frameRequestId: null,\n            isFixed: false,\n            enabled: true\n        };\n\n        var runner = Common.extend(defaults, options);\n\n        runner.delta = runner.delta || 1000 / runner.fps;\n        runner.deltaMin = runner.deltaMin || 1000 / runner.fps;\n        runner.deltaMax = runner.deltaMax || 1000 / (runner.fps * 0.5);\n        runner.fps = 1000 / runner.delta;\n\n        return runner;\n    };\n\n    /**\n     * Continuously ticks a `Matter.Engine` by calling `Runner.tick` on the `requestAnimationFrame` event.\n     * @method run\n     * @param {engine} engine\n     */\n    Runner.run = function(runner, engine) {\n        // create runner if engine is first argument\n        if (typeof runner.positionIterations !== 'undefined') {\n            engine = runner;\n            runner = Runner.create();\n        }\n\n        (function render(time){\n            runner.frameRequestId = _requestAnimationFrame(render);\n\n            if (time && runner.enabled) {\n                Runner.tick(runner, engine, time);\n            }\n        })();\n\n        return runner;\n    };\n\n    /**\n     * A game loop utility that updates the engine and renderer by one step (a 'tick').\n     * Features delta smoothing, time correction and fixed or dynamic timing.\n     * Triggers `beforeTick`, `tick` and `afterTick` events on the engine.\n     * Consider just `Engine.update(engine, delta)` if you're using your own loop.\n     * @method tick\n     * @param {runner} runner\n     * @param {engine} engine\n     * @param {number} time\n     */\n    Runner.tick = function(runner, engine, time) {\n        var timing = engine.timing,\n            correction = 1,\n            delta;\n\n        // create an event object\n        var event = {\n            timestamp: timing.timestamp\n        };\n\n        Events.trigger(runner, 'beforeTick', event);\n        Events.trigger(engine, 'beforeTick', event); // @deprecated\n\n        if (runner.isFixed) {\n            // fixed timestep\n            delta = runner.delta;\n        } else {\n            // dynamic timestep based on wall clock between calls\n            delta = (time - runner.timePrev) || runner.delta;\n            runner.timePrev = time;\n\n            // optimistically filter delta over a few frames, to improve stability\n            runner.deltaHistory.push(delta);\n            runner.deltaHistory = runner.deltaHistory.slice(-runner.deltaSampleSize);\n            delta = Math.min.apply(null, runner.deltaHistory);\n            \n            // limit delta\n            delta = delta < runner.deltaMin ? runner.deltaMin : delta;\n            delta = delta > runner.deltaMax ? runner.deltaMax : delta;\n\n            // correction for delta\n            correction = delta / runner.delta;\n\n            // update engine timing object\n            runner.delta = delta;\n        }\n\n        // time correction for time scaling\n        if (runner.timeScalePrev !== 0)\n            correction *= timing.timeScale / runner.timeScalePrev;\n\n        if (timing.timeScale === 0)\n            correction = 0;\n\n        runner.timeScalePrev = timing.timeScale;\n        runner.correction = correction;\n\n        // fps counter\n        runner.frameCounter += 1;\n        if (time - runner.counterTimestamp >= 1000) {\n            runner.fps = runner.frameCounter * ((time - runner.counterTimestamp) / 1000);\n            runner.counterTimestamp = time;\n            runner.frameCounter = 0;\n        }\n\n        Events.trigger(runner, 'tick', event);\n        Events.trigger(engine, 'tick', event); // @deprecated\n\n        // if world has been modified, clear the render scene graph\n        if (engine.world.isModified \n            && engine.render\n            && engine.render.controller\n            && engine.render.controller.clear) {\n            engine.render.controller.clear(engine.render); // @deprecated\n        }\n\n        // update\n        Events.trigger(runner, 'beforeUpdate', event);\n        Engine.update(engine, delta, correction);\n        Events.trigger(runner, 'afterUpdate', event);\n\n        // render\n        // @deprecated\n        if (engine.render && engine.render.controller) {\n            Events.trigger(runner, 'beforeRender', event);\n            Events.trigger(engine, 'beforeRender', event); // @deprecated\n\n            engine.render.controller.world(engine.render);\n\n            Events.trigger(runner, 'afterRender', event);\n            Events.trigger(engine, 'afterRender', event); // @deprecated\n        }\n\n        Events.trigger(runner, 'afterTick', event);\n        Events.trigger(engine, 'afterTick', event); // @deprecated\n    };\n\n    /**\n     * Ends execution of `Runner.run` on the given `runner`, by canceling the animation frame request event loop.\n     * If you wish to only temporarily pause the engine, see `engine.enabled` instead.\n     * @method stop\n     * @param {runner} runner\n     */\n    Runner.stop = function(runner) {\n        _cancelAnimationFrame(runner.frameRequestId);\n    };\n\n    /**\n     * Alias for `Runner.run`.\n     * @method start\n     * @param {runner} runner\n     * @param {engine} engine\n     */\n    Runner.start = function(runner, engine) {\n        Runner.run(runner, engine);\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired at the start of a tick, before any updates to the engine or timing\n    *\n    * @event beforeTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after engine timing updated, but just before update\n    *\n    * @event tick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired at the end of a tick, after engine update and after rendering\n    *\n    * @event afterTick\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before update\n    *\n    * @event beforeUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after update\n    *\n    * @event afterUpdate\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    * @deprecated\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A flag that specifies whether the runner is running or not.\n     *\n     * @property enabled\n     * @type boolean\n     * @default true\n     */\n\n    /**\n     * A `Boolean` that specifies if the runner should use a fixed timestep (otherwise it is variable).\n     * If timing is fixed, then the apparent simulation speed will change depending on the frame rate (but behaviour will be deterministic).\n     * If the timing is variable, then the apparent simulation speed will be constant (approximately, but at the cost of determininism).\n     *\n     * @property isFixed\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Number` that specifies the time step between updates in milliseconds.\n     * If `engine.timing.isFixed` is set to `true`, then `delta` is fixed.\n     * If it is `false`, then `delta` can dynamically change to maintain the correct apparent simulation speed.\n     *\n     * @property delta\n     * @type number\n     * @default 1000 / 60\n     */\n\n})();\n\n},{\"./Common\":14,\"./Engine\":15,\"./Events\":16}],22:[function(_dereq_,module,exports){\n/**\n* The `Matter.Sleeping` module contains methods to manage the sleeping state of bodies.\n*\n* @class Sleeping\n*/\n\nvar Sleeping = {};\n\nmodule.exports = Sleeping;\n\nvar Events = _dereq_('./Events');\n\n(function() {\n\n    Sleeping._motionWakeThreshold = 0.18;\n    Sleeping._motionSleepThreshold = 0.08;\n    Sleeping._minBias = 0.9;\n\n    /**\n     * Puts bodies to sleep or wakes them up depending on their motion.\n     * @method update\n     * @param {body[]} bodies\n     * @param {number} timeScale\n     */\n    Sleeping.update = function(bodies, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // update bodies sleeping status\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                motion = body.speed * body.speed + body.angularSpeed * body.angularSpeed;\n\n            // wake up bodies if they have a force applied\n            if (body.force.x !== 0 || body.force.y !== 0) {\n                Sleeping.set(body, false);\n                continue;\n            }\n\n            var minMotion = Math.min(body.motion, motion),\n                maxMotion = Math.max(body.motion, motion);\n        \n            // biased average motion estimation between frames\n            body.motion = Sleeping._minBias * minMotion + (1 - Sleeping._minBias) * maxMotion;\n            \n            if (body.sleepThreshold > 0 && body.motion < Sleeping._motionSleepThreshold * timeFactor) {\n                body.sleepCounter += 1;\n                \n                if (body.sleepCounter >= body.sleepThreshold)\n                    Sleeping.set(body, true);\n            } else if (body.sleepCounter > 0) {\n                body.sleepCounter -= 1;\n            }\n        }\n    };\n\n    /**\n     * Given a set of colliding pairs, wakes the sleeping bodies involved.\n     * @method afterCollisions\n     * @param {pair[]} pairs\n     * @param {number} timeScale\n     */\n    Sleeping.afterCollisions = function(pairs, timeScale) {\n        var timeFactor = timeScale * timeScale * timeScale;\n\n        // wake up bodies involved in collisions\n        for (var i = 0; i < pairs.length; i++) {\n            var pair = pairs[i];\n            \n            // don't wake inactive pairs\n            if (!pair.isActive)\n                continue;\n\n            var collision = pair.collision,\n                bodyA = collision.bodyA.parent, \n                bodyB = collision.bodyB.parent;\n        \n            // don't wake if at least one body is static\n            if ((bodyA.isSleeping && bodyB.isSleeping) || bodyA.isStatic || bodyB.isStatic)\n                continue;\n        \n            if (bodyA.isSleeping || bodyB.isSleeping) {\n                var sleepingBody = (bodyA.isSleeping && !bodyA.isStatic) ? bodyA : bodyB,\n                    movingBody = sleepingBody === bodyA ? bodyB : bodyA;\n\n                if (!sleepingBody.isStatic && movingBody.motion > Sleeping._motionWakeThreshold * timeFactor) {\n                    Sleeping.set(sleepingBody, false);\n                }\n            }\n        }\n    };\n  \n    /**\n     * Set a body as sleeping or awake.\n     * @method set\n     * @param {body} body\n     * @param {boolean} isSleeping\n     */\n    Sleeping.set = function(body, isSleeping) {\n        var wasSleeping = body.isSleeping;\n\n        if (isSleeping) {\n            body.isSleeping = true;\n            body.sleepCounter = body.sleepThreshold;\n\n            body.positionImpulse.x = 0;\n            body.positionImpulse.y = 0;\n\n            body.positionPrev.x = body.position.x;\n            body.positionPrev.y = body.position.y;\n\n            body.anglePrev = body.angle;\n            body.speed = 0;\n            body.angularSpeed = 0;\n            body.motion = 0;\n\n            if (!wasSleeping) {\n                Events.trigger(body, 'sleepStart');\n            }\n        } else {\n            body.isSleeping = false;\n            body.sleepCounter = 0;\n\n            if (wasSleeping) {\n                Events.trigger(body, 'sleepEnd');\n            }\n        }\n    };\n\n})();\n\n},{\"./Events\":16}],23:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bodies` module contains factory methods for creating rigid body models \n* with commonly used body configurations (such as rectangles, circles and other polygons).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Bodies\n*/\n\n// TODO: true circle bodies\n\nvar Bodies = {};\n\nmodule.exports = Bodies;\n\nvar Vertices = _dereq_('../geometry/Vertices');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Vector = _dereq_('../geometry/Vector');\nvar decomp;\n\n(function() {\n\n    /**\n     * Creates a new rigid body model with a rectangle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method rectangle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {object} [options]\n     * @return {body} A new rectangle body\n     */\n    Bodies.rectangle = function(x, y, width, height, options) {\n        options = options || {};\n\n        var rectangle = { \n            label: 'Rectangle Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath('L 0 0 L ' + width + ' 0 L ' + width + ' ' + height + ' L 0 ' + height)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            rectangle.vertices = Vertices.chamfer(rectangle.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, rectangle, options));\n    };\n    \n    /**\n     * Creates a new rigid body model with a trapezoid hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method trapezoid\n     * @param {number} x\n     * @param {number} y\n     * @param {number} width\n     * @param {number} height\n     * @param {number} slope\n     * @param {object} [options]\n     * @return {body} A new trapezoid body\n     */\n    Bodies.trapezoid = function(x, y, width, height, slope, options) {\n        options = options || {};\n\n        slope *= 0.5;\n        var roof = (1 - (slope * 2)) * width;\n        \n        var x1 = width * slope,\n            x2 = x1 + roof,\n            x3 = x2 + x1,\n            verticesPath;\n\n        if (slope < 0.5) {\n            verticesPath = 'L 0 0 L ' + x1 + ' ' + (-height) + ' L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        } else {\n            verticesPath = 'L 0 0 L ' + x2 + ' ' + (-height) + ' L ' + x3 + ' 0';\n        }\n\n        var trapezoid = { \n            label: 'Trapezoid Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(verticesPath)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            trapezoid.vertices = Vertices.chamfer(trapezoid.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, trapezoid, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a circle hull. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method circle\n     * @param {number} x\n     * @param {number} y\n     * @param {number} radius\n     * @param {object} [options]\n     * @param {number} [maxSides]\n     * @return {body} A new circle body\n     */\n    Bodies.circle = function(x, y, radius, options, maxSides) {\n        options = options || {};\n\n        var circle = {\n            label: 'Circle Body',\n            circleRadius: radius\n        };\n        \n        // approximate circles with polygons until true circles implemented in SAT\n        maxSides = maxSides || 25;\n        var sides = Math.ceil(Math.max(10, Math.min(maxSides, radius)));\n\n        // optimisation: always use even number of sides (half the number of unique axes)\n        if (sides % 2 === 1)\n            sides += 1;\n\n        return Bodies.polygon(x, y, sides, radius, Common.extend({}, circle, options));\n    };\n\n    /**\n     * Creates a new rigid body model with a regular polygon hull with the given number of sides. \n     * The options parameter is an object that specifies any properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method polygon\n     * @param {number} x\n     * @param {number} y\n     * @param {number} sides\n     * @param {number} radius\n     * @param {object} [options]\n     * @return {body} A new regular polygon body\n     */\n    Bodies.polygon = function(x, y, sides, radius, options) {\n        options = options || {};\n\n        if (sides < 3)\n            return Bodies.circle(x, y, radius, options);\n\n        var theta = 2 * Math.PI / sides,\n            path = '',\n            offset = theta * 0.5;\n\n        for (var i = 0; i < sides; i += 1) {\n            var angle = offset + (i * theta),\n                xx = Math.cos(angle) * radius,\n                yy = Math.sin(angle) * radius;\n\n            path += 'L ' + xx.toFixed(3) + ' ' + yy.toFixed(3) + ' ';\n        }\n\n        var polygon = { \n            label: 'Polygon Body',\n            position: { x: x, y: y },\n            vertices: Vertices.fromPath(path)\n        };\n\n        if (options.chamfer) {\n            var chamfer = options.chamfer;\n            polygon.vertices = Vertices.chamfer(polygon.vertices, chamfer.radius, \n                                    chamfer.quality, chamfer.qualityMin, chamfer.qualityMax);\n            delete options.chamfer;\n        }\n\n        return Body.create(Common.extend({}, polygon, options));\n    };\n\n    /**\n     * Creates a body using the supplied vertices (or an array containing multiple sets of vertices).\n     * If the vertices are convex, they will pass through as supplied.\n     * Otherwise if the vertices are concave, they will be decomposed if [poly-decomp.js](https://github.com/schteppe/poly-decomp.js) is available.\n     * Note that this process is not guaranteed to support complex sets of vertices (e.g. those with holes may fail).\n     * By default the decomposition will discard collinear edges (to improve performance).\n     * It can also optionally discard any parts that have an area less than `minimumArea`.\n     * If the vertices can not be decomposed, the result will fall back to using the convex hull.\n     * The options parameter is an object that specifies any `Matter.Body` properties you wish to override the defaults.\n     * See the properties section of the `Matter.Body` module for detailed information on what you can pass via the `options` object.\n     * @method fromVertices\n     * @param {number} x\n     * @param {number} y\n     * @param [[vector]] vertexSets\n     * @param {object} [options]\n     * @param {bool} [flagInternal=false]\n     * @param {number} [removeCollinear=0.01]\n     * @param {number} [minimumArea=10]\n     * @return {body}\n     */\n    Bodies.fromVertices = function(x, y, vertexSets, options, flagInternal, removeCollinear, minimumArea) {\n        if (!decomp) {\n            decomp = Common._requireGlobal('decomp', 'poly-decomp');\n        }\n\n        var body,\n            parts,\n            isConvex,\n            vertices,\n            i,\n            j,\n            k,\n            v,\n            z;\n\n        options = options || {};\n        parts = [];\n\n        flagInternal = typeof flagInternal !== 'undefined' ? flagInternal : false;\n        removeCollinear = typeof removeCollinear !== 'undefined' ? removeCollinear : 0.01;\n        minimumArea = typeof minimumArea !== 'undefined' ? minimumArea : 10;\n\n        if (!decomp) {\n            Common.warn('Bodies.fromVertices: poly-decomp.js required. Could not decompose vertices. Fallback to convex hull.');\n        }\n\n        // ensure vertexSets is an array of arrays\n        if (!Common.isArray(vertexSets[0])) {\n            vertexSets = [vertexSets];\n        }\n\n        for (v = 0; v < vertexSets.length; v += 1) {\n            vertices = vertexSets[v];\n            isConvex = Vertices.isConvex(vertices);\n\n            if (isConvex || !decomp) {\n                if (isConvex) {\n                    vertices = Vertices.clockwiseSort(vertices);\n                } else {\n                    // fallback to convex hull when decomposition is not possible\n                    vertices = Vertices.hull(vertices);\n                }\n\n                parts.push({\n                    position: { x: x, y: y },\n                    vertices: vertices\n                });\n            } else {\n                // initialise a decomposition\n                var concave = vertices.map(function(vertex) {\n                    return [vertex.x, vertex.y];\n                });\n\n                // vertices are concave and simple, we can decompose into parts\n                decomp.makeCCW(concave);\n                if (removeCollinear !== false)\n                    decomp.removeCollinearPoints(concave, removeCollinear);\n\n                // use the quick decomposition algorithm (Bayazit)\n                var decomposed = decomp.quickDecomp(concave);\n\n                // for each decomposed chunk\n                for (i = 0; i < decomposed.length; i++) {\n                    var chunk = decomposed[i];\n\n                    // convert vertices into the correct structure\n                    var chunkVertices = chunk.map(function(vertices) {\n                        return {\n                            x: vertices[0],\n                            y: vertices[1]\n                        };\n                    });\n\n                    // skip small chunks\n                    if (minimumArea > 0 && Vertices.area(chunkVertices) < minimumArea)\n                        continue;\n\n                    // create a compound part\n                    parts.push({\n                        position: Vertices.centre(chunkVertices),\n                        vertices: chunkVertices\n                    });\n                }\n            }\n        }\n\n        // create body parts\n        for (i = 0; i < parts.length; i++) {\n            parts[i] = Body.create(Common.extend(parts[i], options));\n        }\n\n        // flag internal edges (coincident part edges)\n        if (flagInternal) {\n            var coincident_max_dist = 5;\n\n            for (i = 0; i < parts.length; i++) {\n                var partA = parts[i];\n\n                for (j = i + 1; j < parts.length; j++) {\n                    var partB = parts[j];\n\n                    if (Bounds.overlaps(partA.bounds, partB.bounds)) {\n                        var pav = partA.vertices,\n                            pbv = partB.vertices;\n\n                        // iterate vertices of both parts\n                        for (k = 0; k < partA.vertices.length; k++) {\n                            for (z = 0; z < partB.vertices.length; z++) {\n                                // find distances between the vertices\n                                var da = Vector.magnitudeSquared(Vector.sub(pav[(k + 1) % pav.length], pbv[z])),\n                                    db = Vector.magnitudeSquared(Vector.sub(pav[k], pbv[(z + 1) % pbv.length]));\n\n                                // if both vertices are very close, consider the edge concident (internal)\n                                if (da < coincident_max_dist && db < coincident_max_dist) {\n                                    pav[k].isInternal = true;\n                                    pbv[z].isInternal = true;\n                                }\n                            }\n                        }\n\n                    }\n                }\n            }\n        }\n\n        if (parts.length > 1) {\n            // create the parent body to be returned, that contains generated compound parts\n            body = Body.create(Common.extend({ parts: parts.slice(0) }, options));\n            Body.setPosition(body, { x: x, y: y });\n\n            return body;\n        } else {\n            return parts[0];\n        }\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../core/Common\":14,\"../geometry/Bounds\":26,\"../geometry/Vector\":28,\"../geometry/Vertices\":29}],24:[function(_dereq_,module,exports){\n/**\n* The `Matter.Composites` module contains factory methods for creating composite bodies\n* with commonly used configurations (such as stacks and chains).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Composites\n*/\n\nvar Composites = {};\n\nmodule.exports = Composites;\n\nvar Composite = _dereq_('../body/Composite');\nvar Constraint = _dereq_('../constraint/Constraint');\nvar Common = _dereq_('../core/Common');\nvar Body = _dereq_('../body/Body');\nvar Bodies = _dereq_('./Bodies');\n\n(function() {\n\n    /**\n     * Create a new composite containing bodies created in the callback in a grid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method stack\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.stack = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        var stack = Composite.create({ label: 'Stack' }),\n            x = xx,\n            y = yy,\n            lastBody,\n            i = 0;\n\n        for (var row = 0; row < rows; row++) {\n            var maxHeight = 0;\n            \n            for (var column = 0; column < columns; column++) {\n                var body = callback(x, y, column, row, lastBody, i);\n                    \n                if (body) {\n                    var bodyHeight = body.bounds.max.y - body.bounds.min.y,\n                        bodyWidth = body.bounds.max.x - body.bounds.min.x; \n\n                    if (bodyHeight > maxHeight)\n                        maxHeight = bodyHeight;\n                    \n                    Body.translate(body, { x: bodyWidth * 0.5, y: bodyHeight * 0.5 });\n\n                    x = body.bounds.max.x + columnGap;\n\n                    Composite.addBody(stack, body);\n                    \n                    lastBody = body;\n                    i += 1;\n                } else {\n                    x += columnGap;\n                }\n            }\n            \n            y += maxHeight + rowGap;\n            x = xx;\n        }\n\n        return stack;\n    };\n    \n    /**\n     * Chains all bodies in the given composite together using constraints.\n     * @method chain\n     * @param {composite} composite\n     * @param {number} xOffsetA\n     * @param {number} yOffsetA\n     * @param {number} xOffsetB\n     * @param {number} yOffsetB\n     * @param {object} options\n     * @return {composite} A new composite containing objects chained together with constraints\n     */\n    Composites.chain = function(composite, xOffsetA, yOffsetA, xOffsetB, yOffsetB, options) {\n        var bodies = composite.bodies;\n        \n        for (var i = 1; i < bodies.length; i++) {\n            var bodyA = bodies[i - 1],\n                bodyB = bodies[i],\n                bodyAHeight = bodyA.bounds.max.y - bodyA.bounds.min.y,\n                bodyAWidth = bodyA.bounds.max.x - bodyA.bounds.min.x, \n                bodyBHeight = bodyB.bounds.max.y - bodyB.bounds.min.y,\n                bodyBWidth = bodyB.bounds.max.x - bodyB.bounds.min.x;\n        \n            var defaults = {\n                bodyA: bodyA,\n                pointA: { x: bodyAWidth * xOffsetA, y: bodyAHeight * yOffsetA },\n                bodyB: bodyB,\n                pointB: { x: bodyBWidth * xOffsetB, y: bodyBHeight * yOffsetB }\n            };\n            \n            var constraint = Common.extend(defaults, options);\n        \n            Composite.addConstraint(composite, Constraint.create(constraint));\n        }\n\n        composite.label += ' Chain';\n        \n        return composite;\n    };\n\n    /**\n     * Connects bodies in the composite with constraints in a grid pattern, with optional cross braces.\n     * @method mesh\n     * @param {composite} composite\n     * @param {number} columns\n     * @param {number} rows\n     * @param {boolean} crossBrace\n     * @param {object} options\n     * @return {composite} The composite containing objects meshed together with constraints\n     */\n    Composites.mesh = function(composite, columns, rows, crossBrace, options) {\n        var bodies = composite.bodies,\n            row,\n            col,\n            bodyA,\n            bodyB,\n            bodyC;\n        \n        for (row = 0; row < rows; row++) {\n            for (col = 1; col < columns; col++) {\n                bodyA = bodies[(col - 1) + (row * columns)];\n                bodyB = bodies[col + (row * columns)];\n                Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n            }\n\n            if (row > 0) {\n                for (col = 0; col < columns; col++) {\n                    bodyA = bodies[col + ((row - 1) * columns)];\n                    bodyB = bodies[col + (row * columns)];\n                    Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyA, bodyB: bodyB }, options)));\n\n                    if (crossBrace && col > 0) {\n                        bodyC = bodies[(col - 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n\n                    if (crossBrace && col < columns - 1) {\n                        bodyC = bodies[(col + 1) + ((row - 1) * columns)];\n                        Composite.addConstraint(composite, Constraint.create(Common.extend({ bodyA: bodyC, bodyB: bodyB }, options)));\n                    }\n                }\n            }\n        }\n\n        composite.label += ' Mesh';\n        \n        return composite;\n    };\n    \n    /**\n     * Create a new composite containing bodies created in the callback in a pyramid arrangement.\n     * This function uses the body's bounds to prevent overlaps.\n     * @method pyramid\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {function} callback\n     * @return {composite} A new composite containing objects created in the callback\n     */\n    Composites.pyramid = function(xx, yy, columns, rows, columnGap, rowGap, callback) {\n        return Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y, column, row, lastBody, i) {\n            var actualRows = Math.min(rows, Math.ceil(columns / 2)),\n                lastBodyWidth = lastBody ? lastBody.bounds.max.x - lastBody.bounds.min.x : 0;\n            \n            if (row > actualRows)\n                return;\n            \n            // reverse row order\n            row = actualRows - row;\n            \n            var start = row,\n                end = columns - 1 - row;\n\n            if (column < start || column > end)\n                return;\n            \n            // retroactively fix the first body's position, since width was unknown\n            if (i === 1) {\n                Body.translate(lastBody, { x: (column + (columns % 2 === 1 ? 1 : -1)) * lastBodyWidth, y: 0 });\n            }\n\n            var xOffset = lastBody ? column * lastBodyWidth : 0;\n            \n            return callback(xx + xOffset + column * columnGap, y, column, row, lastBody, i);\n        });\n    };\n\n    /**\n     * Creates a composite with a Newton's Cradle setup of bodies and constraints.\n     * @method newtonsCradle\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} number\n     * @param {number} size\n     * @param {number} length\n     * @return {composite} A new composite newtonsCradle body\n     */\n    Composites.newtonsCradle = function(xx, yy, number, size, length) {\n        var newtonsCradle = Composite.create({ label: 'Newtons Cradle' });\n\n        for (var i = 0; i < number; i++) {\n            var separation = 1.9,\n                circle = Bodies.circle(xx + i * (size * separation), yy + length, size, \n                            { inertia: Infinity, restitution: 1, friction: 0, frictionAir: 0.0001, slop: 1 }),\n                constraint = Constraint.create({ pointA: { x: xx + i * (size * separation), y: yy }, bodyB: circle });\n\n            Composite.addBody(newtonsCradle, circle);\n            Composite.addConstraint(newtonsCradle, constraint);\n        }\n\n        return newtonsCradle;\n    };\n    \n    /**\n     * Creates a composite with simple car setup of bodies and constraints.\n     * @method car\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} width\n     * @param {number} height\n     * @param {number} wheelSize\n     * @return {composite} A new composite car body\n     */\n    Composites.car = function(xx, yy, width, height, wheelSize) {\n        var group = Body.nextGroup(true),\n            wheelBase = 20,\n            wheelAOffset = -width * 0.5 + wheelBase,\n            wheelBOffset = width * 0.5 - wheelBase,\n            wheelYOffset = 0;\n    \n        var car = Composite.create({ label: 'Car' }),\n            body = Bodies.rectangle(xx, yy, width, height, { \n                collisionFilter: {\n                    group: group\n                },\n                chamfer: {\n                    radius: height * 0.5\n                },\n                density: 0.0002\n            });\n    \n        var wheelA = Bodies.circle(xx + wheelAOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var wheelB = Bodies.circle(xx + wheelBOffset, yy + wheelYOffset, wheelSize, { \n            collisionFilter: {\n                group: group\n            },\n            friction: 0.8\n        });\n                    \n        var axelA = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelAOffset, y: wheelYOffset },\n            bodyA: wheelA,\n            stiffness: 1,\n            length: 0\n        });\n                        \n        var axelB = Constraint.create({\n            bodyB: body,\n            pointB: { x: wheelBOffset, y: wheelYOffset },\n            bodyA: wheelB,\n            stiffness: 1,\n            length: 0\n        });\n        \n        Composite.addBody(car, body);\n        Composite.addBody(car, wheelA);\n        Composite.addBody(car, wheelB);\n        Composite.addConstraint(car, axelA);\n        Composite.addConstraint(car, axelB);\n\n        return car;\n    };\n\n    /**\n     * Creates a simple soft body like object.\n     * @method softBody\n     * @param {number} xx\n     * @param {number} yy\n     * @param {number} columns\n     * @param {number} rows\n     * @param {number} columnGap\n     * @param {number} rowGap\n     * @param {boolean} crossBrace\n     * @param {number} particleRadius\n     * @param {} particleOptions\n     * @param {} constraintOptions\n     * @return {composite} A new composite softBody\n     */\n    Composites.softBody = function(xx, yy, columns, rows, columnGap, rowGap, crossBrace, particleRadius, particleOptions, constraintOptions) {\n        particleOptions = Common.extend({ inertia: Infinity }, particleOptions);\n        constraintOptions = Common.extend({ stiffness: 0.2, render: { type: 'line', anchors: false } }, constraintOptions);\n\n        var softBody = Composites.stack(xx, yy, columns, rows, columnGap, rowGap, function(x, y) {\n            return Bodies.circle(x, y, particleRadius, particleOptions);\n        });\n\n        Composites.mesh(softBody, columns, rows, crossBrace, constraintOptions);\n\n        softBody.label = 'Soft Body';\n\n        return softBody;\n    };\n\n})();\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../constraint/Constraint\":12,\"../core/Common\":14,\"./Bodies\":23}],25:[function(_dereq_,module,exports){\n/**\n* The `Matter.Axes` module contains methods for creating and manipulating sets of axes.\n*\n* @class Axes\n*/\n\nvar Axes = {};\n\nmodule.exports = Axes;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of axes from the given vertices.\n     * @method fromVertices\n     * @param {vertices} vertices\n     * @return {axes} A new axes from the given vertices\n     */\n    Axes.fromVertices = function(vertices) {\n        var axes = {};\n\n        // find the unique axes, using edge normal gradients\n        for (var i = 0; i < vertices.length; i++) {\n            var j = (i + 1) % vertices.length, \n                normal = Vector.normalise({ \n                    x: vertices[j].y - vertices[i].y, \n                    y: vertices[i].x - vertices[j].x\n                }),\n                gradient = (normal.y === 0) ? Infinity : (normal.x / normal.y);\n            \n            // limit precision\n            gradient = gradient.toFixed(3).toString();\n            axes[gradient] = normal;\n        }\n\n        return Common.values(axes);\n    };\n\n    /**\n     * Rotates a set of axes by the given angle.\n     * @method rotate\n     * @param {axes} axes\n     * @param {number} angle\n     */\n    Axes.rotate = function(axes, angle) {\n        if (angle === 0)\n            return;\n        \n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < axes.length; i++) {\n            var axis = axes[i],\n                xx;\n            xx = axis.x * cos - axis.y * sin;\n            axis.y = axis.x * sin + axis.y * cos;\n            axis.x = xx;\n        }\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],26:[function(_dereq_,module,exports){\n/**\n* The `Matter.Bounds` module contains methods for creating and manipulating axis-aligned bounding boxes (AABB).\n*\n* @class Bounds\n*/\n\nvar Bounds = {};\n\nmodule.exports = Bounds;\n\n(function() {\n\n    /**\n     * Creates a new axis-aligned bounding box (AABB) for the given vertices.\n     * @method create\n     * @param {vertices} vertices\n     * @return {bounds} A new bounds object\n     */\n    Bounds.create = function(vertices) {\n        var bounds = { \n            min: { x: 0, y: 0 }, \n            max: { x: 0, y: 0 }\n        };\n\n        if (vertices)\n            Bounds.update(bounds, vertices);\n        \n        return bounds;\n    };\n\n    /**\n     * Updates bounds using the given vertices and extends the bounds given a velocity.\n     * @method update\n     * @param {bounds} bounds\n     * @param {vertices} vertices\n     * @param {vector} velocity\n     */\n    Bounds.update = function(bounds, vertices, velocity) {\n        bounds.min.x = Infinity;\n        bounds.max.x = -Infinity;\n        bounds.min.y = Infinity;\n        bounds.max.y = -Infinity;\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertex = vertices[i];\n            if (vertex.x > bounds.max.x) bounds.max.x = vertex.x;\n            if (vertex.x < bounds.min.x) bounds.min.x = vertex.x;\n            if (vertex.y > bounds.max.y) bounds.max.y = vertex.y;\n            if (vertex.y < bounds.min.y) bounds.min.y = vertex.y;\n        }\n        \n        if (velocity) {\n            if (velocity.x > 0) {\n                bounds.max.x += velocity.x;\n            } else {\n                bounds.min.x += velocity.x;\n            }\n            \n            if (velocity.y > 0) {\n                bounds.max.y += velocity.y;\n            } else {\n                bounds.min.y += velocity.y;\n            }\n        }\n    };\n\n    /**\n     * Returns true if the bounds contains the given point.\n     * @method contains\n     * @param {bounds} bounds\n     * @param {vector} point\n     * @return {boolean} True if the bounds contain the point, otherwise false\n     */\n    Bounds.contains = function(bounds, point) {\n        return point.x >= bounds.min.x && point.x <= bounds.max.x \n               && point.y >= bounds.min.y && point.y <= bounds.max.y;\n    };\n\n    /**\n     * Returns true if the two bounds intersect.\n     * @method overlaps\n     * @param {bounds} boundsA\n     * @param {bounds} boundsB\n     * @return {boolean} True if the bounds overlap, otherwise false\n     */\n    Bounds.overlaps = function(boundsA, boundsB) {\n        return (boundsA.min.x <= boundsB.max.x && boundsA.max.x >= boundsB.min.x\n                && boundsA.max.y >= boundsB.min.y && boundsA.min.y <= boundsB.max.y);\n    };\n\n    /**\n     * Translates the bounds by the given vector.\n     * @method translate\n     * @param {bounds} bounds\n     * @param {vector} vector\n     */\n    Bounds.translate = function(bounds, vector) {\n        bounds.min.x += vector.x;\n        bounds.max.x += vector.x;\n        bounds.min.y += vector.y;\n        bounds.max.y += vector.y;\n    };\n\n    /**\n     * Shifts the bounds to the given position.\n     * @method shift\n     * @param {bounds} bounds\n     * @param {vector} position\n     */\n    Bounds.shift = function(bounds, position) {\n        var deltaX = bounds.max.x - bounds.min.x,\n            deltaY = bounds.max.y - bounds.min.y;\n            \n        bounds.min.x = position.x;\n        bounds.max.x = position.x + deltaX;\n        bounds.min.y = position.y;\n        bounds.max.y = position.y + deltaY;\n    };\n    \n})();\n\n},{}],27:[function(_dereq_,module,exports){\n/**\n* The `Matter.Svg` module contains methods for converting SVG images into an array of vector points.\n*\n* To use this module you also need the SVGPathSeg polyfill: https://github.com/progers/pathseg\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Svg\n*/\n\nvar Svg = {};\n\nmodule.exports = Svg;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Converts an SVG path into an array of vector points.\n     * If the input path forms a concave shape, you must decompose the result into convex parts before use.\n     * See `Bodies.fromVertices` which provides support for this.\n     * Note that this function is not guaranteed to support complex paths (such as those with holes).\n     * You must load the `pathseg.js` polyfill on newer browsers.\n     * @method pathToVertices\n     * @param {SVGPathElement} path\n     * @param {Number} [sampleLength=15]\n     * @return {Vector[]} points\n     */\n    Svg.pathToVertices = function(path, sampleLength) {\n        if (typeof window !== 'undefined' && !('SVGPathSeg' in window)) {\n            Common.warn('Svg.pathToVertices: SVGPathSeg not defined, a polyfill is required.');\n        }\n\n        // https://github.com/wout/svg.topoly.js/blob/master/svg.topoly.js\n        var i, il, total, point, segment, segments, \n            segmentsQueue, lastSegment, \n            lastPoint, segmentIndex, points = [],\n            lx, ly, length = 0, x = 0, y = 0;\n\n        sampleLength = sampleLength || 15;\n\n        var addPoint = function(px, py, pathSegType) {\n            // all odd-numbered path types are relative except PATHSEG_CLOSEPATH (1)\n            var isRelative = pathSegType % 2 === 1 && pathSegType > 1;\n\n            // when the last point doesn't equal the current point add the current point\n            if (!lastPoint || px != lastPoint.x || py != lastPoint.y) {\n                if (lastPoint && isRelative) {\n                    lx = lastPoint.x;\n                    ly = lastPoint.y;\n                } else {\n                    lx = 0;\n                    ly = 0;\n                }\n\n                var point = {\n                    x: lx + px,\n                    y: ly + py\n                };\n\n                // set last point\n                if (isRelative || !lastPoint) {\n                    lastPoint = point;\n                }\n\n                points.push(point);\n\n                x = lx + px;\n                y = ly + py;\n            }\n        };\n\n        var addSegmentPoint = function(segment) {\n            var segType = segment.pathSegTypeAsLetter.toUpperCase();\n\n            // skip path ends\n            if (segType === 'Z') \n                return;\n\n            // map segment to x and y\n            switch (segType) {\n\n            case 'M':\n            case 'L':\n            case 'T':\n            case 'C':\n            case 'S':\n            case 'Q':\n                x = segment.x;\n                y = segment.y;\n                break;\n            case 'H':\n                x = segment.x;\n                break;\n            case 'V':\n                y = segment.y;\n                break;\n            }\n\n            addPoint(x, y, segment.pathSegType);\n        };\n\n        // ensure path is absolute\n        Svg._svgPathToAbsolute(path);\n\n        // get total length\n        total = path.getTotalLength();\n\n        // queue segments\n        segments = [];\n        for (i = 0; i < path.pathSegList.numberOfItems; i += 1)\n            segments.push(path.pathSegList.getItem(i));\n\n        segmentsQueue = segments.concat();\n\n        // sample through path\n        while (length < total) {\n            // get segment at position\n            segmentIndex = path.getPathSegAtLength(length);\n            segment = segments[segmentIndex];\n\n            // new segment\n            if (segment != lastSegment) {\n                while (segmentsQueue.length && segmentsQueue[0] != segment)\n                    addSegmentPoint(segmentsQueue.shift());\n\n                lastSegment = segment;\n            }\n\n            // add points in between when curving\n            // TODO: adaptive sampling\n            switch (segment.pathSegTypeAsLetter.toUpperCase()) {\n\n            case 'C':\n            case 'T':\n            case 'S':\n            case 'Q':\n            case 'A':\n                point = path.getPointAtLength(length);\n                addPoint(point.x, point.y, 0);\n                break;\n\n            }\n\n            // increment by sample value\n            length += sampleLength;\n        }\n\n        // add remaining segments not passed by sampling\n        for (i = 0, il = segmentsQueue.length; i < il; ++i)\n            addSegmentPoint(segmentsQueue[i]);\n\n        return points;\n    };\n\n    Svg._svgPathToAbsolute = function(path) {\n        // http://phrogz.net/convert-svg-path-to-all-absolute-commands\n        // Copyright (c) Gavin Kistner\n        // http://phrogz.net/js/_ReuseLicense.txt\n        // Modifications: tidy formatting and naming\n        var x0, y0, x1, y1, x2, y2, segs = path.pathSegList,\n            x = 0, y = 0, len = segs.numberOfItems;\n\n        for (var i = 0; i < len; ++i) {\n            var seg = segs.getItem(i),\n                segType = seg.pathSegTypeAsLetter;\n\n            if (/[MLHVCSQTA]/.test(segType)) {\n                if ('x' in seg) x = seg.x;\n                if ('y' in seg) y = seg.y;\n            } else {\n                if ('x1' in seg) x1 = x + seg.x1;\n                if ('x2' in seg) x2 = x + seg.x2;\n                if ('y1' in seg) y1 = y + seg.y1;\n                if ('y2' in seg) y2 = y + seg.y2;\n                if ('x' in seg) x += seg.x;\n                if ('y' in seg) y += seg.y;\n\n                switch (segType) {\n\n                case 'm':\n                    segs.replaceItem(path.createSVGPathSegMovetoAbs(x, y), i);\n                    break;\n                case 'l':\n                    segs.replaceItem(path.createSVGPathSegLinetoAbs(x, y), i);\n                    break;\n                case 'h':\n                    segs.replaceItem(path.createSVGPathSegLinetoHorizontalAbs(x), i);\n                    break;\n                case 'v':\n                    segs.replaceItem(path.createSVGPathSegLinetoVerticalAbs(y), i);\n                    break;\n                case 'c':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicAbs(x, y, x1, y1, x2, y2), i);\n                    break;\n                case 's':\n                    segs.replaceItem(path.createSVGPathSegCurvetoCubicSmoothAbs(x, y, x2, y2), i);\n                    break;\n                case 'q':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticAbs(x, y, x1, y1), i);\n                    break;\n                case 't':\n                    segs.replaceItem(path.createSVGPathSegCurvetoQuadraticSmoothAbs(x, y), i);\n                    break;\n                case 'a':\n                    segs.replaceItem(path.createSVGPathSegArcAbs(x, y, seg.r1, seg.r2, seg.angle, seg.largeArcFlag, seg.sweepFlag), i);\n                    break;\n                case 'z':\n                case 'Z':\n                    x = x0;\n                    y = y0;\n                    break;\n\n                }\n            }\n\n            if (segType == 'M' || segType == 'm') {\n                x0 = x;\n                y0 = y;\n            }\n        }\n    };\n\n})();\n},{\"../core/Common\":14,\"../geometry/Bounds\":26}],28:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vector` module contains methods for creating and manipulating vectors.\n* Vectors are the basis of all the geometry related operations in the engine.\n* A `Matter.Vector` object is of the form `{ x: 0, y: 0 }`.\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vector\n*/\n\n// TODO: consider params for reusing vector objects\n\nvar Vector = {};\n\nmodule.exports = Vector;\n\n(function() {\n\n    /**\n     * Creates a new vector.\n     * @method create\n     * @param {number} x\n     * @param {number} y\n     * @return {vector} A new vector\n     */\n    Vector.create = function(x, y) {\n        return { x: x || 0, y: y || 0 };\n    };\n\n    /**\n     * Returns a new vector with `x` and `y` copied from the given `vector`.\n     * @method clone\n     * @param {vector} vector\n     * @return {vector} A new cloned vector\n     */\n    Vector.clone = function(vector) {\n        return { x: vector.x, y: vector.y };\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector.\n     * @method magnitude\n     * @param {vector} vector\n     * @return {number} The magnitude of the vector\n     */\n    Vector.magnitude = function(vector) {\n        return Math.sqrt((vector.x * vector.x) + (vector.y * vector.y));\n    };\n\n    /**\n     * Returns the magnitude (length) of a vector (therefore saving a `sqrt` operation).\n     * @method magnitudeSquared\n     * @param {vector} vector\n     * @return {number} The squared magnitude of the vector\n     */\n    Vector.magnitudeSquared = function(vector) {\n        return (vector.x * vector.x) + (vector.y * vector.y);\n    };\n\n    /**\n     * Rotates the vector about (0, 0) by specified angle.\n     * @method rotate\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} [output]\n     * @return {vector} The vector rotated about (0, 0)\n     */\n    Vector.rotate = function(vector, angle, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = vector.x * cos - vector.y * sin;\n        output.y = vector.x * sin + vector.y * cos;\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Rotates the vector about a specified point by specified angle.\n     * @method rotateAbout\n     * @param {vector} vector\n     * @param {number} angle\n     * @param {vector} point\n     * @param {vector} [output]\n     * @return {vector} A new vector rotated about the point\n     */\n    Vector.rotateAbout = function(vector, angle, point, output) {\n        var cos = Math.cos(angle), sin = Math.sin(angle);\n        if (!output) output = {};\n        var x = point.x + ((vector.x - point.x) * cos - (vector.y - point.y) * sin);\n        output.y = point.y + ((vector.x - point.x) * sin + (vector.y - point.y) * cos);\n        output.x = x;\n        return output;\n    };\n\n    /**\n     * Normalises a vector (such that its magnitude is `1`).\n     * @method normalise\n     * @param {vector} vector\n     * @return {vector} A new vector normalised\n     */\n    Vector.normalise = function(vector) {\n        var magnitude = Vector.magnitude(vector);\n        if (magnitude === 0)\n            return { x: 0, y: 0 };\n        return { x: vector.x / magnitude, y: vector.y / magnitude };\n    };\n\n    /**\n     * Returns the dot-product of two vectors.\n     * @method dot\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The dot product of the two vectors\n     */\n    Vector.dot = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.x) + (vectorA.y * vectorB.y);\n    };\n\n    /**\n     * Returns the cross-product of two vectors.\n     * @method cross\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The cross product of the two vectors\n     */\n    Vector.cross = function(vectorA, vectorB) {\n        return (vectorA.x * vectorB.y) - (vectorA.y * vectorB.x);\n    };\n\n    /**\n     * Returns the cross-product of three vectors.\n     * @method cross3\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} vectorC\n     * @return {number} The cross product of the three vectors\n     */\n    Vector.cross3 = function(vectorA, vectorB, vectorC) {\n        return (vectorB.x - vectorA.x) * (vectorC.y - vectorA.y) - (vectorB.y - vectorA.y) * (vectorC.x - vectorA.x);\n    };\n\n    /**\n     * Adds the two vectors.\n     * @method add\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB added\n     */\n    Vector.add = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x + vectorB.x;\n        output.y = vectorA.y + vectorB.y;\n        return output;\n    };\n\n    /**\n     * Subtracts the two vectors.\n     * @method sub\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @param {vector} [output]\n     * @return {vector} A new vector of vectorA and vectorB subtracted\n     */\n    Vector.sub = function(vectorA, vectorB, output) {\n        if (!output) output = {};\n        output.x = vectorA.x - vectorB.x;\n        output.y = vectorA.y - vectorB.y;\n        return output;\n    };\n\n    /**\n     * Multiplies a vector and a scalar.\n     * @method mult\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector multiplied by scalar\n     */\n    Vector.mult = function(vector, scalar) {\n        return { x: vector.x * scalar, y: vector.y * scalar };\n    };\n\n    /**\n     * Divides a vector and a scalar.\n     * @method div\n     * @param {vector} vector\n     * @param {number} scalar\n     * @return {vector} A new vector divided by scalar\n     */\n    Vector.div = function(vector, scalar) {\n        return { x: vector.x / scalar, y: vector.y / scalar };\n    };\n\n    /**\n     * Returns the perpendicular vector. Set `negate` to true for the perpendicular in the opposite direction.\n     * @method perp\n     * @param {vector} vector\n     * @param {bool} [negate=false]\n     * @return {vector} The perpendicular vector\n     */\n    Vector.perp = function(vector, negate) {\n        negate = negate === true ? -1 : 1;\n        return { x: negate * -vector.y, y: negate * vector.x };\n    };\n\n    /**\n     * Negates both components of a vector such that it points in the opposite direction.\n     * @method neg\n     * @param {vector} vector\n     * @return {vector} The negated vector\n     */\n    Vector.neg = function(vector) {\n        return { x: -vector.x, y: -vector.y };\n    };\n\n    /**\n     * Returns the angle between the vector `vectorB - vectorA` and the x-axis in radians.\n     * @method angle\n     * @param {vector} vectorA\n     * @param {vector} vectorB\n     * @return {number} The angle in radians\n     */\n    Vector.angle = function(vectorA, vectorB) {\n        return Math.atan2(vectorB.y - vectorA.y, vectorB.x - vectorA.x);\n    };\n\n    /**\n     * Temporary vector pool (not thread-safe).\n     * @property _temp\n     * @type {vector[]}\n     * @private\n     */\n    Vector._temp = [\n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create(), \n        Vector.create(), Vector.create()\n    ];\n\n})();\n},{}],29:[function(_dereq_,module,exports){\n/**\n* The `Matter.Vertices` module contains methods for creating and manipulating sets of vertices.\n* A set of vertices is an array of `Matter.Vector` with additional indexing properties inserted by `Vertices.create`.\n* A `Matter.Body` maintains a set of vertices to represent the shape of the object (its convex hull).\n*\n* See the included usage [examples](https://github.com/liabru/matter-js/tree/master/examples).\n*\n* @class Vertices\n*/\n\nvar Vertices = {};\n\nmodule.exports = Vertices;\n\nvar Vector = _dereq_('../geometry/Vector');\nvar Common = _dereq_('../core/Common');\n\n(function() {\n\n    /**\n     * Creates a new set of `Matter.Body` compatible vertices.\n     * The `points` argument accepts an array of `Matter.Vector` points orientated around the origin `(0, 0)`, for example:\n     *\n     *     [{ x: 0, y: 0 }, { x: 25, y: 50 }, { x: 50, y: 0 }]\n     *\n     * The `Vertices.create` method returns a new array of vertices, which are similar to Matter.Vector objects,\n     * but with some additional references required for efficient collision detection routines.\n     *\n     * Vertices must be specified in clockwise order.\n     *\n     * Note that the `body` argument is not optional, a `Matter.Body` reference must be provided.\n     *\n     * @method create\n     * @param {vector[]} points\n     * @param {body} body\n     */\n    Vertices.create = function(points, body) {\n        var vertices = [];\n\n        for (var i = 0; i < points.length; i++) {\n            var point = points[i],\n                vertex = {\n                    x: point.x,\n                    y: point.y,\n                    index: i,\n                    body: body,\n                    isInternal: false\n                };\n\n            vertices.push(vertex);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Parses a string containing ordered x y pairs separated by spaces (and optionally commas), \n     * into a `Matter.Vertices` object for the given `Matter.Body`.\n     * For parsing SVG paths, see `Svg.pathToVertices`.\n     * @method fromPath\n     * @param {string} path\n     * @param {body} body\n     * @return {vertices} vertices\n     */\n    Vertices.fromPath = function(path, body) {\n        var pathPattern = /L?\\s*([\\-\\d\\.e]+)[\\s,]*([\\-\\d\\.e]+)*/ig,\n            points = [];\n\n        path.replace(pathPattern, function(match, x, y) {\n            points.push({ x: parseFloat(x), y: parseFloat(y) });\n        });\n\n        return Vertices.create(points, body);\n    };\n\n    /**\n     * Returns the centre (centroid) of the set of vertices.\n     * @method centre\n     * @param {vertices} vertices\n     * @return {vector} The centre point\n     */\n    Vertices.centre = function(vertices) {\n        var area = Vertices.area(vertices, true),\n            centre = { x: 0, y: 0 },\n            cross,\n            temp,\n            j;\n\n        for (var i = 0; i < vertices.length; i++) {\n            j = (i + 1) % vertices.length;\n            cross = Vector.cross(vertices[i], vertices[j]);\n            temp = Vector.mult(Vector.add(vertices[i], vertices[j]), cross);\n            centre = Vector.add(centre, temp);\n        }\n\n        return Vector.div(centre, 6 * area);\n    };\n\n    /**\n     * Returns the average (mean) of the set of vertices.\n     * @method mean\n     * @param {vertices} vertices\n     * @return {vector} The average point\n     */\n    Vertices.mean = function(vertices) {\n        var average = { x: 0, y: 0 };\n\n        for (var i = 0; i < vertices.length; i++) {\n            average.x += vertices[i].x;\n            average.y += vertices[i].y;\n        }\n\n        return Vector.div(average, vertices.length);\n    };\n\n    /**\n     * Returns the area of the set of vertices.\n     * @method area\n     * @param {vertices} vertices\n     * @param {bool} signed\n     * @return {number} The area\n     */\n    Vertices.area = function(vertices, signed) {\n        var area = 0,\n            j = vertices.length - 1;\n\n        for (var i = 0; i < vertices.length; i++) {\n            area += (vertices[j].x - vertices[i].x) * (vertices[j].y + vertices[i].y);\n            j = i;\n        }\n\n        if (signed)\n            return area / 2;\n\n        return Math.abs(area) / 2;\n    };\n\n    /**\n     * Returns the moment of inertia (second moment of area) of the set of vertices given the total mass.\n     * @method inertia\n     * @param {vertices} vertices\n     * @param {number} mass\n     * @return {number} The polygon's moment of inertia\n     */\n    Vertices.inertia = function(vertices, mass) {\n        var numerator = 0,\n            denominator = 0,\n            v = vertices,\n            cross,\n            j;\n\n        // find the polygon's moment of inertia, using second moment of area\n        // from equations at http://www.physicsforums.com/showthread.php?t=25293\n        for (var n = 0; n < v.length; n++) {\n            j = (n + 1) % v.length;\n            cross = Math.abs(Vector.cross(v[j], v[n]));\n            numerator += cross * (Vector.dot(v[j], v[j]) + Vector.dot(v[j], v[n]) + Vector.dot(v[n], v[n]));\n            denominator += cross;\n        }\n\n        return (mass / 6) * (numerator / denominator);\n    };\n\n    /**\n     * Translates the set of vertices in-place.\n     * @method translate\n     * @param {vertices} vertices\n     * @param {vector} vector\n     * @param {number} scalar\n     */\n    Vertices.translate = function(vertices, vector, scalar) {\n        var i;\n        if (scalar) {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x * scalar;\n                vertices[i].y += vector.y * scalar;\n            }\n        } else {\n            for (i = 0; i < vertices.length; i++) {\n                vertices[i].x += vector.x;\n                vertices[i].y += vector.y;\n            }\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Rotates the set of vertices in-place.\n     * @method rotate\n     * @param {vertices} vertices\n     * @param {number} angle\n     * @param {vector} point\n     */\n    Vertices.rotate = function(vertices, angle, point) {\n        if (angle === 0)\n            return;\n\n        var cos = Math.cos(angle),\n            sin = Math.sin(angle);\n\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                dx = vertice.x - point.x,\n                dy = vertice.y - point.y;\n                \n            vertice.x = point.x + (dx * cos - dy * sin);\n            vertice.y = point.y + (dx * sin + dy * cos);\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Returns `true` if the `point` is inside the set of `vertices`.\n     * @method contains\n     * @param {vertices} vertices\n     * @param {vector} point\n     * @return {boolean} True if the vertices contains point, otherwise false\n     */\n    Vertices.contains = function(vertices, point) {\n        for (var i = 0; i < vertices.length; i++) {\n            var vertice = vertices[i],\n                nextVertice = vertices[(i + 1) % vertices.length];\n            if ((point.x - vertice.x) * (nextVertice.y - vertice.y) + (point.y - vertice.y) * (vertice.x - nextVertice.x) > 0) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    /**\n     * Scales the vertices from a point (default is centre) in-place.\n     * @method scale\n     * @param {vertices} vertices\n     * @param {number} scaleX\n     * @param {number} scaleY\n     * @param {vector} point\n     */\n    Vertices.scale = function(vertices, scaleX, scaleY, point) {\n        if (scaleX === 1 && scaleY === 1)\n            return vertices;\n\n        point = point || Vertices.centre(vertices);\n\n        var vertex,\n            delta;\n\n        for (var i = 0; i < vertices.length; i++) {\n            vertex = vertices[i];\n            delta = Vector.sub(vertex, point);\n            vertices[i].x = point.x + delta.x * scaleX;\n            vertices[i].y = point.y + delta.y * scaleY;\n        }\n\n        return vertices;\n    };\n\n    /**\n     * Chamfers a set of vertices by giving them rounded corners, returns a new set of vertices.\n     * The radius parameter is a single number or an array to specify the radius for each vertex.\n     * @method chamfer\n     * @param {vertices} vertices\n     * @param {number[]} radius\n     * @param {number} quality\n     * @param {number} qualityMin\n     * @param {number} qualityMax\n     */\n    Vertices.chamfer = function(vertices, radius, quality, qualityMin, qualityMax) {\n        if (typeof radius === 'number') {\n            radius = [radius];\n        } else {\n            radius = radius || [8];\n        }\n\n        // quality defaults to -1, which is auto\n        quality = (typeof quality !== 'undefined') ? quality : -1;\n        qualityMin = qualityMin || 2;\n        qualityMax = qualityMax || 14;\n\n        var newVertices = [];\n\n        for (var i = 0; i < vertices.length; i++) {\n            var prevVertex = vertices[i - 1 >= 0 ? i - 1 : vertices.length - 1],\n                vertex = vertices[i],\n                nextVertex = vertices[(i + 1) % vertices.length],\n                currentRadius = radius[i < radius.length ? i : radius.length - 1];\n\n            if (currentRadius === 0) {\n                newVertices.push(vertex);\n                continue;\n            }\n\n            var prevNormal = Vector.normalise({ \n                x: vertex.y - prevVertex.y, \n                y: prevVertex.x - vertex.x\n            });\n\n            var nextNormal = Vector.normalise({ \n                x: nextVertex.y - vertex.y, \n                y: vertex.x - nextVertex.x\n            });\n\n            var diagonalRadius = Math.sqrt(2 * Math.pow(currentRadius, 2)),\n                radiusVector = Vector.mult(Common.clone(prevNormal), currentRadius),\n                midNormal = Vector.normalise(Vector.mult(Vector.add(prevNormal, nextNormal), 0.5)),\n                scaledVertex = Vector.sub(vertex, Vector.mult(midNormal, diagonalRadius));\n\n            var precision = quality;\n\n            if (quality === -1) {\n                // automatically decide precision\n                precision = Math.pow(currentRadius, 0.32) * 1.75;\n            }\n\n            precision = Common.clamp(precision, qualityMin, qualityMax);\n\n            // use an even value for precision, more likely to reduce axes by using symmetry\n            if (precision % 2 === 1)\n                precision += 1;\n\n            var alpha = Math.acos(Vector.dot(prevNormal, nextNormal)),\n                theta = alpha / precision;\n\n            for (var j = 0; j < precision; j++) {\n                newVertices.push(Vector.add(Vector.rotate(radiusVector, theta * j), scaledVertex));\n            }\n        }\n\n        return newVertices;\n    };\n\n    /**\n     * Sorts the input vertices into clockwise order in place.\n     * @method clockwiseSort\n     * @param {vertices} vertices\n     * @return {vertices} vertices\n     */\n    Vertices.clockwiseSort = function(vertices) {\n        var centre = Vertices.mean(vertices);\n\n        vertices.sort(function(vertexA, vertexB) {\n            return Vector.angle(centre, vertexA) - Vector.angle(centre, vertexB);\n        });\n\n        return vertices;\n    };\n\n    /**\n     * Returns true if the vertices form a convex shape (vertices must be in clockwise order).\n     * @method isConvex\n     * @param {vertices} vertices\n     * @return {bool} `true` if the `vertices` are convex, `false` if not (or `null` if not computable).\n     */\n    Vertices.isConvex = function(vertices) {\n        // http://paulbourke.net/geometry/polygonmesh/\n        // Copyright (c) Paul Bourke (use permitted)\n\n        var flag = 0,\n            n = vertices.length,\n            i,\n            j,\n            k,\n            z;\n\n        if (n < 3)\n            return null;\n\n        for (i = 0; i < n; i++) {\n            j = (i + 1) % n;\n            k = (i + 2) % n;\n            z = (vertices[j].x - vertices[i].x) * (vertices[k].y - vertices[j].y);\n            z -= (vertices[j].y - vertices[i].y) * (vertices[k].x - vertices[j].x);\n\n            if (z < 0) {\n                flag |= 1;\n            } else if (z > 0) {\n                flag |= 2;\n            }\n\n            if (flag === 3) {\n                return false;\n            }\n        }\n\n        if (flag !== 0){\n            return true;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Returns the convex hull of the input vertices as a new array of points.\n     * @method hull\n     * @param {vertices} vertices\n     * @return [vertex] vertices\n     */\n    Vertices.hull = function(vertices) {\n        // http://geomalgorithms.com/a10-_hull-1.html\n\n        var upper = [],\n            lower = [], \n            vertex,\n            i;\n\n        // sort vertices on x-axis (y-axis for ties)\n        vertices = vertices.slice(0);\n        vertices.sort(function(vertexA, vertexB) {\n            var dx = vertexA.x - vertexB.x;\n            return dx !== 0 ? dx : vertexA.y - vertexB.y;\n        });\n\n        // build lower hull\n        for (i = 0; i < vertices.length; i += 1) {\n            vertex = vertices[i];\n\n            while (lower.length >= 2 \n                   && Vector.cross3(lower[lower.length - 2], lower[lower.length - 1], vertex) <= 0) {\n                lower.pop();\n            }\n\n            lower.push(vertex);\n        }\n\n        // build upper hull\n        for (i = vertices.length - 1; i >= 0; i -= 1) {\n            vertex = vertices[i];\n\n            while (upper.length >= 2 \n                   && Vector.cross3(upper[upper.length - 2], upper[upper.length - 1], vertex) <= 0) {\n                upper.pop();\n            }\n\n            upper.push(vertex);\n        }\n\n        // concatenation of the lower and upper hulls gives the convex hull\n        // omit last points because they are repeated at the beginning of the other list\n        upper.pop();\n        lower.pop();\n\n        return upper.concat(lower);\n    };\n\n})();\n\n},{\"../core/Common\":14,\"../geometry/Vector\":28}],30:[function(_dereq_,module,exports){\nvar Matter = module.exports = _dereq_('../core/Matter');\n\nMatter.Body = _dereq_('../body/Body');\nMatter.Composite = _dereq_('../body/Composite');\nMatter.World = _dereq_('../body/World');\n\nMatter.Contact = _dereq_('../collision/Contact');\nMatter.Detector = _dereq_('../collision/Detector');\nMatter.Grid = _dereq_('../collision/Grid');\nMatter.Pairs = _dereq_('../collision/Pairs');\nMatter.Pair = _dereq_('../collision/Pair');\nMatter.Query = _dereq_('../collision/Query');\nMatter.Resolver = _dereq_('../collision/Resolver');\nMatter.SAT = _dereq_('../collision/SAT');\n\nMatter.Constraint = _dereq_('../constraint/Constraint');\nMatter.MouseConstraint = _dereq_('../constraint/MouseConstraint');\n\nMatter.Common = _dereq_('../core/Common');\nMatter.Engine = _dereq_('../core/Engine');\nMatter.Events = _dereq_('../core/Events');\nMatter.Mouse = _dereq_('../core/Mouse');\nMatter.Runner = _dereq_('../core/Runner');\nMatter.Sleeping = _dereq_('../core/Sleeping');\nMatter.Plugin = _dereq_('../core/Plugin');\n\n\nMatter.Bodies = _dereq_('../factory/Bodies');\nMatter.Composites = _dereq_('../factory/Composites');\n\nMatter.Axes = _dereq_('../geometry/Axes');\nMatter.Bounds = _dereq_('../geometry/Bounds');\nMatter.Svg = _dereq_('../geometry/Svg');\nMatter.Vector = _dereq_('../geometry/Vector');\nMatter.Vertices = _dereq_('../geometry/Vertices');\n\nMatter.Render = _dereq_('../render/Render');\nMatter.RenderPixi = _dereq_('../render/RenderPixi');\n\n// aliases\n\nMatter.World.add = Matter.Composite.add;\nMatter.World.remove = Matter.Composite.remove;\nMatter.World.addComposite = Matter.Composite.addComposite;\nMatter.World.addBody = Matter.Composite.addBody;\nMatter.World.addConstraint = Matter.Composite.addConstraint;\nMatter.World.clear = Matter.Composite.clear;\nMatter.Engine.run = Matter.Runner.run;\n\n},{\"../body/Body\":1,\"../body/Composite\":2,\"../body/World\":3,\"../collision/Contact\":4,\"../collision/Detector\":5,\"../collision/Grid\":6,\"../collision/Pair\":7,\"../collision/Pairs\":8,\"../collision/Query\":9,\"../collision/Resolver\":10,\"../collision/SAT\":11,\"../constraint/Constraint\":12,\"../constraint/MouseConstraint\":13,\"../core/Common\":14,\"../core/Engine\":15,\"../core/Events\":16,\"../core/Matter\":17,\"../core/Metrics\":18,\"../core/Mouse\":19,\"../core/Plugin\":20,\"../core/Runner\":21,\"../core/Sleeping\":22,\"../factory/Bodies\":23,\"../factory/Composites\":24,\"../geometry/Axes\":25,\"../geometry/Bounds\":26,\"../geometry/Svg\":27,\"../geometry/Vector\":28,\"../geometry/Vertices\":29,\"../render/Render\":31,\"../render/RenderPixi\":32}],31:[function(_dereq_,module,exports){\n/**\n* The `Matter.Render` module is a simple HTML5 canvas based renderer for visualising instances of `Matter.Engine`.\n* It is intended for development and debugging purposes, but may also be suitable for simple games.\n* It includes a number of drawing options including wireframe, vector with support for sprites and viewports.\n*\n* @class Render\n*/\n\nvar Render = {};\n\nmodule.exports = Render;\n\nvar Common = _dereq_('../core/Common');\nvar Composite = _dereq_('../body/Composite');\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Events = _dereq_('../core/Events');\nvar Grid = _dereq_('../collision/Grid');\nvar Vector = _dereq_('../geometry/Vector');\nvar Mouse = _dereq_('../core/Mouse');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame\n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n\n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame\n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n\n    /**\n     * Creates a new renderer. The options parameter is an object that specifies any properties you wish to override the defaults.\n     * All properties have default values, and many are pre-calculated automatically based on other properties.\n     * See the properties section below for detailed information on what you can pass via the `options` object.\n     * @method create\n     * @param {object} [options]\n     * @return {render} A new renderer\n     */\n    Render.create = function(options) {\n        var defaults = {\n            controller: Render,\n            engine: null,\n            element: null,\n            canvas: null,\n            mouse: null,\n            frameRequestId: null,\n            options: {\n                width: 800,\n                height: 600,\n                pixelRatio: 1,\n                background: '#18181d',\n                wireframeBackground: '#0f0f13',\n                hasBounds: !!options.bounds,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showSeparations: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false,\n                showVertexNumbers: false,\n                showConvexHulls: false,\n                showInternalEdges: false,\n                showMousePosition: false\n            }\n        };\n\n        var render = Common.extend(defaults, options);\n\n        if (render.canvas) {\n            render.canvas.width = render.options.width || render.canvas.width;\n            render.canvas.height = render.options.height || render.canvas.height;\n        }\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.canvas = render.canvas || _createCanvas(render.options.width, render.options.height);\n        render.context = render.canvas.getContext('2d');\n        render.textures = {};\n\n        render.bounds = render.bounds || {\n            min: {\n                x: 0,\n                y: 0\n            },\n            max: {\n                x: render.canvas.width,\n                y: render.canvas.height\n            }\n        };\n\n        if (render.options.pixelRatio !== 1) {\n            Render.setPixelRatio(render, render.options.pixelRatio);\n        }\n\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else if (!render.canvas.parentNode) {\n            Common.log('Render.create: options.element was undefined, render.canvas was created but not appended', 'warn');\n        }\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     */\n    Render.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            Render.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     */\n    Render.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Sets the pixel ratio of the renderer and updates the canvas.\n     * To automatically detect the correct ratio, pass the string `'auto'` for `pixelRatio`.\n     * @method setPixelRatio\n     * @param {render} render\n     * @param {number} pixelRatio\n     */\n    Render.setPixelRatio = function(render, pixelRatio) {\n        var options = render.options,\n            canvas = render.canvas;\n\n        if (pixelRatio === 'auto') {\n            pixelRatio = _getPixelRatio(canvas);\n        }\n\n        options.pixelRatio = pixelRatio;\n        canvas.setAttribute('data-pixel-ratio', pixelRatio);\n        canvas.width = options.width * pixelRatio;\n        canvas.height = options.height * pixelRatio;\n        canvas.style.width = options.width + 'px';\n        canvas.style.height = options.height + 'px';\n        render.context.scale(pixelRatio, pixelRatio);\n    };\n\n    /**\n     * Positions and sizes the viewport around the given object bounds.\n     * Objects must have at least one of the following properties:\n     * - `object.bounds`\n     * - `object.position`\n     * - `object.min` and `object.max`\n     * - `object.x` and `object.y`\n     * @method lookAt\n     * @param {render} render\n     * @param {object[]} objects\n     * @param {vector} [padding]\n     * @param {bool} [center=true]\n     */\n    Render.lookAt = function(render, objects, padding, center) {\n        center = typeof center !== 'undefined' ? center : true;\n        objects = Common.isArray(objects) ? objects : [objects];\n        padding = padding || {\n            x: 0,\n            y: 0\n        };\n\n        // find bounds of all objects\n        var bounds = {\n            min: { x: Infinity, y: Infinity },\n            max: { x: -Infinity, y: -Infinity }\n        };\n\n        for (var i = 0; i < objects.length; i += 1) {\n            var object = objects[i],\n                min = object.bounds ? object.bounds.min : (object.min || object.position || object),\n                max = object.bounds ? object.bounds.max : (object.max || object.position || object);\n\n            if (min && max) {\n                if (min.x < bounds.min.x)\n                    bounds.min.x = min.x;\n\n                if (max.x > bounds.max.x)\n                    bounds.max.x = max.x;\n\n                if (min.y < bounds.min.y)\n                    bounds.min.y = min.y;\n\n                if (max.y > bounds.max.y)\n                    bounds.max.y = max.y;\n            }\n        }\n\n        // find ratios\n        var width = (bounds.max.x - bounds.min.x) + 2 * padding.x,\n            height = (bounds.max.y - bounds.min.y) + 2 * padding.y,\n            viewHeight = render.canvas.height,\n            viewWidth = render.canvas.width,\n            outerRatio = viewWidth / viewHeight,\n            innerRatio = width / height,\n            scaleX = 1,\n            scaleY = 1;\n\n        // find scale factor\n        if (innerRatio > outerRatio) {\n            scaleY = innerRatio / outerRatio;\n        } else {\n            scaleX = outerRatio / innerRatio;\n        }\n\n        // enable bounds\n        render.options.hasBounds = true;\n\n        // position and size\n        render.bounds.min.x = bounds.min.x;\n        render.bounds.max.x = bounds.min.x + width * scaleX;\n        render.bounds.min.y = bounds.min.y;\n        render.bounds.max.y = bounds.min.y + height * scaleY;\n\n        // center\n        if (center) {\n            render.bounds.min.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.max.x += width * 0.5 - (width * scaleX) * 0.5;\n            render.bounds.min.y += height * 0.5 - (height * scaleY) * 0.5;\n            render.bounds.max.y += height * 0.5 - (height * scaleY) * 0.5;\n        }\n\n        // padding\n        render.bounds.min.x -= padding.x;\n        render.bounds.max.x -= padding.x;\n        render.bounds.min.y -= padding.y;\n        render.bounds.max.y -= padding.y;\n\n        // update mouse\n        if (render.mouse) {\n            Mouse.setScale(render.mouse, {\n                x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n            });\n\n            Mouse.setOffset(render.mouse, render.bounds.min);\n        }\n    };\n\n    /**\n     * Applies viewport transforms based on `render.bounds` to a render context.\n     * @method startViewTransform\n     * @param {render} render\n     */\n    Render.startViewTransform = function(render) {\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        render.context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n        render.context.translate(-render.bounds.min.x, -render.bounds.min.y);\n    };\n\n    /**\n     * Resets all transforms on the render context.\n     * @method endViewTransform\n     * @param {render} render\n     */\n    Render.endViewTransform = function(render) {\n        render.context.setTransform(render.options.pixelRatio, 0, 0, render.options.pixelRatio, 0, 0);\n    };\n\n    /**\n     * Renders the given `engine`'s `Matter.World` object.\n     * This is the entry point for all rendering and should be called every time the scene changes.\n     * @method world\n     * @param {render} render\n     */\n    Render.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            canvas = render.canvas,\n            context = render.context,\n            options = render.options,\n            allBodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            background = options.wireframes ? options.wireframeBackground : options.background,\n            bodies = [],\n            constraints = [],\n            i;\n\n        var event = {\n            timestamp: engine.timing.timestamp\n        };\n\n        Events.trigger(render, 'beforeRender', event);\n\n        // apply background if it has changed\n        if (render.currentBackground !== background)\n            _applyBackground(render, background);\n\n        // clear the canvas with a transparent fill, to allow the canvas background to show\n        context.globalCompositeOperation = 'source-in';\n        context.fillStyle = \"transparent\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.globalCompositeOperation = 'source-over';\n\n        // handle bounds\n        if (options.hasBounds) {\n            // filter out bodies that are not in view\n            for (i = 0; i < allBodies.length; i++) {\n                var body = allBodies[i];\n                if (Bounds.overlaps(body.bounds, render.bounds))\n                    bodies.push(body);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            Render.startViewTransform(render);\n\n            // update mouse\n            if (render.mouse) {\n                Mouse.setScale(render.mouse, {\n                    x: (render.bounds.max.x - render.bounds.min.x) / render.canvas.width,\n                    y: (render.bounds.max.y - render.bounds.min.y) / render.canvas.height\n                });\n\n                Mouse.setOffset(render.mouse, render.bounds.min);\n            }\n        } else {\n            constraints = allConstraints;\n            bodies = allBodies;\n        }\n\n        if (!options.wireframes || (engine.enableSleeping && options.showSleeping)) {\n            // fully featured rendering of bodies\n            Render.bodies(render, bodies, context);\n        } else {\n            if (options.showConvexHulls)\n                Render.bodyConvexHulls(render, bodies, context);\n\n            // optimised method for wireframes only\n            Render.bodyWireframes(render, bodies, context);\n        }\n\n        if (options.showBounds)\n            Render.bodyBounds(render, bodies, context);\n\n        if (options.showAxes || options.showAngleIndicator)\n            Render.bodyAxes(render, bodies, context);\n\n        if (options.showPositions)\n            Render.bodyPositions(render, bodies, context);\n\n        if (options.showVelocity)\n            Render.bodyVelocity(render, bodies, context);\n\n        if (options.showIds)\n            Render.bodyIds(render, bodies, context);\n\n        if (options.showSeparations)\n            Render.separations(render, engine.pairs.list, context);\n\n        if (options.showCollisions)\n            Render.collisions(render, engine.pairs.list, context);\n\n        if (options.showVertexNumbers)\n            Render.vertexNumbers(render, bodies, context);\n\n        if (options.showMousePosition)\n            Render.mousePosition(render, render.mouse, context);\n\n        Render.constraints(constraints, context);\n\n        if (options.showBroadphase && engine.broadphase.controller === Grid)\n            Render.grid(render, engine.broadphase, context);\n\n        if (options.showDebug)\n            Render.debug(render, context);\n\n        if (options.hasBounds) {\n            // revert view transforms\n            Render.endViewTransform(render);\n        }\n\n        Events.trigger(render, 'afterRender', event);\n    };\n\n    /**\n     * Description\n     * @private\n     * @method debug\n     * @param {render} render\n     * @param {RenderingContext} context\n     */\n    Render.debug = function(render, context) {\n        var c = context,\n            engine = render.engine,\n            world = engine.world,\n            metrics = engine.metrics,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            space = \"    \";\n\n        if (engine.timing.timestamp - (render.debugTimestamp || 0) >= 500) {\n            var text = \"\";\n\n            if (metrics.timing) {\n                text += \"fps: \" + Math.round(metrics.timing.fps) + space;\n            }\n\n\n            render.debugString = text;\n            render.debugTimestamp = engine.timing.timestamp;\n        }\n\n        if (render.debugString) {\n            c.font = \"12px Arial\";\n\n            if (options.wireframes) {\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n            } else {\n                c.fillStyle = 'rgba(0,0,0,0.5)';\n            }\n\n            var split = render.debugString.split('\\n');\n\n            for (var i = 0; i < split.length; i++) {\n                c.fillText(split[i], 50, 50 + i * 18);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method constraints\n     * @param {constraint[]} constraints\n     * @param {RenderingContext} context\n     */\n    Render.constraints = function(constraints, context) {\n        var c = context;\n\n        for (var i = 0; i < constraints.length; i++) {\n            var constraint = constraints[i];\n\n            if (!constraint.render.visible || !constraint.pointA || !constraint.pointB)\n                continue;\n\n            var bodyA = constraint.bodyA,\n                bodyB = constraint.bodyB,\n                start,\n                end;\n\n            if (bodyA) {\n                start = Vector.add(bodyA.position, constraint.pointA);\n            } else {\n                start = constraint.pointA;\n            }\n\n            if (constraint.render.type === 'pin') {\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                if (bodyB) {\n                    end = Vector.add(bodyB.position, constraint.pointB);\n                } else {\n                    end = constraint.pointB;\n                }\n\n                c.beginPath();\n                c.moveTo(start.x, start.y);\n\n                if (constraint.render.type === 'spring') {\n                    var delta = Vector.sub(end, start),\n                        normal = Vector.perp(Vector.normalise(delta)),\n                        coils = Math.ceil(Common.clamp(constraint.length / 5, 12, 20)),\n                        offset;\n\n                    for (var j = 1; j < coils; j += 1) {\n                        offset = j % 2 === 0 ? 1 : -1;\n\n                        c.lineTo(\n                            start.x + delta.x * (j / coils) + normal.x * offset * 4,\n                            start.y + delta.y * (j / coils) + normal.y * offset * 4\n                        );\n                    }\n                }\n\n                c.lineTo(end.x, end.y);\n            }\n\n            if (constraint.render.lineWidth) {\n                c.lineWidth = constraint.render.lineWidth;\n                c.strokeStyle = constraint.render.strokeStyle;\n                c.stroke();\n            }\n\n            if (constraint.render.anchors) {\n                c.fillStyle = constraint.render.strokeStyle;\n                c.beginPath();\n                c.arc(start.x, start.y, 3, 0, 2 * Math.PI);\n                c.arc(end.x, end.y, 3, 0, 2 * Math.PI);\n                c.closePath();\n                c.fill();\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodyShadows\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyShadows = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine;\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            if (body.circleRadius) {\n                c.beginPath();\n                c.arc(body.position.x, body.position.y, body.circleRadius, 0, 2 * Math.PI);\n                c.closePath();\n            } else {\n                c.beginPath();\n                c.moveTo(body.vertices[0].x, body.vertices[0].y);\n                for (var j = 1; j < body.vertices.length; j++) {\n                    c.lineTo(body.vertices[j].x, body.vertices[j].y);\n                }\n                c.closePath();\n            }\n\n            var distanceX = body.position.x - render.options.width * 0.5,\n                distanceY = body.position.y - render.options.height * 0.2,\n                distance = Math.abs(distanceX) + Math.abs(distanceY);\n\n            c.shadowColor = 'rgba(0,0,0,0.15)';\n            c.shadowOffsetX = 0.05 * distanceX;\n            c.shadowOffsetY = 0.05 * distanceY;\n            c.shadowBlur = 1 + 12 * Math.min(1, distance / 1000);\n\n            c.fill();\n\n            c.shadowColor = null;\n            c.shadowOffsetX = null;\n            c.shadowOffsetY = null;\n            c.shadowBlur = null;\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method bodies\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodies = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            showInternalEdges = options.showInternalEdges || !options.wireframes,\n            body,\n            part,\n            i,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                if (!part.render.visible)\n                    continue;\n\n                if (options.showSleeping && body.isSleeping) {\n                    c.globalAlpha = 0.5 * part.render.opacity;\n                } else if (part.render.opacity !== 1) {\n                    c.globalAlpha = part.render.opacity;\n                }\n\n                if (part.render.sprite && part.render.sprite.texture && !options.wireframes) {\n                    // part sprite\n                    var sprite = part.render.sprite,\n                        texture = _getTexture(render, sprite.texture);\n\n                    c.translate(part.position.x, part.position.y);\n                    c.rotate(part.angle);\n\n                    c.drawImage(\n                        texture,\n                        texture.width * -sprite.xOffset * sprite.xScale,\n                        texture.height * -sprite.yOffset * sprite.yScale,\n                        texture.width * sprite.xScale,\n                        texture.height * sprite.yScale\n                    );\n\n                    // revert translation, hopefully faster than save / restore\n                    c.rotate(-part.angle);\n                    c.translate(-part.position.x, -part.position.y);\n                } else {\n                    // part polygon\n                    if (part.circleRadius) {\n                        c.beginPath();\n                        c.arc(part.position.x, part.position.y, part.circleRadius, 0, 2 * Math.PI);\n                    } else {\n                        c.beginPath();\n                        c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                        for (var j = 1; j < part.vertices.length; j++) {\n                            if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                                c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                            } else {\n                                c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                            }\n\n                            if (part.vertices[j].isInternal && !showInternalEdges) {\n                                c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                            }\n                        }\n\n                        c.lineTo(part.vertices[0].x, part.vertices[0].y);\n                        c.closePath();\n                    }\n\n                    if (!options.wireframes) {\n                        c.fillStyle = part.render.fillStyle;\n\n                        if (part.render.lineWidth) {\n                            c.lineWidth = part.render.lineWidth;\n                            c.strokeStyle = part.render.strokeStyle;\n                            c.stroke();\n                        }\n\n                        c.fill();\n                    } else {\n                        c.lineWidth = 1;\n                        c.strokeStyle = '#bbb';\n                        c.stroke();\n                    }\n                }\n\n                c.globalAlpha = 1;\n\n                // 增加自定义渲染TEXT\n                if (part.render.text) {\n                  // 30px is default font size\n                  var fontsize = 30;\n                  // arial is default font family\n                  var fontfamily = part.render.text.family || \"Arial\";\n                  // white text color by default\n                  var color = part.render.text.color || \"#FFFFFF\";\n                  // text maxWidth\n                  var maxWidth = part.render.text.maxWidth\n\n                  if (part.render.text.size)\n                    fontsize = part.render.text.size;\n                  else if (part.circleRadius)\n                    fontsize = part.circleRadius / 2;\n\n                  var content = \"\";\n                  if (typeof part.render.text == \"string\")\n                    content = part.render.text;\n                  else if (part.render.text.content)\n                    content = part.render.text.content;\n\n                  c.textBaseline = \"middle\";\n                  c.textAlign = \"center\";\n                  c.fillStyle = color;\n                  c.font = fontsize + 'px ' + fontfamily;\n                  if (part.bounds){\n                    maxWidth = part.bounds.max.x - part.bounds.min.x;\n                  }\n                  c.fillText(content, part.position.x, part.position.y, maxWidth);\n                }\n            }\n        }\n    };\n\n    /**\n     * Optimised method for drawing body wireframes in one pass\n     * @private\n     * @method bodyWireframes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyWireframes = function(render, bodies, context) {\n        var c = context,\n            showInternalEdges = render.options.showInternalEdges,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render all bodies\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n\n                c.moveTo(part.vertices[0].x, part.vertices[0].y);\n\n                for (j = 1; j < part.vertices.length; j++) {\n                    if (!part.vertices[j - 1].isInternal || showInternalEdges) {\n                        c.lineTo(part.vertices[j].x, part.vertices[j].y);\n                    } else {\n                        c.moveTo(part.vertices[j].x, part.vertices[j].y);\n                    }\n\n                    if (part.vertices[j].isInternal && !showInternalEdges) {\n                        c.moveTo(part.vertices[(j + 1) % part.vertices.length].x, part.vertices[(j + 1) % part.vertices.length].y);\n                    }\n                }\n\n                c.lineTo(part.vertices[0].x, part.vertices[0].y);\n            }\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = '#bbb';\n        c.stroke();\n    };\n\n    /**\n     * Optimised method for drawing body convex hull wireframes in one pass\n     * @private\n     * @method bodyConvexHulls\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyConvexHulls = function(render, bodies, context) {\n        var c = context,\n            body,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        // render convex hulls\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible || body.parts.length === 1)\n                continue;\n\n            c.moveTo(body.vertices[0].x, body.vertices[0].y);\n\n            for (j = 1; j < body.vertices.length; j++) {\n                c.lineTo(body.vertices[j].x, body.vertices[j].y);\n            }\n\n            c.lineTo(body.vertices[0].x, body.vertices[0].y);\n        }\n\n        c.lineWidth = 1;\n        c.strokeStyle = 'rgba(255,255,255,0.2)';\n        c.stroke();\n    };\n\n    /**\n     * Renders body vertex numbers.\n     * @private\n     * @method vertexNumbers\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.vertexNumbers = function(render, bodies, context) {\n        var c = context,\n            i,\n            j,\n            k;\n\n        for (i = 0; i < bodies.length; i++) {\n            var parts = bodies[i].parts;\n            for (k = parts.length > 1 ? 1 : 0; k < parts.length; k++) {\n                var part = parts[k];\n                for (j = 0; j < part.vertices.length; j++) {\n                    c.fillStyle = 'rgba(255,255,255,0.2)';\n                    c.fillText(i + '_' + j, part.position.x + (part.vertices[j].x - part.position.x) * 0.8, part.position.y + (part.vertices[j].y - part.position.y) * 0.8);\n                }\n            }\n        }\n    };\n\n    /**\n     * Renders mouse position.\n     * @private\n     * @method mousePosition\n     * @param {render} render\n     * @param {mouse} mouse\n     * @param {RenderingContext} context\n     */\n    Render.mousePosition = function(render, mouse, context) {\n        var c = context;\n        c.fillStyle = 'rgba(255,255,255,0.8)';\n        c.fillText(mouse.position.x + '  ' + mouse.position.y, mouse.position.x + 5, mouse.position.y - 5);\n    };\n\n    /**\n     * Draws body bounds\n     * @private\n     * @method bodyBounds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyBounds = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (body.render.visible) {\n                var parts = bodies[i].parts;\n                for (var j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    var part = parts[j];\n                    c.rect(part.bounds.min.x, part.bounds.min.y, part.bounds.max.x - part.bounds.min.x, part.bounds.max.y - part.bounds.min.y);\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,255,255,0.08)';\n        } else {\n            c.strokeStyle = 'rgba(0,0,0,0.1)';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Draws body angle indicators and axes\n     * @private\n     * @method bodyAxes\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyAxes = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            part,\n            i,\n            j,\n            k;\n\n        c.beginPath();\n\n        for (i = 0; i < bodies.length; i++) {\n            var body = bodies[i],\n                parts = body.parts;\n\n            if (!body.render.visible)\n                continue;\n\n            if (options.showAxes) {\n                // render all axes\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        var axis = part.axes[k];\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo(part.position.x + axis.x * 20, part.position.y + axis.y * 20);\n                    }\n                }\n            } else {\n                for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                    part = parts[j];\n                    for (k = 0; k < part.axes.length; k++) {\n                        // render a single axis indicator\n                        c.moveTo(part.position.x, part.position.y);\n                        c.lineTo((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2,\n                                 (part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2);\n                    }\n                }\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'indianred';\n            c.lineWidth = 1;\n        } else {\n            c.strokeStyle = 'rgba(255, 255, 255, 0.4)';\n            c.globalCompositeOperation = 'overlay';\n            c.lineWidth = 2;\n        }\n\n        c.stroke();\n        c.globalCompositeOperation = 'source-over';\n    };\n\n    /**\n     * Draws body positions\n     * @private\n     * @method bodyPositions\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyPositions = function(render, bodies, context) {\n        var c = context,\n            engine = render.engine,\n            options = render.options,\n            body,\n            part,\n            i,\n            k;\n\n        c.beginPath();\n\n        // render current positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            // handle compound parts\n            for (k = 0; k < body.parts.length; k++) {\n                part = body.parts[k];\n                c.arc(part.position.x, part.position.y, 3, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'indianred';\n        } else {\n            c.fillStyle = 'rgba(0,0,0,0.5)';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render previous positions\n        for (i = 0; i < bodies.length; i++) {\n            body = bodies[i];\n            if (body.render.visible) {\n                c.arc(body.positionPrev.x, body.positionPrev.y, 2, 0, 2 * Math.PI, false);\n                c.closePath();\n            }\n        }\n\n        c.fillStyle = 'rgba(255,165,0,0.8)';\n        c.fill();\n    };\n\n    /**\n     * Draws body velocity\n     * @private\n     * @method bodyVelocity\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyVelocity = function(render, bodies, context) {\n        var c = context;\n\n        c.beginPath();\n\n        for (var i = 0; i < bodies.length; i++) {\n            var body = bodies[i];\n\n            if (!body.render.visible)\n                continue;\n\n            c.moveTo(body.position.x, body.position.y);\n            c.lineTo(body.position.x + (body.position.x - body.positionPrev.x) * 2, body.position.y + (body.position.y - body.positionPrev.y) * 2);\n        }\n\n        c.lineWidth = 3;\n        c.strokeStyle = 'cornflowerblue';\n        c.stroke();\n    };\n\n    /**\n     * Draws body ids\n     * @private\n     * @method bodyIds\n     * @param {render} render\n     * @param {body[]} bodies\n     * @param {RenderingContext} context\n     */\n    Render.bodyIds = function(render, bodies, context) {\n        var c = context,\n            i,\n            j;\n\n        for (i = 0; i < bodies.length; i++) {\n            if (!bodies[i].render.visible)\n                continue;\n\n            var parts = bodies[i].parts;\n            for (j = parts.length > 1 ? 1 : 0; j < parts.length; j++) {\n                var part = parts[j];\n                c.font = \"12px Arial\";\n                c.fillStyle = 'rgba(255,255,255,0.5)';\n                c.fillText(part.id, part.position.x + 10, part.position.y - 10);\n            }\n        }\n    };\n\n    /**\n     * Description\n     * @private\n     * @method collisions\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.collisions = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render collision positions\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            for (j = 0; j < pair.activeContacts.length; j++) {\n                var contact = pair.activeContacts[j],\n                    vertex = contact.vertex;\n                c.rect(vertex.x - 1.5, vertex.y - 1.5, 3.5, 3.5);\n            }\n        }\n\n        if (options.wireframes) {\n            c.fillStyle = 'rgba(255,255,255,0.7)';\n        } else {\n            c.fillStyle = 'orange';\n        }\n        c.fill();\n\n        c.beginPath();\n\n        // render collision normals\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n\n            if (pair.activeContacts.length > 0) {\n                var normalPosX = pair.activeContacts[0].vertex.x,\n                    normalPosY = pair.activeContacts[0].vertex.y;\n\n                if (pair.activeContacts.length === 2) {\n                    normalPosX = (pair.activeContacts[0].vertex.x + pair.activeContacts[1].vertex.x) / 2;\n                    normalPosY = (pair.activeContacts[0].vertex.y + pair.activeContacts[1].vertex.y) / 2;\n                }\n\n                if (collision.bodyB === collision.supports[0].body || collision.bodyA.isStatic === true) {\n                    c.moveTo(normalPosX - collision.normal.x * 8, normalPosY - collision.normal.y * 8);\n                } else {\n                    c.moveTo(normalPosX + collision.normal.x * 8, normalPosY + collision.normal.y * 8);\n                }\n\n                c.lineTo(normalPosX, normalPosY);\n            }\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.7)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method separations\n     * @param {render} render\n     * @param {pair[]} pairs\n     * @param {RenderingContext} context\n     */\n    Render.separations = function(render, pairs, context) {\n        var c = context,\n            options = render.options,\n            pair,\n            collision,\n            corrected,\n            bodyA,\n            bodyB,\n            i,\n            j;\n\n        c.beginPath();\n\n        // render separations\n        for (i = 0; i < pairs.length; i++) {\n            pair = pairs[i];\n\n            if (!pair.isActive)\n                continue;\n\n            collision = pair.collision;\n            bodyA = collision.bodyA;\n            bodyB = collision.bodyB;\n\n            var k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyB.isStatic) k = 0;\n\n            c.moveTo(bodyB.position.x, bodyB.position.y);\n            c.lineTo(bodyB.position.x - collision.penetration.x * k, bodyB.position.y - collision.penetration.y * k);\n\n            k = 1;\n\n            if (!bodyB.isStatic && !bodyA.isStatic) k = 0.5;\n            if (bodyA.isStatic) k = 0;\n\n            c.moveTo(bodyA.position.x, bodyA.position.y);\n            c.lineTo(bodyA.position.x + collision.penetration.x * k, bodyA.position.y + collision.penetration.y * k);\n        }\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,165,0,0.5)';\n        } else {\n            c.strokeStyle = 'orange';\n        }\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method grid\n     * @param {render} render\n     * @param {grid} grid\n     * @param {RenderingContext} context\n     */\n    Render.grid = function(render, grid, context) {\n        var c = context,\n            options = render.options;\n\n        if (options.wireframes) {\n            c.strokeStyle = 'rgba(255,180,0,0.1)';\n        } else {\n            c.strokeStyle = 'rgba(255,180,0,0.5)';\n        }\n\n        c.beginPath();\n\n        var bucketKeys = Common.keys(grid.buckets);\n\n        for (var i = 0; i < bucketKeys.length; i++) {\n            var bucketId = bucketKeys[i];\n\n            if (grid.buckets[bucketId].length < 2)\n                continue;\n\n            var region = bucketId.split(/C|R/);\n            c.rect(0.5 + parseInt(region[1], 10) * grid.bucketWidth,\n                    0.5 + parseInt(region[2], 10) * grid.bucketHeight,\n                    grid.bucketWidth,\n                    grid.bucketHeight);\n        }\n\n        c.lineWidth = 1;\n        c.stroke();\n    };\n\n    /**\n     * Description\n     * @private\n     * @method inspector\n     * @param {inspector} inspector\n     * @param {RenderingContext} context\n     */\n    Render.inspector = function(inspector, context) {\n        var engine = inspector.engine,\n            selected = inspector.selected,\n            render = inspector.render,\n            options = render.options,\n            bounds;\n\n        if (options.hasBounds) {\n            var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n                boundsHeight = render.bounds.max.y - render.bounds.min.y,\n                boundsScaleX = boundsWidth / render.options.width,\n                boundsScaleY = boundsHeight / render.options.height;\n\n            context.scale(1 / boundsScaleX, 1 / boundsScaleY);\n            context.translate(-render.bounds.min.x, -render.bounds.min.y);\n        }\n\n        for (var i = 0; i < selected.length; i++) {\n            var item = selected[i].data;\n\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.9)';\n            context.setLineDash([1,2]);\n\n            switch (item.type) {\n\n            case 'body':\n\n                // render body selections\n                bounds = item.bounds;\n                context.beginPath();\n                context.rect(Math.floor(bounds.min.x - 3), Math.floor(bounds.min.y - 3),\n                             Math.floor(bounds.max.x - bounds.min.x + 6), Math.floor(bounds.max.y - bounds.min.y + 6));\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            case 'constraint':\n\n                // render constraint selections\n                var point = item.pointA;\n                if (item.bodyA)\n                    point = item.pointB;\n                context.beginPath();\n                context.arc(point.x, point.y, 10, 0, 2 * Math.PI);\n                context.closePath();\n                context.stroke();\n\n                break;\n\n            }\n\n            context.setLineDash([]);\n            context.translate(-0.5, -0.5);\n        }\n\n        // render selection region\n        if (inspector.selectStart !== null) {\n            context.translate(0.5, 0.5);\n            context.lineWidth = 1;\n            context.strokeStyle = 'rgba(255,165,0,0.6)';\n            context.fillStyle = 'rgba(255,165,0,0.1)';\n            bounds = inspector.selectBounds;\n            context.beginPath();\n            context.rect(Math.floor(bounds.min.x), Math.floor(bounds.min.y),\n                         Math.floor(bounds.max.x - bounds.min.x), Math.floor(bounds.max.y - bounds.min.y));\n            context.closePath();\n            context.stroke();\n            context.fill();\n            context.translate(-0.5, -0.5);\n        }\n\n        if (options.hasBounds)\n            context.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    /**\n     * Description\n     * @method _createCanvas\n     * @private\n     * @param {} width\n     * @param {} height\n     * @return canvas\n     */\n    var _createCanvas = function(width, height) {\n        var canvas = document.createElement('canvas');\n        canvas.width = width;\n        canvas.height = height;\n        canvas.oncontextmenu = function() { return false; };\n        canvas.onselectstart = function() { return false; };\n        return canvas;\n    };\n\n    /**\n     * Gets the pixel ratio of the canvas.\n     * @method _getPixelRatio\n     * @private\n     * @param {HTMLElement} canvas\n     * @return {Number} pixel ratio\n     */\n    var _getPixelRatio = function(canvas) {\n        var context = canvas.getContext('2d'),\n            devicePixelRatio = window.devicePixelRatio || 1,\n            backingStorePixelRatio = context.webkitBackingStorePixelRatio || context.mozBackingStorePixelRatio\n                                      || context.msBackingStorePixelRatio || context.oBackingStorePixelRatio\n                                      || context.backingStorePixelRatio || 1;\n\n        return devicePixelRatio / backingStorePixelRatio;\n    };\n\n    /**\n     * Gets the requested texture (an Image) via its path\n     * @method _getTexture\n     * @private\n     * @param {render} render\n     * @param {string} imagePath\n     * @return {Image} texture\n     */\n    var _getTexture = function(render, imagePath) {\n        var image = render.textures[imagePath];\n\n        if (image)\n            return image;\n\n        image = render.textures[imagePath] = new Image();\n        image.src = imagePath;\n\n        return image;\n    };\n\n    /**\n     * Applies the background to the canvas using CSS.\n     * @method applyBackground\n     * @private\n     * @param {render} render\n     * @param {string} background\n     */\n    var _applyBackground = function(render, background) {\n        var cssBackground = background;\n\n        if (/(jpg|gif|png)$/.test(background))\n            cssBackground = 'url(' + background + ')';\n\n        render.canvas.style.background = cssBackground;\n        render.canvas.style.backgroundSize = \"auto\";\n        render.currentBackground = background;\n    };\n\n    /*\n    *\n    *  Events Documentation\n    *\n    */\n\n    /**\n    * Fired before rendering\n    *\n    * @event beforeRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /**\n    * Fired after rendering\n    *\n    * @event afterRender\n    * @param {} event An event object\n    * @param {number} event.timestamp The engine.timing.timestamp of the event\n    * @param {} event.source The source object of the event\n    * @param {} event.name The name of the event\n    */\n\n    /*\n    *\n    *  Properties Documentation\n    *\n    */\n\n    /**\n     * A back-reference to the `Matter.Render` module.\n     *\n     * @property controller\n     * @type render\n     */\n\n    /**\n     * A reference to the `Matter.Engine` instance to be used.\n     *\n     * @property engine\n     * @type engine\n     */\n\n    /**\n     * A reference to the element where the canvas is to be inserted (if `render.canvas` has not been specified)\n     *\n     * @property element\n     * @type HTMLElement\n     * @default null\n     */\n\n    /**\n     * The canvas element to render to. If not specified, one will be created if `render.element` has been specified.\n     *\n     * @property canvas\n     * @type HTMLCanvasElement\n     * @default null\n     */\n\n    /**\n     * The configuration options of the renderer.\n     *\n     * @property options\n     * @type {}\n     */\n\n    /**\n     * The target width in pixels of the `render.canvas` to be created.\n     *\n     * @property options.width\n     * @type number\n     * @default 800\n     */\n\n    /**\n     * The target height in pixels of the `render.canvas` to be created.\n     *\n     * @property options.height\n     * @type number\n     * @default 600\n     */\n\n    /**\n     * A flag that specifies if `render.bounds` should be used when rendering.\n     *\n     * @property options.hasBounds\n     * @type boolean\n     * @default false\n     */\n\n    /**\n     * A `Bounds` object that specifies the drawing view region.\n     * Rendering will be automatically transformed and scaled to fit within the canvas size (`render.options.width` and `render.options.height`).\n     * This allows for creating views that can pan or zoom around the scene.\n     * You must also set `render.options.hasBounds` to `true` to enable bounded rendering.\n     *\n     * @property bounds\n     * @type bounds\n     */\n\n    /**\n     * The 2d rendering context from the `render.canvas` element.\n     *\n     * @property context\n     * @type CanvasRenderingContext2D\n     */\n\n    /**\n     * The sprite texture cache.\n     *\n     * @property textures\n     * @type {}\n     */\n\n})();\n\n},{\"../body/Composite\":2,\"../collision/Grid\":6,\"../core/Common\":14,\"../core/Events\":16,\"../core/Mouse\":19,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}],32:[function(_dereq_,module,exports){\n/**\n* The `Matter.RenderPixi` module is an example renderer using pixi.js.\n* See also `Matter.Render` for a canvas based renderer.\n*\n* @class RenderPixi\n* @deprecated the Matter.RenderPixi module will soon be removed from the Matter.js core.\n* It will likely be moved to its own repository (but maintenance will be limited).\n*/\n\nvar RenderPixi = {};\n\nmodule.exports = RenderPixi;\n\nvar Bounds = _dereq_('../geometry/Bounds');\nvar Composite = _dereq_('../body/Composite');\nvar Common = _dereq_('../core/Common');\nvar Events = _dereq_('../core/Events');\nvar Vector = _dereq_('../geometry/Vector');\n\n(function() {\n\n    var _requestAnimationFrame,\n        _cancelAnimationFrame;\n\n    if (typeof window !== 'undefined') {\n        _requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame\n                                      || window.mozRequestAnimationFrame || window.msRequestAnimationFrame \n                                      || function(callback){ window.setTimeout(function() { callback(Common.now()); }, 1000 / 60); };\n   \n        _cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame \n                                      || window.webkitCancelAnimationFrame || window.msCancelAnimationFrame;\n    }\n    \n    /**\n     * Creates a new Pixi.js WebGL renderer\n     * @method create\n     * @param {object} options\n     * @return {RenderPixi} A new renderer\n     * @deprecated\n     */\n    RenderPixi.create = function(options) {\n        Common.warn('RenderPixi.create: Matter.RenderPixi is deprecated (see docs)');\n\n        var defaults = {\n            controller: RenderPixi,\n            engine: null,\n            element: null,\n            frameRequestId: null,\n            canvas: null,\n            renderer: null,\n            container: null,\n            spriteContainer: null,\n            pixiOptions: null,\n            options: {\n                width: 800,\n                height: 600,\n                background: '#fafafa',\n                wireframeBackground: '#222',\n                hasBounds: false,\n                enabled: true,\n                wireframes: true,\n                showSleeping: true,\n                showDebug: false,\n                showBroadphase: false,\n                showBounds: false,\n                showVelocity: false,\n                showCollisions: false,\n                showAxes: false,\n                showPositions: false,\n                showAngleIndicator: false,\n                showIds: false,\n                showShadows: false\n            }\n        };\n\n        var render = Common.extend(defaults, options),\n            transparent = !render.options.wireframes && render.options.background === 'transparent';\n\n        // init pixi\n        render.pixiOptions = render.pixiOptions || {\n            view: render.canvas,\n            transparent: transparent,\n            antialias: true,\n            backgroundColor: options.background\n        };\n\n        render.mouse = options.mouse;\n        render.engine = options.engine;\n        render.renderer = render.renderer || new PIXI.WebGLRenderer(render.options.width, render.options.height, render.pixiOptions);\n        render.container = render.container || new PIXI.Container();\n        render.spriteContainer = render.spriteContainer || new PIXI.Container();\n        render.canvas = render.canvas || render.renderer.view;\n        render.bounds = render.bounds || { \n            min: {\n                x: 0,\n                y: 0\n            }, \n            max: { \n                x: render.options.width,\n                y: render.options.height\n            }\n        };\n\n        // event listeners\n        Events.on(render.engine, 'beforeUpdate', function() {\n            RenderPixi.clear(render);\n        });\n\n        // caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // use a sprite batch for performance\n        render.container.addChild(render.spriteContainer);\n\n        // insert canvas\n        if (Common.isElement(render.element)) {\n            render.element.appendChild(render.canvas);\n        } else {\n            Common.warn('No \"render.element\" passed, \"render.canvas\" was not inserted into document.');\n        }\n\n        // prevent menus on canvas\n        render.canvas.oncontextmenu = function() { return false; };\n        render.canvas.onselectstart = function() { return false; };\n\n        return render;\n    };\n\n    /**\n     * Continuously updates the render canvas on the `requestAnimationFrame` event.\n     * @method run\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.run = function(render) {\n        (function loop(time){\n            render.frameRequestId = _requestAnimationFrame(loop);\n            RenderPixi.world(render);\n        })();\n    };\n\n    /**\n     * Ends execution of `Render.run` on the given `render`, by canceling the animation frame request event loop.\n     * @method stop\n     * @param {render} render\n     * @deprecated\n     */\n    RenderPixi.stop = function(render) {\n        _cancelAnimationFrame(render.frameRequestId);\n    };\n\n    /**\n     * Clears the scene graph\n     * @method clear\n     * @param {RenderPixi} render\n     * @deprecated\n     */\n    RenderPixi.clear = function(render) {\n        var container = render.container,\n            spriteContainer = render.spriteContainer;\n\n        // clear stage container\n        while (container.children[0]) { \n            container.removeChild(container.children[0]); \n        }\n\n        // clear sprite batch\n        while (spriteContainer.children[0]) { \n            spriteContainer.removeChild(spriteContainer.children[0]); \n        }\n\n        var bgSprite = render.sprites['bg-0'];\n\n        // clear caches\n        render.textures = {};\n        render.sprites = {};\n        render.primitives = {};\n\n        // set background sprite\n        render.sprites['bg-0'] = bgSprite;\n        if (bgSprite)\n            container.addChildAt(bgSprite, 0);\n\n        // add sprite batch back into container\n        render.container.addChild(render.spriteContainer);\n\n        // reset background state\n        render.currentBackground = null;\n\n        // reset bounds transforms\n        container.scale.set(1, 1);\n        container.position.set(0, 0);\n    };\n\n    /**\n     * Sets the background of the canvas \n     * @method setBackground\n     * @param {RenderPixi} render\n     * @param {string} background\n     * @deprecated\n     */\n    RenderPixi.setBackground = function(render, background) {\n        if (render.currentBackground !== background) {\n            var isColor = background.indexOf && background.indexOf('#') !== -1,\n                bgSprite = render.sprites['bg-0'];\n\n            if (isColor) {\n                // if solid background color\n                var color = Common.colorToNumber(background);\n                render.renderer.backgroundColor = color;\n\n                // remove background sprite if existing\n                if (bgSprite)\n                    render.container.removeChild(bgSprite); \n            } else {\n                // initialise background sprite if needed\n                if (!bgSprite) {\n                    var texture = _getTexture(render, background);\n\n                    bgSprite = render.sprites['bg-0'] = new PIXI.Sprite(texture);\n                    bgSprite.position.x = 0;\n                    bgSprite.position.y = 0;\n                    render.container.addChildAt(bgSprite, 0);\n                }\n            }\n\n            render.currentBackground = background;\n        }\n    };\n\n    /**\n     * Description\n     * @method world\n     * @param {engine} engine\n     * @deprecated\n     */\n    RenderPixi.world = function(render) {\n        var engine = render.engine,\n            world = engine.world,\n            renderer = render.renderer,\n            container = render.container,\n            options = render.options,\n            bodies = Composite.allBodies(world),\n            allConstraints = Composite.allConstraints(world),\n            constraints = [],\n            i;\n\n        if (options.wireframes) {\n            RenderPixi.setBackground(render, options.wireframeBackground);\n        } else {\n            RenderPixi.setBackground(render, options.background);\n        }\n\n        // handle bounds\n        var boundsWidth = render.bounds.max.x - render.bounds.min.x,\n            boundsHeight = render.bounds.max.y - render.bounds.min.y,\n            boundsScaleX = boundsWidth / render.options.width,\n            boundsScaleY = boundsHeight / render.options.height;\n\n        if (options.hasBounds) {\n            // Hide bodies that are not in view\n            for (i = 0; i < bodies.length; i++) {\n                var body = bodies[i];\n                body.render.sprite.visible = Bounds.overlaps(body.bounds, render.bounds);\n            }\n\n            // filter out constraints that are not in view\n            for (i = 0; i < allConstraints.length; i++) {\n                var constraint = allConstraints[i],\n                    bodyA = constraint.bodyA,\n                    bodyB = constraint.bodyB,\n                    pointAWorld = constraint.pointA,\n                    pointBWorld = constraint.pointB;\n\n                if (bodyA) pointAWorld = Vector.add(bodyA.position, constraint.pointA);\n                if (bodyB) pointBWorld = Vector.add(bodyB.position, constraint.pointB);\n\n                if (!pointAWorld || !pointBWorld)\n                    continue;\n\n                if (Bounds.contains(render.bounds, pointAWorld) || Bounds.contains(render.bounds, pointBWorld))\n                    constraints.push(constraint);\n            }\n\n            // transform the view\n            container.scale.set(1 / boundsScaleX, 1 / boundsScaleY);\n            container.position.set(-render.bounds.min.x * (1 / boundsScaleX), -render.bounds.min.y * (1 / boundsScaleY));\n        } else {\n            constraints = allConstraints;\n        }\n\n        for (i = 0; i < bodies.length; i++)\n            RenderPixi.body(render, bodies[i]);\n\n        for (i = 0; i < constraints.length; i++)\n            RenderPixi.constraint(render, constraints[i]);\n\n        renderer.render(container);\n    };\n\n\n    /**\n     * Description\n     * @method constraint\n     * @param {engine} engine\n     * @param {constraint} constraint\n     * @deprecated\n     */\n    RenderPixi.constraint = function(render, constraint) {\n        var engine = render.engine,\n            bodyA = constraint.bodyA,\n            bodyB = constraint.bodyB,\n            pointA = constraint.pointA,\n            pointB = constraint.pointB,\n            container = render.container,\n            constraintRender = constraint.render,\n            primitiveId = 'c-' + constraint.id,\n            primitive = render.primitives[primitiveId];\n\n        // initialise constraint primitive if not existing\n        if (!primitive)\n            primitive = render.primitives[primitiveId] = new PIXI.Graphics();\n\n        // don't render if constraint does not have two end points\n        if (!constraintRender.visible || !constraint.pointA || !constraint.pointB) {\n            primitive.clear();\n            return;\n        }\n\n        // add to scene graph if not already there\n        if (Common.indexOf(container.children, primitive) === -1)\n            container.addChild(primitive);\n\n        // render the constraint on every update, since they can change dynamically\n        primitive.clear();\n        primitive.beginFill(0, 0);\n        primitive.lineStyle(constraintRender.lineWidth, Common.colorToNumber(constraintRender.strokeStyle), 1);\n        \n        if (bodyA) {\n            primitive.moveTo(bodyA.position.x + pointA.x, bodyA.position.y + pointA.y);\n        } else {\n            primitive.moveTo(pointA.x, pointA.y);\n        }\n\n        if (bodyB) {\n            primitive.lineTo(bodyB.position.x + pointB.x, bodyB.position.y + pointB.y);\n        } else {\n            primitive.lineTo(pointB.x, pointB.y);\n        }\n\n        primitive.endFill();\n    };\n    \n    /**\n     * Description\n     * @method body\n     * @param {engine} engine\n     * @param {body} body\n     * @deprecated\n     */\n    RenderPixi.body = function(render, body) {\n        var engine = render.engine,\n            bodyRender = body.render;\n\n        if (!bodyRender.visible)\n            return;\n\n        if (bodyRender.sprite && bodyRender.sprite.texture) {\n            var spriteId = 'b-' + body.id,\n                sprite = render.sprites[spriteId],\n                spriteContainer = render.spriteContainer;\n\n            // initialise body sprite if not existing\n            if (!sprite)\n                sprite = render.sprites[spriteId] = _createBodySprite(render, body);\n\n            // add to scene graph if not already there\n            if (Common.indexOf(spriteContainer.children, sprite) === -1)\n                spriteContainer.addChild(sprite);\n\n            // update body sprite\n            sprite.position.x = body.position.x;\n            sprite.position.y = body.position.y;\n            sprite.rotation = body.angle;\n            sprite.scale.x = bodyRender.sprite.xScale || 1;\n            sprite.scale.y = bodyRender.sprite.yScale || 1;\n        } else {\n            var primitiveId = 'b-' + body.id,\n                primitive = render.primitives[primitiveId],\n                container = render.container;\n\n            // initialise body primitive if not existing\n            if (!primitive) {\n                primitive = render.primitives[primitiveId] = _createBodyPrimitive(render, body);\n                primitive.initialAngle = body.angle;\n            }\n\n            // add to scene graph if not already there\n            if (Common.indexOf(container.children, primitive) === -1)\n                container.addChild(primitive);\n\n            // update body primitive\n            primitive.position.x = body.position.x;\n            primitive.position.y = body.position.y;\n            primitive.rotation = body.angle - primitive.initialAngle;\n        }\n    };\n\n    /**\n     * Creates a body sprite\n     * @method _createBodySprite\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Sprite} sprite\n     * @deprecated\n     */\n    var _createBodySprite = function(render, body) {\n        var bodyRender = body.render,\n            texturePath = bodyRender.sprite.texture,\n            texture = _getTexture(render, texturePath),\n            sprite = new PIXI.Sprite(texture);\n\n        sprite.anchor.x = body.render.sprite.xOffset;\n        sprite.anchor.y = body.render.sprite.yOffset;\n\n        return sprite;\n    };\n\n    /**\n     * Creates a body primitive\n     * @method _createBodyPrimitive\n     * @private\n     * @param {RenderPixi} render\n     * @param {body} body\n     * @return {PIXI.Graphics} graphics\n     * @deprecated\n     */\n    var _createBodyPrimitive = function(render, body) {\n        var bodyRender = body.render,\n            options = render.options,\n            primitive = new PIXI.Graphics(),\n            fillStyle = Common.colorToNumber(bodyRender.fillStyle),\n            strokeStyle = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleIndicator = Common.colorToNumber(bodyRender.strokeStyle),\n            strokeStyleWireframe = Common.colorToNumber('#bbb'),\n            strokeStyleWireframeIndicator = Common.colorToNumber('#CD5C5C'),\n            part;\n\n        primitive.clear();\n\n        // handle compound parts\n        for (var k = body.parts.length > 1 ? 1 : 0; k < body.parts.length; k++) {\n            part = body.parts[k];\n\n            if (!options.wireframes) {\n                primitive.beginFill(fillStyle, 1);\n                primitive.lineStyle(bodyRender.lineWidth, strokeStyle, 1);\n            } else {\n                primitive.beginFill(0, 0);\n                primitive.lineStyle(1, strokeStyleWireframe, 1);\n            }\n\n            primitive.moveTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            for (var j = 1; j < part.vertices.length; j++) {\n                primitive.lineTo(part.vertices[j].x - body.position.x, part.vertices[j].y - body.position.y);\n            }\n\n            primitive.lineTo(part.vertices[0].x - body.position.x, part.vertices[0].y - body.position.y);\n\n            primitive.endFill();\n\n            // angle indicator\n            if (options.showAngleIndicator || options.showAxes) {\n                primitive.beginFill(0, 0);\n\n                if (options.wireframes) {\n                    primitive.lineStyle(1, strokeStyleWireframeIndicator, 1);\n                } else {\n                    primitive.lineStyle(1, strokeStyleIndicator);\n                }\n\n                primitive.moveTo(part.position.x - body.position.x, part.position.y - body.position.y);\n                primitive.lineTo(((part.vertices[0].x + part.vertices[part.vertices.length-1].x) / 2 - body.position.x), \n                                 ((part.vertices[0].y + part.vertices[part.vertices.length-1].y) / 2 - body.position.y));\n\n                primitive.endFill();\n            }\n        }\n\n        return primitive;\n    };\n\n    /**\n     * Gets the requested texture (a PIXI.Texture) via its path\n     * @method _getTexture\n     * @private\n     * @param {RenderPixi} render\n     * @param {string} imagePath\n     * @return {PIXI.Texture} texture\n     * @deprecated\n     */\n    var _getTexture = function(render, imagePath) {\n        var texture = render.textures[imagePath];\n\n        if (!texture)\n            texture = render.textures[imagePath] = PIXI.Texture.fromImage(imagePath);\n\n        return texture;\n    };\n\n})();\n\n},{\"../body/Composite\":2,\"../core/Common\":14,\"../core/Events\":16,\"../geometry/Bounds\":26,\"../geometry/Vector\":28}]},{},[30])(30)\n});\n","export const Resources = [\n    ['background', 'res/background.png'],\n    ['startButton', 'res/startbutton.png'],\n    ['bgm', 'res/xuemaojiao.mp3'],\n    ['launch', 'res/launch.mp3']\n]","//资源文件加载器，确保在图片资源加载完成后才渲染\nimport { Resources } from './Resource.js'\n\nexport class ResourceLoader {\n  constructor() {\n    this.imageCount = 0\n    this.audioCount = 0\n    //导入资源\n    this.map = new Map(Resources)\n    for (let [key, src] of this.map) {\n      let res = null\n      if (src.split('.')[1] == 'png' || src.split('.')[1] == 'jpg') {\n        this.imageCount++\n        // H5创建image的API\n        res = new Image()\n        // 微信创建image的API\n        // res = wx.createImage()\n        res.src = src\n      } else {\n        this.audioCount++\n        // H5创建audio的API\n        res = new Audio()\n        // 微信创建audio的API\n        // res = wx.createInnerAudioContext()\n        res.src = src\n      }\n      this.map.set(key, res)\n    }\n  }\n\n  // 加载完成回调\n  onload(cb) {\n    let loadCount = 0\n    for (let res of this.map.values()) {\n      // 使this指向当前的ResourceLoader\n      res.onload = () => {\n        loadCount++\n        if (loadCount >= this.imageCount) {\n          cb(this.map)\n        }\n      }\n    }\n  }\n}","// 数据管理\nexport class DataStore {\n  // 单例\n  static getInstance() {\n    if (!DataStore.instance) {\n      DataStore.instance = new DataStore()\n    }\n    return DataStore.instance\n  }\n  // 构造存储容器\n  constructor() {\n    this.map = new Map()\n    this.res = null         // 游戏资源\n    this.isGameOver = false // 游戏进度标识\n    this.scoreCount = 0     // 游戏分数\n  }\n  // 存入\n  put(key, value) {\n    // 如果传入的参数是函数，则new function\n    if (typeof value === 'function') {\n      value = new value()\n    }\n    this.map.set(key, value)\n    // 可链式使用\n    return this\n  }\n  // 取出\n  get(key) {\n    return this.map.get(key)\n  }\n  //销毁\n  destroy() {\n    for (let value of this.map.values()) {\n      value = null\n    }\n  }\n}","import { DataStore } from './DataStore.js'\nexport class Sprite {\n  constructor(ctx, img, x = 0, y = 0, w = 0, h = 0, srcX = 0, srcY = 0, srcW = 0, srcH = 0, ) {\n    this.ctx = ctx\n    this.img = img\n    this.srcX = srcX\n    this.srcY = srcY\n    this.srcW = srcW\n    this.srcH = srcH\n    this.x = x\n    this.y = y\n    this.w = w\n    this.h = h\n  }\n\n  /**\n   * 绘制图片\n   * img 传入Image对象\n   * srcX 要剪裁的起始X坐标\n   * srcY 要剪裁的起始Y坐标\n   * srcW 剪裁的宽度\n   * srcH 剪裁的高度\n   * x 放置的x坐标\n   * y 放置的y坐标\n   * w 要使用的宽度\n   * h 要使用的高度\n   */\n  draw(img = this.img,\n    x = this.x, y = this.y, w = this.w, h = this.h,\n    srcX = this.srcX, srcY = this.srcY, srcW = this.srcW, srcH = this.srcH) {\n    this.ctx.drawImage(img, srcX, srcY, srcW, srcH, x, y, w, h)\n  }\n\n  static getImage(key) {\n    return DataStore.getInstance().res.get(key)\n  }\n}","import { Sprite } from '../base/Sprite.js'\n/**\n * 背景类\n */\nexport class BackGround extends Sprite {\n  constructor(physics) {\n    const image = Sprite.getImage('background')\n    super(\n      physics.ctx, image,\n      (physics.canvas.width - image.width) / 2,\n      (physics.canvas.height - image.height) / 2.5,\n      image.width, image.height,\n      0,\n      0,\n      image.width, image.height\n    )\n  }\n}","import { Sprite } from '../base/Sprite.js'\n/**\n * 开始按钮类\n */\nexport class StartButton extends Sprite {\n  constructor(physics) {\n    const image = Sprite.getImage('startButton')\n    super(\n      physics.ctx, image,\n      (physics.canvas.width - image.width) / 2,\n      (physics.canvas.height - image.height) / 2.5,\n      image.width, image.height,\n      0,\n      0,\n      image.width, image.height\n    )\n  }\n}","import { DataStore } from '../base/DataStore.js'\n/**\n * 计分器类\n */\nexport class Score {\n  constructor(physics) {\n    this.ctx = physics.ctx\n    // 数据管理\n    this.dataStore = DataStore.getInstance()\n    this.dataStore.scoreCount = 0\n  }\n\n  // 绘制\n  draw() {\n    this.ctx.font = '25px Arial'\n    this.ctx.fillStyle = '#464444'\n    this.ctx.fillText(`分数 ${this.dataStore.scoreCount}`, 50, 20)\n  }\n  // 加分\n  static increase() {\n    DataStore.getInstance().scoreCount += 1\n  }\n}","// 物体基类\nexport class Body {\n  constructor(physics) {\n    this.physics = physics\n  }\n}","import { Body } from '../base/Body.js'\nimport { Score } from '../sprite/Score.js'\nimport { DataStore } from '../base/DataStore.js'\n/**\n * 方块\n */\nexport class Block extends Body {\n  constructor(physics) {\n    super(physics)\n    this.blockCount = 5\n    this.blockMap = {}\n    this.blockHPMax = 10\n    this.dataStore = DataStore.getInstance()\n  }\n\n  draw() {\n    let physics = this.physics\n    let lastBlockPositionX = 15\n    let lastBlockPositionY = 20\n    let blockArr = []\n    // 生成随机数量方块\n    for (let i = 0; i < this.blockCount; i++) {\n      let hp = Math.floor(Math.random() * this.blockHPMax) + 1\n      const block = physics.Matter.Bodies.rectangle(\n        lastBlockPositionX + Math.floor(Math.random() * 20) + 15,\n        physics.canvas.height - lastBlockPositionY - Math.floor(Math.random() * 50),\n        30, 30, {\n          isStatic: true,\n          render: {\n            visible: true,\n            text: {\n              content: hp,\n              color: \"white\",\n              size: 16,\n              family: \"Arial\",\n            }\n            // sprite: {\n            //   texture: 'res/ball.png',\n            //   xScale: 0.1,\n            //   yScale: 0.1\n            // }\n          },\n        })\n      block.hp = hp\n      lastBlockPositionX += 50\n      blockArr.push(block)\n      this.blockMap[block.id] = block\n    }\n    // 将方块集合添加进入世界\n    physics.Matter.World.add(physics.engine.world, blockArr)\n    return this\n  }\n\n  // 方块被碰撞\n  event() {\n    let physics = this.physics\n    // 方块被碰撞时事件\n    physics.Matter.Events.on(physics.engine, 'collisionStart', (event) => {\n      var pairs = event.pairs\n      for (let pair of pairs) {\n        // 被碰撞的方块生命减到0时，销毁\n        if (this.blockMap[pair.bodyA.id]) {\n          this.blockMap[pair.bodyA.id].hp--\n          // 恢复重力\n          this.physics.engine.world.gravity.y = 1\n          Score.increase()\n          pair.bodyA.render.text.content = this.blockMap[pair.bodyA.id].hp\n          if (this.blockMap[pair.bodyA.id].hp <= 0) {\n            physics.Matter.World.remove(physics.engine.world, this.blockMap[pair.bodyA.id])\n            delete this.blockMap[pair.bodyA.id]\n            // 所有方块打完判断游戏结束\n            // if (Object.keys(this.blockMap).length == 0) {\n            //   this.dataStore.isGameOver = true\n            // }\n          }\n        }\n        // pair.bodyB.render.fillStyle = '#333'\n      }\n    })\n    return this\n  }\n\n  // 方块向上移动\n  upMove() {\n    let physics = this.physics\n    let i = 0\n    physics.Matter.Events.on(physics.engine, 'beforeUpdate', (event) => {\n      for (let id in this.blockMap) {\n        // body is static so must manually update velocity for friction to work\n        // physics.Body.setVelocity(body, { x: px - this.blockMap[id].position.x, y: 0 })\n        physics.Matter.Body.setPosition(this.blockMap[id], { x: this.blockMap[id].position.x, y: this.blockMap[id].position.y - 0.2 })\n        if (this.blockMap[id].position.y < 30) {\n          this.dataStore.isGameOver = true\n          this.blockMap = {}\n          physics.Matter.Events.off(physics.engine, 'beforeUpdate')\n          break\n        }\n      }\n      // 绘制新一行方块，且方块生命值上条\n      if (i > 0 && i % 1000 == 0) {\n        this.blockHPMax += 10\n        this.draw()\n      }\n      i++\n    })\n  }\n}","// 边界\nimport { Body } from '../base/Body.js'\n\nexport class Border extends Body {\n  constructor(physics) {\n    super(physics)\n  }\n\n  draw() {\n    const physics = this.physics\n    let bottomHeight = 10\n    let leftWidth = 10\n    const borderBottom = physics.Matter.Bodies.rectangle(\n      physics.canvas.width / 2, physics.canvas.height - bottomHeight / 2,\n      physics.canvas.width - leftWidth * 2, bottomHeight, {\n        isStatic: true,\n        render: {\n          visible: true\n        }\n      })\n    const borderLeft = physics.Matter.Bodies.rectangle(\n      leftWidth / 2, physics.canvas.height / 2,\n      leftWidth, physics.canvas.height, {\n        isStatic: true,\n        render: {\n          visible: true\n        }\n      })\n    const borderRight = physics.Matter.Bodies.rectangle(\n      physics.canvas.width - leftWidth / 2, physics.canvas.height / 2,\n      leftWidth, physics.canvas.height, {\n        isStatic: true,\n        render: {\n          visible: true\n        }\n      })\n    physics.Matter.World.add(physics.engine.world, [borderBottom, borderLeft, borderRight])\n  }\n\n}","import { Body } from '../base/Body.js'\n\n/**\n * 桥梁\n */\nexport class Bridge extends Body {\n  constructor(physics) {\n    super(physics)\n  }\n\n  draw() {\n    const physics = this.physics\n    // add bodies\n    var group = physics.Matter.Body.nextGroup(true);\n    // 桥梁主体\n    var bridge = physics.Matter.Composites.stack(160, 290, 12, 1, 0, 0, function (x, y) {\n      return physics.Matter.Bodies.rectangle(x - 20, y, 53, 20, {\n        collisionFilter: { group: group },\n        chamfer: 5,\n        density: 0.005,\n        frictionAir: 0.05,\n        render: {\n          fillStyle: '#575375'\n        }\n      });\n    });\n\n    physics.Matter.Composites.chain(bridge, 0.3, 0, -0.3, 0, {\n      stiffness: 1,\n      length: 0,\n      render: {\n        visible: false\n      }\n    });\n\n    // var stack = physics.Matter.Composites.stack(250, 50, 6, 3, 0, 0, function (x, y) {\n    //   return physics.Matter.Bodies.rectangle(x, y, 50, 50, physics.Matter.Common.random(20, 40));\n    // });\n\n    physics.Matter.World.add(physics.engine.world, [\n      bridge,\n      // stack,\n      // physics.Matter.Bodies.rectangle(30, 490, 220, 380, {\n      //   isStatic: true,\n      //   chamfer: { radius: 20 }\n      // }),\n      // physics.Matter.Bodies.rectangle(770, 490, 220, 380, {\n      //   isStatic: true,\n      //   chamfer: { radius: 20 }\n      // }),\n      physics.Matter.Constraint.create({\n        pointA: { x: 0, y: 400 },\n        bodyB: bridge.bodies[0],\n        pointB: { x: -25, y: 0 },\n        length: 2,\n        stiffness: 0.9\n      }),\n      physics.Matter.Constraint.create({\n        pointA: { x: this.physics.canvas.width, y: 400 },\n        bodyB: bridge.bodies[bridge.bodies.length - 1],\n        pointB: { x: 25, y: 0 },\n        length: 2,\n        stiffness: 0.9\n      })\n    ]);\n  }\n}","// 瞄准类\nimport { Body } from '../base/Body.js'\nimport { DataStore } from '../base/DataStore.js'\n\nexport class Aim extends Body {\n  constructor(physics) {\n    super(physics)\n    this.dataStore = DataStore.getInstance()\n\n    this.ballRadius = 10\n    this.baseBallX = this.physics.canvas.width / 2\n    this.baseBallY = this.ballRadius * 2\n\n    this.x = physics.canvas.width / 2\n    this.y = physics.canvas.height / 2\n    this.balls = []\n    this.ballAppends = []\n    this.ballCount = 7\n    this.ballAppendCount = 20\n    this.isRending = false\n    this.isForce = false\n    this.inervalMax = 100\n  }\n\n  // 覆写绘制\n  draw() {\n    // if (this.isRending) {\n    //   return\n    // }\n    // 清空场景\n    this.physics.Matter.World.remove(this.physics.engine.world, this.balls)\n    this.balls = []\n    this.physics.Matter.World.remove(this.physics.engine.world, this.ballAppends)\n    this.ballAppends = []\n    // 重绘弹球\n    this.drawBall()\n    // 重绘制瞄准\n    this.drawAim()\n    return this\n  }\n\n  // 绘制瞄准\n  drawAim() {\n    if (this.isRending) {\n      return\n    }\n    for (let i = 0; i < this.ballCount; i++) {\n      const ball = this.physics.Matter.Bodies.circle(\n        this.baseBallX + (this.x - this.baseBallX) * i / (this.ballCount - 1),\n        this.baseBallY + (this.y - this.baseBallY) * i / (this.ballCount - 1),\n        this.ballRadius, {\n          isStatic: true,\n          density: 0.04,\n          friction: 0.01,\n          frictionAir: 0.00001,\n          restitution: 0.9,\n          render: {\n            visible: true,\n            fillStyle: '#F35e66',\n            strokeStyle: 'black'\n          }\n        })\n      this.balls.push(ball)\n    }\n    this.physics.Matter.World.add(this.physics.engine.world, this.balls)\n  }\n\n  drawBall() {\n    if (!this.isForce) {\n      return\n    }\n    // 设定正在绘制弹球\n    this.isRending = true\n    this.ballAppends = []\n    this.intervalCount = 0\n    // 定时弹出球，且设定定时结束条件\n    const interval = setInterval(() => {\n      // 绘制弹球\n      if (this.ballAppends.length < this.ballAppendCount) {\n        const ballAppend = this.physics.Matter.Bodies.circle(\n          this.baseBallX,\n          this.baseBallY,\n          this.ballRadius, {\n            isStatic: false,\n            density: 0.04,\n            friction: 0.01,\n            frictionAir: 0.00001,\n            restitution: 0.9,\n            render: {\n              visible: true,\n              fillStyle: '#F35e66',\n              strokeStyle: 'black'\n            }\n          })\n        ballAppend.isBall = true\n        this.physics.Matter.World.add(this.physics.engine.world, ballAppend)\n        const speed = {\n          x: (this.x - this.baseBallX) / (this.y - this.baseBallY),\n          y: 1\n        }\n        // 修正速度，确保从各个角度射出小球的速度差不多，原理是根据勾股定理计算出每个小球的斜边，以全屏斜边作为比对\n        const fixRate = Math.sqrt(Math.pow(speed.x, 2) + Math.pow(speed.y, 2)) / Math.sqrt(Math.pow(this.physics.canvas.width, 2) + Math.pow(this.physics.canvas.height, 2)) * 1000\n        // 给小球赋予推力\n        this.physics.Matter.Body.applyForce(ballAppend, ballAppend.position, {\n          x: speed.x / fixRate * 0.7,\n          y: speed.y / fixRate * 0.7\n        })\n        this.ballAppends.push(ballAppend)\n      }\n      // 超过60%的球休眠则可以重新发射\n      let bodies = this.physics.Matter.Composite.allBodies(this.physics.engine.world)\n      let sleeping = bodies.filter((body) => body.isSleeping && body.isBall)\n      // let isWorldSleeping = bodies.length === sleeping.length\n      let isWorldSleeping = sleeping.length / this.ballAppends.length > 0.6 || this.intervalCount > this.inervalMax\n      if (isWorldSleeping) {\n        this.isRending = false\n        this.isForce = false\n        this.draw()\n        clearInterval(interval)\n      }\n      this.intervalCount++\n    }, 100)\n  }\n\n  // 事件触发\n  event() {\n    let physics = this.physics\n    // 移动设备触摸事件\n    physics.canvas.addEventListener('touchmove', e => {\n      this.eventHandler(e, { isForce: false })\n    })\n    physics.canvas.addEventListener('touchstart', e => {\n      this.eventHandler(e, { isForce: false })\n    })\n    physics.canvas.addEventListener('touchend', e => {\n      this.eventHandler(e, { isForce: true })\n    })\n    // PC设备鼠标事件\n    physics.canvas.addEventListener('mousemove', e => {\n      this.eventHandler(e, { isForce: false })\n    })\n    physics.canvas.addEventListener('mousedown', e => {\n      this.eventHandler(e, { isForce: false })\n    })\n    physics.canvas.addEventListener('mouseup', e => {\n      this.eventHandler(e, { isForce: true })\n    })\n    return this\n  }\n\n  // 事件处理\n  eventHandler(e, options) {\n    e.preventDefault()\n    this.isForce = options.isForce\n    // 刚触发弹射\n    if (this.isForce && !this.isRending) {\n      // 弹射一瞬间关闭重力\n      this.physics.engine.world.gravity.y = 0\n      this.dataStore.res.get('launch').play()\n    }\n    // 非弹射静止\n    if (!this.isForce && !this.isRending) {\n      // 移动设备触摸事件\n      if (e.touches) {\n        this.x = e.touches[0].clientX\n        this.y = Math.max(50, e.touches[0].clientY)\n      }\n      // PC设备鼠标事件\n      else {\n        this.x = e.offsetX\n        this.y = Math.max(50, e.offsetY)\n      }\n    }\n    // 非动态渲染\n    if (!this.isRending) {\n      this.draw()\n    }\n  }\n}","// 精灵对象\nimport { BackGround } from './sprite/BackGround.js'\nimport { StartButton } from './sprite/StartButton.js'\nimport { Score } from './sprite/Score.js'\n// 物理引擎绘制对象\nimport { Block } from './body/Block.js'\nimport { Border } from './body/Border.js'\nimport { Bridge } from './body/Bridge.js'\nimport { Aim } from './body/Aim.js'\n// 数据管理\nimport { DataStore } from './base/DataStore.js'\n\n/**\n * 导演类，控制游戏的逻辑\n */\nexport class Director {\n  constructor(physics) {\n    this.physics = physics\n    this.dataStore = DataStore.getInstance()\n  }\n  // 加载精灵对象\n  spriteLoad() {\n    this.sprite = new Map()\n    this.sprite['score'] = new Score(this.physics)\n    this.sprite['startButton'] = new StartButton(this.physics)\n    this.sprite['background'] = new BackGround(this.physics)\n  }\n  // 逐帧绘制\n  spriteDirect(isReload) {\n    if(isReload){\n      this.dataStore.scoreCount = 0\n    }\n    // 绘制前先判断是否碰撞\n    // this.check()\n    // 游戏未结束\n    if (!this.dataStore.isGameOver) {\n      // 绘制游戏内容\n      this.sprite['score'].draw()\n      // this.sprite['background'].draw()\n      // 自适应浏览器的帧率,提高性能\n      this.animationHandle = requestAnimationFrame(() => this.spriteDirect())\n    }\n    //  游戏结束\n    else {\n      // 停止物理引擎\n      this.physics.Matter.Engine.clear(this.physics.engine)\n      this.physics.Matter.World.clear(this.physics.engine.world)\n      this.physics.Matter.Render.stop(this.physics.render)\n      // 停止绘制\n      cancelAnimationFrame(this.animationHandle)\n      // 结束界面\n      this.sprite['score'].draw()\n      this.sprite['startButton'].draw()\n    }\n  }\n  // 物理绘制\n  physicsDirect(isReload) {\n    this.physics.Matter.Render.run(this.physics.render)\n    if (!isReload) {\n      new Aim(this.physics).draw().event()\n      // new Bridge(this.physics).draw()\n    }\n    new Block(this.physics).draw().event().upMove()\n    new Border(this.physics).draw()\n  }\n}","import { ResourceLoader } from './src/base/ResourceLoader.js'\nimport { DataStore } from './src/base/DataStore.js'\nimport { Director } from './src/Director.js'\n\n/**\n * 游戏入口\n */\nexport class App {\n  constructor(canvas, options) {\n    this.canvas = canvas                                             // 画布\n    this.physics = { ...options, ctx: this.canvas.getContext('2d') } // 物理引擎\n    this.director = new Director(this.physics)                       // 导演\n    this.dataStore = DataStore.getInstance()\n    // 资源加载\n    new ResourceLoader().onload(res => {\n      // 持久化资源\n      this.dataStore.res = res\n      // 加载精灵\n      this.director.spriteLoad(res)\n      // 运行游戏\n      this.run()\n    })\n  }\n\n  /**\n   * 运行游戏\n   */\n  run() {\n    // 注册事件\n    this.registerEvent()\n    // 物理渲染\n    this.director.physicsDirect()\n    // 精灵渲染\n    this.director.spriteDirect()\n    // 音乐播放\n    this.dataStore.res.get('bgm').autoplay = true\n  }\n\n  /**\n   * 重新加载游戏\n   */\n  reload() {\n    // 物理渲染\n    this.director.physicsDirect(true)\n    // 精灵渲染\n    this.director.spriteDirect(true)\n  }\n\n  /**\n   * 注册事件\n   */\n  registerEvent() {\n    // 使用=>使this指向Main类\n    this.canvas.addEventListener('touchstart', e => {\n      // 屏蔽事件冒泡\n      e.preventDefault()\n      // 如果游戏是结束状态，则重新开始\n      if (this.dataStore.isGameOver) {\n        // 重新初始化\n        this.dataStore.isGameOver = false\n        this.reload()\n      }\n    })\n  }\n}","// require('./src/base/weapp-adapter.js')\nconst Matter = require('./src/base/matter.js')\nimport { App } from './App.js'\n\n// 同时兼容H5模式和微信小游戏模式\nconst canvas = typeof wx == 'undefined' ? document.getElementById('app') : wx.createCanvas()\n// H5网页游戏模式\nif (typeof wx == 'undefined') {\n  canvas.width = 375\n  canvas.height = 667\n}\n// 微信小游戏模式\nelse {\n  window.Image = () => wx.createImage()\n  window.Audio = () => wx.createInnerAudioContext()\n}\n// 初始化物理引擎\nconst engine = Matter.Engine.create({\n  enableSleeping: true\n})\nconst render = Matter.Render.create({\n  canvas: canvas,\n  engine: engine,\n  options: {\n    width: canvas.width,\n    height: canvas.height,\n    background: './res/background.png', // transparent\n    wireframes: false,\n    showAngleIndicator: false\n  }\n})\nMatter.Engine.run(engine)\n// Matter.Render.run(render)\n\n// 初始化游戏\nconst physics = { Matter, engine, canvas, render }\nnew App(canvas, physics)\n\n\n\n\n\n\n\n\n\n// const A = {\n//   x: 0,\n//   y: 0\n// }\n\n// const B = {\n//   x: 150,\n//   y: 0\n// }\n\n// var context = canvas.getContext('2d')\n// context.fillStyle = 'red'\n\n// var engine = Matter.Engine.create();\n\n// var boxA = Matter.Bodies.rectangle(A.x, A.y, 30, 30);\n// var boxB = Matter.Bodies.rectangle(B.x, B.y, 60, 60);\n// var ground = Matter.Bodies.rectangle(0, canvas.height - 60, canvas.width, 10, { isStatic: true });\n\n// Matter.World.add(engine.world, [boxA, boxB, ground]);\n// setInterval(function () {\n//   context.clearRect(0, 0, canvas.width, canvas.height)\n//   Matter.Events.trigger(engine, 'tick', { timestamp: engine.timing.timestamp })\n//   Matter.Engine.update(engine, engine.timing.delta)\n//   Matter.Events.trigger(engine, 'afterTick', { timestamp: engine.timing.timestamp })\n//   console.info(boxA)\n//   context.fillRect(boxA.position.x, boxA.position.y, 30, 30)\n//   context.fillRect(boxB.position.x, boxB.position.y, 60, 60)\n//   context.fillRect(0, canvas.height - 60, canvas.width, 10)\n//   // console.log('boxA', boxA.position);\n//   // console.log('boxB', boxB.position);\n// }, 50)"]}